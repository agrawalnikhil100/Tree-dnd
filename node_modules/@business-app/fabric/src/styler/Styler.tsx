/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */

import * as React from 'react';

import { createTheme } from '@fluentui/react/lib/Styling';
import { Customizer, merge } from '@fluentui/react/lib/Utilities';

import * as Themes from '../utilities/themes';
import { BusinessAppStyles } from './BusinessAppStyles';
import { icons } from './Icons';

import { StylerProps } from './Styler.types';

export { BusinessAppStyles } from './BusinessAppStyles';
export { FabricDarkStyles } from './FabricDarkStyles';

export class Styler extends React.Component<StylerProps> {
  public static defaultProps = {
    theme: Themes.DefaultTheme,
    themeOverrides: {}
  };

  constructor(props: StylerProps) {
    super(props);

    const { iconSubset, iconOptions } = this.props;
    icons(iconSubset, iconOptions);
  }

  public render = (): JSX.Element => {
    const { children, theme, themeOverrides, scopedSettings } = this.props;

    const mergedThemeOptions = merge(theme, themeOverrides);
    const mergedScopedSettings = merge(BusinessAppStyles, scopedSettings);

    const customizations = {
      settings: { theme: createTheme(mergedThemeOptions) },
      scopedSettings: mergedScopedSettings
    };

    return <Customizer {...customizations}>{children}</Customizer>;
  };
}
