/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */

import * as React from 'react';

import { Resizer } from '../Resizer';
import { PrimaryButton } from '@fluentui/react/lib/Button';
import { ResizerLocation } from '../Resizer.types';
import { CSSProperties } from 'react';

interface IResizableButtonProps {
  initialSize: number;
}

interface IResizableButtonState {
  width: number;
  height: number;
}

export function ResizerBasicExample() {
  return <ResizableButton initialSize={350} />;
}

const hiddenAccessibleDivStyles: CSSProperties = {
  overflow: 'hidden',
  position: 'absolute',
  top: -1000,
  left: -1000,
  width: 0,
  height: 0
};

class ResizableButton extends React.Component<IResizableButtonProps, IResizableButtonState> {
  public constructor(props: IResizableButtonProps) {
    super(props);
    this.state = {
      width: props.initialSize,
      height: 148
    };
  }
  public render() {
    return (
      <>
        <div style={{ position: 'relative', width: this.state.width, height: 150 }}>
          <PrimaryButton
            style={{ width: '100%', height: '100%' }}
            text="Hover on the right edge to see the resizer"
          />
          <Resizer
            ariaLabel={'Use the left and right arrow keys to resize the example'}
            location={ResizerLocation.Right}
            size={this.state.width}
            onSizeChanged={width => this.setState({ width })}
            minSize={100}
            maxSize={1000}
          />
        </div>

        <div
          style={{
            marginTop: 20,
            position: 'relative',
            width: this.props.initialSize,
            height: this.state.height
          }}
        >
          <PrimaryButton
            style={{ width: '100%', height: '100%' }}
            text="Hover on the bottom edge to see the resizer"
          />
          <Resizer
            ariaLabel={'Use the up and down arrow keys to resize the example'}
            location={ResizerLocation.Bottom}
            size={this.state.height}
            onSizeChanged={height => this.setState({ height })}
            minSize={100}
            maxSize={1000}
          />
        </div>

        {/* Announce to the screen reader the changes taking place */}
        <div aria-live="assertive" aria-atomic="true" style={hiddenAccessibleDivStyles}>
          {`Example resized to ${this.state.height} height`}
        </div>
        <div aria-live="assertive" aria-atomic="true" style={hiddenAccessibleDivStyles}>
          {`Example resized to ${this.state.width} width`}
        </div>
      </>
    );
  }
}
