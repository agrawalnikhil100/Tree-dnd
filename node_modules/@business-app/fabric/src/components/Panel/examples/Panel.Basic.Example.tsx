/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */

import { ChoiceGroup, IChoiceGroupOption } from '@fluentui/react/lib/ChoiceGroup';
import { MessageBarType } from '@fluentui/react/lib/MessageBar';
import { Toggle } from '@fluentui/react/lib/Toggle';
import * as React from 'react';
import { Panel } from '..';
import { IDismissDialog, ILoadingOverlay, IMessageBar } from '../Panel.types';

export class PanelBasicExample extends React.Component<
  {},
  {
    open: boolean;
    loadingOverlay: ILoadingOverlay;
    showDismissDialog: boolean;
    dismissDialog: IDismissDialog;
    dismissOnEscape: boolean;
    messageBar: IMessageBar;
    showCustomFooterContent: boolean;
  }
> {
  constructor(props: {}) {
    super(props);

    this.state = {
      open: false,
      loadingOverlay: null,
      showDismissDialog: false,
      dismissDialog: {
        title: 'Discard changes',
        subtext: 'Are you sure you want to discard changes?',
        confirmButtonText: 'Discard',
        cancelButtonText: 'Cancel'
      },
      dismissOnEscape: false,
      messageBar: null,
      showCustomFooterContent: false
    };
  }

  public render(): JSX.Element {
    const {
      open,
      loadingOverlay,
      dismissDialog,
      showCustomFooterContent,
      showDismissDialog,
      dismissOnEscape,
      messageBar
    } = this.state;
    return (
      <div>
        <Toggle
          label="Make panel changes"
          checked={showDismissDialog}
          onChanged={hasChanged => this.setState({ showDismissDialog: hasChanged })}
          onText="Changed"
          offText="Unchanged"
        />
        <Toggle
          label="Dismiss on escape"
          checked={dismissOnEscape}
          onChanged={shouldDismissOnEscape => this.setState({ dismissOnEscape: shouldDismissOnEscape })}
          onText="Yes"
          offText="No"
        />
        <Toggle
          label="Show custom footer content"
          checked={showCustomFooterContent}
          onChanged={shouldShowCustomFooterContent =>
            this.setState({ showCustomFooterContent: shouldShowCustomFooterContent })
          }
          onText="Yes"
          offText="No"
        />
        <Toggle
          label="Show panel"
          checked={open}
          onChanged={isOpen => this.setState({ open: isOpen })}
          onText="Visible"
          offText="Hidden"
        />
        <ChoiceGroup
          defaultSelectedKey="normal"
          options={[
            {
              key: 'normal',
              text: 'Normal State'
            } as IChoiceGroupOption,
            {
              key: 'loading',
              text: 'Loading State'
            },
            {
              key: 'success',
              text: 'Success State'
            },
            {
              key: 'error',
              text: 'Error State'
            }
          ]}
          onChange={this._changeState}
          label="Select a State"
          required={false}
        />

        <div className="ba-Panel-BasicExample">
          <Panel
            isOpen={open}
            onDismiss={this._onDismiss}
            headerText="Example panel"
            footerButtons={[
              {
                dismissableOnClick: () => null,
                text: 'Done',
                primary: true
              },
              {
                dismissableOnClick: () => null,
                text: 'Cancel'
              }
            ]}
            loadingOverlay={loadingOverlay}
            showDismissDialog={showDismissDialog}
            dismissDialog={dismissDialog}
            dismissOnEscape={dismissOnEscape}
            messageBar={messageBar}
            onRenderFooterContent={showCustomFooterContent ? customFooterContentAboveButtons : undefined}
          >
            <span>Content goes here.</span>
          </Panel>
        </div>
      </div>
    );
  }

  private _onDismiss = (): void => {
    this.setState({ open: false });
  };

  private _changeState = (ev: React.FormEvent<HTMLInputElement>, option: IChoiceGroupOption): void => {
    switch (option.key) {
      case 'loading':
        this.setState({
          loadingOverlay: { loadingText: 'Loading...' }
        });
        break;
      case 'success':
        this.setState({
          loadingOverlay: null,
          messageBar: {
            messageBarProps: { messageBarType: MessageBarType.success },
            onRenderBody: () => <span>Success message goes here </span>
          }
        });
        break;
      case 'error':
        this.setState({
          loadingOverlay: null,
          messageBar: {
            messageBarProps: { messageBarType: MessageBarType.error },
            onRenderBody: () => <span>Error message goes here </span>
          }
        });
        break;
      default:
        this.setState({ loadingOverlay: null, messageBar: null });
        break;
    }
  };
}

const customFooterContentAboveButtons: React.StatelessComponent<{}> = (): JSX.Element => {
  return <p>You can add some custom footer content too.</p>;
};
