/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */

import * as React from 'react';
import { Carousel, ICarouselStyles } from '..';
import { getMockContent } from './Carousel.Example.Data';

interface CarouselButtonsClickEventExampleState {
  skipCount: number;
  doneCount: number;
  nextCount: number;
  previousCount: number;
}

export class CarouselButtonClickExample extends React.Component<{}, CarouselButtonsClickEventExampleState> {
  constructor(props: {}) {
    super(props);

    this.state = {
      skipCount: 0,
      doneCount: 0,
      nextCount: 0,
      previousCount: 0
    };
  }

  public render(): JSX.Element {
    const { skipCount, doneCount, nextCount, previousCount } = this.state;
    const customCarouselStyles: ICarouselStyles = {
      root: {
        flexDirection: 'column'
      },
      subComponentStyles: {
        tooltipControl: {
          root: {
            position: 'initial',
            transform: 'initial',
            marginRight: 8
          }
        },
        control: {
          root: {
            borderRadius: 'initial',
            paddingLeft: 24,
            paddingRight: 24,
            selectors: {
              '&.ba-Carousel-control-next': {
                borderRadius: 2
              },
              '&.ba-Carousel-control-previous': {
                borderRadius: 2
              }
            }
          }
        },
        indicator: {},
        toggle: {}
      },
      indicatorsWrapper: {
        position: 'initial',
        transform: 'initial'
      },
      controlsWrapper: {
        margin: 24
      }
    };

    return (
      <>
        <div>{`Skip button count: ${skipCount}`}</div>
        <div>{`Done button count: ${doneCount}`}</div>
        <div>{`Next button count: ${nextCount}`}</div>
        <div>{`Previous button count: ${previousCount}`}</div>
        <Carousel
          styles={customCarouselStyles}
          items={getMockContent()}
          useControlLabels={true}
          disableNavigationLoop={true}
          navPreviousButtonAriaLabel="Previous"
          navNextButtonAriaLabel="Next"
          indicatorButtonsAriaLabel={['Item 1', 'Item 2', 'Item 3', 'Item 4']}
          playButtonAriaLabel="Play"
          pauseButtonAriaLabel="Pause"
          skipButton={{
            onSkip: this._onSkip,
            skipButtonAriaLabel: 'Skip',
            skipButtonLabel: 'Skip'
          }}
          doneButton={{
            onDone: this._onDismiss,
            doneButtonAriaLabel: 'Done',
            doneButtonLabel: 'Done'
          }}
          onNext={this._onNext}
          onPrevious={this._onPrevious}
          orderIndicatorsBeforeControls={true}
        />
      </>
    );
  }

  private _onSkip = () => {
    const { skipCount } = this.state;
    this.setState({ skipCount: skipCount + 1 });
  };

  private _onDismiss = () => {
    const { doneCount } = this.state;
    this.setState({ doneCount: doneCount + 1 });
  };

  private _onNext = () => {
    const { nextCount } = this.state;
    this.setState({ nextCount: nextCount + 1 });
  };

  private _onPrevious = () => {
    const { previousCount } = this.state;
    this.setState({ previousCount: previousCount + 1 });
  };
}
