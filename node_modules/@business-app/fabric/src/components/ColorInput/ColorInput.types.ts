/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */

import { IButtonProps } from '@fluentui/react/lib/Button';
import { IColorPickerProps } from '@fluentui/react/lib/ColorPicker';
import { IStyle, ITheme } from '@fluentui/react/lib/Styling';
import { ITextFieldProps } from '@fluentui/react/lib/TextField';
import { ITooltipHostProps } from '@fluentui/react/lib/Tooltip';
import { IStyleFunctionOrObject } from '@fluentui/react/lib/Utilities';

export interface IColorInputProps {
  /**
   * Label for color input.
   */
  label: string;

  /**
   * Additional properties to pass through for color picker.
   */
  colorPickerProps: IColorPickerProps;

  /**
   * Additional properties to pass through for Tooltip.
   */
  tooltipProps?: ITooltipHostProps;

  /**
   * Additional properties to pass through for Icon.
   */
  tooltipIconProps?: IButtonProps;

  /**
   * Additional properties to pass through for Color box.
   */
  colorBoxProps?: IButtonProps;

  /**
   * Additional properties to pass through for Color text field.
   */
  colorTextFieldProps?: ITextFieldProps;

  /**
   * Custom handle to show color picker on color box click.
   */
  showColorPicker?: boolean;

  /**
   * Custom handle to scroll to bottom when color picker is opened.
   */
  scrollToBottom?: boolean;

  /**
   * Theme provided by High-Order Component.
   */
  theme?: ITheme;

  /**
   * Call to provide customized styling that will layer on top of the variant rules.
   */
  styles?: IStyleFunctionOrObject<IColorInputStyleProps, IColorInputStyles>;
}

export interface IColorInputStyles {
  /**
   * Style for the root element of color input.
   */
  root: IStyle;

  /**
   * Style for the label container.
   */
  labelContainer: IStyle;

  /**
   * Style for the label.
   */
  label: IStyle;

  /**
   * Style for the Tooltip Icon.
   */
  iconTooltip: IStyle;

  /**
   * Style for the Container.
   */
  container: IStyle;

  /**
   * Style for the Color Box.
   */
  colorBox: IStyle;

  /**
   * Style for the Color Box when disabled.
   */
  colorBoxDisabled: IStyle;

  /**
   * Style for the Color Box Svg.
   */
  colorBoxSvg: IStyle;

  /**
   * Style for the Color text field.
   */
  colorTextField: IStyle;

  /**
   * Style for the Color picker.
   */
  colorPicker: IStyle;
}

export type IColorInputStyleProps = Pick<IColorInputProps, 'theme'>;
