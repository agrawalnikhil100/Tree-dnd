/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */

import HighlightedTextBasicExampleCode from '!!raw-loader!../../../src/components/HighlightedText/examples/HighlightedText.Basic.Example.tsx';
import HighlightedTextCharactersExampleCode from '!!raw-loader!../../../src/components/HighlightedText/examples/HighlightedText.Characters.Example.tsx';
import HighlightedTextStyledExampleCode from '!!raw-loader!../../../src/components/HighlightedText/examples/HighlightedText.Styled.Example.tsx';
import HighlightedTextPropertiesTableSet from '!!raw-loader!../../../src/components/HighlightedText/HighlightedText.types.ts';

import {
  ComponentPage,
  ExampleCard,
  IComponentDemoPageProps,
  PropertiesTableSet
} from '@fluentui/react-docsite-components';
import { Link } from '@fluentui/react/lib/Link';
import * as React from 'react';
import { HighlightedTextBasicExample } from './examples/HighlightedText.Basic.Example';
import { HighlightedTextCharactersExample } from './examples/HighlightedText.Characters.Example';
import { HighlightedTextStyledExample } from './examples/HighlightedText.Styled.Example';

export class HighlightedTextPage extends React.Component<IComponentDemoPageProps, {}> {
  public render(): JSX.Element {
    return (
      <ComponentPage
        styles={{ navigation: { display: 'none' } }}
        title={'HighlightedText'}
        componentName="HighlightedTextExample"
        exampleCards={
          <div>
            <ExampleCard title="Basic highlighted text" code={HighlightedTextBasicExampleCode}>
              <HighlightedTextBasicExample />
            </ExampleCard>
            <ExampleCard title="Styled highlighted text" code={HighlightedTextStyledExampleCode}>
              <HighlightedTextStyledExample />
            </ExampleCard>
            <ExampleCard
              title="Multi-byte characters, RTL, and helpers"
              code={HighlightedTextCharactersExampleCode}
            >
              <HighlightedTextCharactersExample />
            </ExampleCard>
          </div>
        }
        propertiesTables={<PropertiesTableSet sources={[HighlightedTextPropertiesTableSet]} />}
        overview={
          <div>
            <p>
              HighlightedText renders a string with highlights at the specified indices and lengths.
              Highlights are permitted to overlap.
            </p>
          </div>
        }
        accessibility={
          <div>
            <p>
              This component is accessible in Microsoft Edge, Chrome, and Firefox with Narrator. Localized
              labels for the start and end of a highlight will be attached to each highlight. It is not
              accessible in IE11 due to pseudo-elements not being exposed to the accessibility tree.
            </p>
            <p>
              See recommended approach on MDN&nbsp;
              <Link
                href={'https://developer.mozilla.org/en-US/docs/Web/HTML/Element/mark#Accessibility_concerns'}
              >
                here
              </Link>
              .
            </p>
          </div>
        }
        isHeaderVisible={this.props.isHeaderVisible}
      />
    );
  }
}
