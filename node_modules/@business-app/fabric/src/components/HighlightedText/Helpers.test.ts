/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */

import { calculateWordHighlights } from './Helpers';
import { IHighlightedTextProps } from './HighlightedText.types';

type Highlight = IHighlightedTextProps['highlights'][0];

describe('HighlightedText/Helpers', () => {
  describe('calculateWordHighlights', () => {
    it('correctly extracts indices given overlaps', () => {
      const result = calculateWordHighlights('hi hihih', ['hi', 'hih']).sort(sortArray);
      const expected = [
        // match "hi"
        {
          startIndex: 0,
          length: 2
        },
        {
          startIndex: 3,
          length: 2
        },
        {
          startIndex: 5,
          length: 2
        },
        // match "hih"
        {
          startIndex: 3,
          length: 3
        },
        {
          startIndex: 5,
          length: 3
        }
      ].sort(sortArray);

      expect(result).toEqual(expected);
    });

    it('correctly handles multi-byte characters', () => {
      const result = calculateWordHighlights('ðŸ¤  hi ðŸ¤ ', ['hi', 'ðŸ¤ ']).sort(sortArray);
      const expected = [
        { startIndex: 0, length: 2 },
        { startIndex: 3, length: 2 },
        { startIndex: 6, length: 2 }
      ].sort(sortArray);

      expect(result).toEqual(expected);
    });

    it('is case sensitive by default', () => {
      const result = calculateWordHighlights('Hi hi', ['hi']).sort(sortArray);
      const expected = [{ startIndex: 3, length: 2 }].sort(sortArray);

      expect(result).toEqual(expected);
    });

    it('allows for overriding case sensitivity', () => {
      {
        const result = calculateWordHighlights('Hi hi', ['hi'], true).sort(sortArray);
        const expected = [
          { startIndex: 0, length: 2 },
          { startIndex: 3, length: 2 }
        ].sort(sortArray);

        expect(result).toEqual(expected);
      }

      {
        const result = calculateWordHighlights('Hi hi', ['hi'], false).sort(sortArray);
        const expected = [{ startIndex: 3, length: 2 }].sort(sortArray);

        expect(result).toEqual(expected);
      }
    });

    const sortArray = (a: Highlight, b: Highlight) => {
      const startDifference = a.startIndex - b.startIndex;
      if (startDifference === 0) {
        return a.length - b.length;
      }
      return startDifference;
    };
  });
});
