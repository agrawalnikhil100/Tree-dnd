/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */

import { IStyle } from '@fluentui/style-utilities';
import {
  IHighlightedTextProps,
  IHighlightedTextStyleProps,
  IHighlightedTextStyles
} from './HighlightedText.types';

export const getStyles: (props: IHighlightedTextStyleProps) => IHighlightedTextStyles = props => {
  return {
    highlights: {
      backgroundColor: '#f3c3ea',
      outline: '1px solid transparent'
    }
  };
};

// <mark> tags aren't handled well by screen-readers, we need pseudoelements to handle them
// see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/mark#Accessibility_concerns
// we aren't using <mark> any more because Windows High-Contrast Mode doesn't handle font color correctly,
// but the general principle applies
const pseudoStyles: IStyle = {
  height: '0px',
  overflow: 'hidden',
  position: 'absolute',
  whiteSpace: 'nowrap',
  width: '0px'
};

/** Get styles to apply to the highlights portion of the IHighlightedTextStyles. */
export const getAccessibilityHighlightStyles: (
  labels: IHighlightedTextProps['labels']
) => IStyle = labels => {
  return {
    selectors: {
      '::before': {
        ...pseudoStyles,
        content: `" ;${labels.beginHighlightedText}; "`
      },
      '::after': {
        ...pseudoStyles,
        content: `" ;${labels.endHighlightedText}; "`
      }
    }
  };
};
