/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */

import * as Enzyme from 'enzyme';
import 'jest';
import { getTheme } from '@fluentui/react/lib/Styling';
import * as React from 'react';

import { EmptyStateBase } from './EmptyState.base';
import { styles as getStyles } from './EmptyState.styles';
import { IEmptyStateProps } from './EmptyState.types';

const doNothing = { onClick: () => undefined };

describe('EmptyState', () => {
  let wrapper: Enzyme.ReactWrapper;
  let props: IEmptyStateProps;
  beforeEach(() => {
    props = {
      styles: getStyles,
      theme: getTheme()
    };
  });
  afterEach(() => wrapper.unmount());

  it('should not unexpectedly change', () => {
    wrapper = Enzyme.mount(
      <EmptyStateBase
        {...props}
        icon={'Filter'}
        primaryMessage={'A learn more'}
        secondaryMessage={["There's no stuff here", 'second paragraph']}
        callToActionText={'Make something here'}
        callToActionProps={doNothing}
        learnMoreLabel={'Learn more'}
        learnMoreProps={doNothing}
      />
    );
    expect(wrapper).toMatchSnapshot();
  });

  it('should place secondary messages optionally', () => {
    wrapper = Enzyme.mount(
      <EmptyStateBase
        {...props}
        icon={'Filter'}
        primaryMessage={'test'}
        secondaryMessage={['secondary', 'secondary']}
      />
    );

    expect(wrapper.find('.ba-EmptyState-PrimaryMessage').length).toBe(1);
    expect(wrapper.find('.ba-EmptyState-SecondaryMessage').length).toBe(2);
    expect(wrapper.find('.ms-Button').length).toBe(0);
  });

  it('should place call to actions optionally', () => {
    wrapper = Enzyme.mount(
      <EmptyStateBase
        {...props}
        icon={'Filter'}
        primaryMessage={'test'}
        callToActionProps={{ text: 'test', onClick: () => undefined }}
        callToActionText={'test'}
      />
    );

    expect(wrapper.find('.ba-EmptyState-PrimaryMessage').length).toBe(1);
    expect(wrapper.find('.ba-EmptyState-SecondaryMessage').length).toBe(0);
    expect(wrapper.find('.ms-Button').length).toBe(1);
  });

  it('should place learn more optionally', () => {
    wrapper = Enzyme.mount(
      <EmptyStateBase
        {...props}
        icon={'Filter'}
        primaryMessage={'test'}
        secondaryMessage={['secondary']}
        learnMoreProps={{ onClick: () => undefined }}
        learnMoreLabel={'test'}
      />
    );

    expect(wrapper.find('.ba-EmptyState-PrimaryMessage').length).toBe(1);
    expect(wrapper.find('.ba-EmptyState-SecondaryMessage').length).toBe(1);
    expect(wrapper.find('LinkBase').length).toBe(1);
  });

  it('should place only the primaryMessage with no extra properties', () => {
    wrapper = Enzyme.mount(<EmptyStateBase {...props} icon={'Filter'} primaryMessage={'test'} />);

    expect(wrapper.find('.ba-EmptyState-PrimaryMessage').length).toBe(1);
    expect(wrapper.find('.ba-EmptyState-SecondaryMessage').length).toBe(0);
    expect(wrapper.find('button').length).toBe(0);
  });
});
