/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */

import { ComponentPage, ExampleCard, PropertiesTableSet } from '@fluentui/react-docsite-components';
import * as React from 'react';
import { ToolboxConditionallyShowToolsExample } from './examples/Toolbox.ConditionallyShowTools.Example';
import { ToolboxControlledExample } from './examples/Toolbox.Controlled.Example';
import { ToolboxUncontrolledExample } from './examples/Toolbox.Uncontrolled.Example';
import { ToolboxUncontrolledDefaultOpenExample } from './examples/Toolbox.UncontrolledDefaultOpen.Example';
import { ToolboxCustomLinksContainerExample } from './examples/Toolbox.CustomLinksContainer.Example';

import ToolboxConditionallyShowToolsExampleCode from '!!raw-loader!../../../src/components/Toolbox/examples/Toolbox.ConditionallyShowTools.Example.tsx';
import ToolboxControlledExampleCode from '!!raw-loader!../../../src/components/Toolbox/examples/Toolbox.Controlled.Example.tsx';
import ToolboxUncontrolledExampleCode from '!!raw-loader!../../../src/components/Toolbox/examples/Toolbox.Uncontrolled.Example.tsx';
import ToolboxUncontrolledDefaultOpenExampleCode from '!!raw-loader!../../../src/components/Toolbox/examples/Toolbox.UncontrolledDefaultOpen.Example.tsx';
import ToolboxCustomLinksContainerExampleCode from '!!raw-loader!../../../src/components/Toolbox/examples/Toolbox.CustomLinksContainer.Example.tsx';
import ToolboxPropertiesTableSet from '!!raw-loader!../../../src/components/Toolbox/Toolbox.types.ts';

export class ToolboxPage extends React.Component<{}, {}> {
  public render(): JSX.Element {
    return (
      <ComponentPage
        styles={{ navigation: { display: 'none' } }}
        title={'Toolbox'}
        componentName="Toolbox"
        exampleCards={
          <div>
            <ExampleCard
              title="Uncontrolled Toolbox example (manages its own selection state)"
              code={ToolboxUncontrolledExampleCode}
            >
              <ToolboxUncontrolledExample />
            </ExampleCard>
            <ExampleCard
              title="Uncontrolled Toolbox example with drawer open initially"
              code={ToolboxUncontrolledDefaultOpenExampleCode}
            >
              <ToolboxUncontrolledDefaultOpenExample />
            </ExampleCard>
            <ExampleCard
              title="Controlled Toolbox example (parent manages selection)"
              code={ToolboxControlledExampleCode}
            >
              <ToolboxControlledExample />
            </ExampleCard>
            <ExampleCard
              title="Conditionally shown/hide or enable/disable Toolbox tools"
              code={ToolboxConditionallyShowToolsExampleCode}
            >
              <ToolboxConditionallyShowToolsExample />
            </ExampleCard>
            <ExampleCard
              title="Toolbox with custom links container example"
              code={ToolboxCustomLinksContainerExampleCode}
            >
              <ToolboxCustomLinksContainerExample />
            </ExampleCard>
          </div>
        }
        propertiesTables={<PropertiesTableSet sources={[ToolboxPropertiesTableSet]} />}
        overview={
          <div>
            <p>
              The Toolbox gives you a sidebar to choose between different panels. The panel (or "drawer") can
              be collapsed to give the user more space to interact with the main work surface. The user can
              toggle between just seeing icons for the different tools and seeing full names for the different
              tools alongside the icons.
              <br />
              <br />
              While this control doesn't use the Fabric Pivot, it is very similar to it conceptually (but
              rotated 90 degrees and turned into a sidebar). Both controls allow you to click tabs selecting
              between different content to view.
              <br />
              <br />
              See <a href="https://developer.microsoft.com/en-us/fabric#/components/pivot">Fabric Pivot</a>.
            </p>
          </div>
        }
        isHeaderVisible={true}
      />
    );
  }
}
