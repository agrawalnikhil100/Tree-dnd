/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */

import { PrimaryButton } from '@fluentui/react/lib/Button';
import { FocusZone, IFocusZoneProps } from '@fluentui/react/lib/FocusZone';
import { getTheme, mergeStyles } from '@fluentui/react/lib/Styling';
import { IComponentAsProps } from '@fluentui/react/lib/Utilities';
import * as React from 'react';

import { Toolbox } from '../Toolbox';
import { ToolboxItem } from '../ToolboxItem';

export interface IToolboxUncontrolledExampleState {
  userChosenSetting: string;
}

export class ToolboxCustomLinksContainerExample extends React.Component<
  {},
  IToolboxUncontrolledExampleState
> {
  constructor(props: {}) {
    super(props);
    this.state = {
      userChosenSetting: ''
    };
  }

  public render() {
    const toolboxItemRootStyle = mergeStyles({
      width: '100%',
      padding: 16
    });
    const buttonStyle = mergeStyles({
      marginRight: 16
    });

    return (
      <>
        <Toolbox
          strings={{
            expandTooltip: 'Expand',
            collapseTooltip: 'Collapse',
            closeTooltip: 'Close'
          }}
          styles={{
            root: {
              height: 320
            }
          }}
          toolboxLinksContainerAs={CustomToolboxLinksContainer}
        >
          <ToolboxItem headerText={'Print'} itemKey={'item1'} itemIcon={'Print'}>
            <div className={toolboxItemRootStyle}>
              <PrimaryButton className={buttonStyle}>{'Print something'}</PrimaryButton>
            </div>
          </ToolboxItem>
          <ToolboxItem headerText={'Eraser'} itemKey={'item2'} itemIcon={'EraseTool'}>
            <div className={toolboxItemRootStyle}>
              <PrimaryButton className={buttonStyle}>{'Erase all bugs'}</PrimaryButton>
            </div>
          </ToolboxItem>
          <ToolboxItem headerText={'Print'} itemKey={'item3'} itemIcon={'Print'}>
            <div className={toolboxItemRootStyle}>
              <PrimaryButton className={buttonStyle}>{'Print something'}</PrimaryButton>
            </div>
          </ToolboxItem>
          <ToolboxItem headerText={'Eraser'} itemKey={'item4'} itemIcon={'EraseTool'}>
            <div className={toolboxItemRootStyle}>
              <PrimaryButton className={buttonStyle}>{'Erase all bugs'}</PrimaryButton>
            </div>
          </ToolboxItem>
          <ToolboxItem headerText={'Print'} itemKey={'item5'} itemIcon={'Print'}>
            <div className={toolboxItemRootStyle}>
              <PrimaryButton className={buttonStyle}>{'Print something'}</PrimaryButton>
            </div>
          </ToolboxItem>
          <ToolboxItem headerText={'Eraser'} itemKey={'item6'} itemIcon={'EraseTool'}>
            <div className={toolboxItemRootStyle}>
              <PrimaryButton className={buttonStyle}>{'Erase all bugs'}</PrimaryButton>
            </div>
          </ToolboxItem>
          <ToolboxItem headerText={'Print'} itemKey={'item7'} itemIcon={'Print'}>
            <div className={toolboxItemRootStyle}>
              <PrimaryButton className={buttonStyle}>{'Print something'}</PrimaryButton>
            </div>
          </ToolboxItem>
          <ToolboxItem headerText={'Eraser'} itemKey={'item8'} itemIcon={'EraseTool'}>
            <div className={toolboxItemRootStyle}>
              <PrimaryButton className={buttonStyle}>{'Erase all bugs'}</PrimaryButton>
            </div>
          </ToolboxItem>
        </Toolbox>
      </>
    );
  }
}

const CustomToolboxLinksContainer: React.FC<IComponentAsProps<IFocusZoneProps>> = props => {
  const theme = getTheme();
  const containerStyles = mergeStyles({
    border: `8px ${theme.palette.themePrimary} solid`,
    overflowY: 'scroll'
  });

  const InnerComponent = props.defaultRender ?? FocusZone;

  return (
    <div className={containerStyles}>
      <InnerComponent {...props} />
    </div>
  );
};
