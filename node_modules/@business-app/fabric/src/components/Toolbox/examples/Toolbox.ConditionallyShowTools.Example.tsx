/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */

import { mergeStyles } from '@fluentui/react/lib/Styling';
import { Toggle } from '@fluentui/react/lib/Toggle';
import * as React from 'react';
import { Toolbox } from '../Toolbox';
import { ToolboxItem } from '../ToolboxItem';

export interface IToolboxConditionallyShowToolsExampleState {
  showSecondItem: boolean;
  showThirdItem: boolean;
  disableSecondItem: boolean;
}

export class ToolboxConditionallyShowToolsExample extends React.Component<
  {},
  IToolboxConditionallyShowToolsExampleState
> {
  public constructor(props: {}) {
    super(props);
    this.state = {
      showSecondItem: false,
      showThirdItem: false,
      disableSecondItem: false
    };
  }

  public render() {
    const { showSecondItem, showThirdItem, disableSecondItem } = this.state;

    const toolboxItemRootStyle = mergeStyles({
      width: '100%',
      padding: 16
    });

    return (
      <>
        <Toggle
          onChange={(ev, checked) => this.setState({ showSecondItem: checked })}
          defaultChecked={showSecondItem}
          onText={'true'}
          offText={'false'}
          label={'Show second tool'}
        />
        <Toggle
          onChange={(ev, checked) => this.setState({ showThirdItem: checked })}
          defaultChecked={showThirdItem}
          onText={'true'}
          offText={'false'}
          label={'Show third tool'}
        />
        <Toggle
          onChange={(ev, checked) => this.setState({ disableSecondItem: checked })}
          defaultChecked={showThirdItem}
          onText={'true'}
          offText={'false'}
          label={'Disable second tool'}
        />
        <Toolbox
          strings={{
            expandTooltip: 'Expand',
            collapseTooltip: 'Collapse',
            closeTooltip: 'Close'
          }}
          styles={{
            root: {
              height: 320
            }
          }}
        >
          <ToolboxItem headerText={'header1'} itemIcon={'Play'} itemKey="key1">
            <div className={toolboxItemRootStyle}>{'Item 1'}</div>
          </ToolboxItem>
          {showSecondItem && (
            <ToolboxItem
              headerText={'header2'}
              itemIcon={'MediaAdd'}
              itemKey="key2"
              disabled={disableSecondItem}
            >
              <div className={toolboxItemRootStyle}>{'Item 2'}</div>
            </ToolboxItem>
          )}
          {showThirdItem && (
            <ToolboxItem headerText={'header3'} itemIcon={'Settings'} itemKey="key3">
              <div className={toolboxItemRootStyle}>{'Item 3'}</div>
            </ToolboxItem>
          )}
        </Toolbox>
      </>
    );
  }
}
