/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */

import { PrimaryButton } from '@fluentui/react/lib/Button';
import { ChoiceGroup, IChoiceGroupOption } from '@fluentui/react/lib/ChoiceGroup';
import { mergeStyles } from '@fluentui/react/lib/Styling';
import * as React from 'react';

import { Toolbox } from '../Toolbox';
import { ToolboxItem } from '../ToolboxItem';

export interface IToolboxUncontrolledDefaultOpenExampleState {
  userChosenSetting: string;
}

export class ToolboxUncontrolledDefaultOpenExample extends React.Component<
  {},
  IToolboxUncontrolledDefaultOpenExampleState
> {
  constructor(props: {}) {
    super(props);
    this.state = {
      userChosenSetting: ''
    };
  }

  public render() {
    const toolboxItemRootStyle = mergeStyles({
      width: '100%',
      padding: 16
    });
    const buttonStyle = mergeStyles({
      marginRight: 16
    });

    return (
      <>
        <Toolbox
          initialSelectedKey={'item1'}
          strings={{
            expandTooltip: 'Expand',
            collapseTooltip: 'Collapse',
            closeTooltip: 'Close'
          }}
          styles={{
            root: {
              height: 320
            }
          }}
        >
          <ToolboxItem headerText={'Print'} itemKey={'item1'} itemIcon={'Print'}>
            <div className={toolboxItemRootStyle}>
              <PrimaryButton className={buttonStyle}>{'Print something'}</PrimaryButton>
            </div>
          </ToolboxItem>
          <ToolboxItem headerText={'Eraser'} itemKey={'item2'} itemIcon={'EraseTool'}>
            <div className={toolboxItemRootStyle}>
              <PrimaryButton className={buttonStyle}>{'Erase all bugs'}</PrimaryButton>
            </div>
          </ToolboxItem>
          <ToolboxItem headerText={'Settings'} itemKey={'item3'} itemIcon={'Settings'}>
            <div className={toolboxItemRootStyle}>
              <ChoiceGroup
                selectedKey={this.state.userChosenSetting}
                onChange={this._onSettingChangedCallback}
                label={'Choose your setting'}
                options={[
                  {
                    key: 'item1',
                    text: 'Setting 1'
                  },
                  {
                    key: 'item2',
                    text: 'Setting 2'
                  }
                ]}
              />
            </div>
          </ToolboxItem>
        </Toolbox>
      </>
    );
  }

  private _onSettingChangedCallback = (event: React.FormEvent, option: IChoiceGroupOption): void => {
    this.setState({ userChosenSetting: option.key });
  };
}
