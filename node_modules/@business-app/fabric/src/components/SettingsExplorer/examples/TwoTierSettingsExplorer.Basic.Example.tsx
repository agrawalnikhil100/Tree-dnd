/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
import { DefaultButton } from '@fluentui/react/lib/Button';
import { Dropdown } from '@fluentui/react/lib/Dropdown';
import { Modal } from '@fluentui/react/lib/Modal';
import { mergeStyles } from '@fluentui/react/lib/Styling';
import * as React from 'react';
import { SettingsExplorer } from '../SettingsExplorer';
import { SettingsItem } from '../SettingsItem';
import { SettingsPage } from '../SettingsPage';
import { TwoTierSettingsExplorer } from '../TwoTierSettingsExplorer';
import { dateFormatOptions, languageOptions, timeFormatOptions } from './ExampleInput';

interface ITwoTierSettingsExplorerExampleState {
  modalOpen: boolean;
}

export class TwoTierSettingsExplorerBasicExample extends React.Component<
  {},
  ITwoTierSettingsExplorerExampleState
> {
  constructor(props: {}) {
    super(props);

    this.state = { modalOpen: false };
  }

  public render(): JSX.Element {
    return (
      <div>
        <DefaultButton
          onClick={() => this._openSettingsExplorer(true)}
          text="Two Tiered"
          className={mergeStyles({
            width: 200
          })}
        />
        <Modal
          isOpen={this.state.modalOpen}
          onDismiss={() => this._openSettingsExplorer(false)}
          closeButtonAriaLabel={'Cancel'}
        >
          <TwoTierSettingsExplorer
            name={'General Settings'}
            saveButtonProps={{
              onClick: () => {
                alert('save clicked');
              },
              text: 'Save'
            }}
            cancelButtonProps={{
              onClick: () => {
                this._openSettingsExplorer(false);
              },
              text: 'Cancel'
            }}
            exitButtonProps={{
              onClick: () => this._openSettingsExplorer(false),
              ariaLabel: 'Clear'
            }}
          >
            <SettingsExplorer name={'[Page 1]'} id={'first'}>
              <SettingsPage name={'[Submenu 1]'} id={'a'}>
                <SettingsItem>
                  <Dropdown label={'Language'} options={languageOptions} defaultSelectedKey={'en-US'} />
                </SettingsItem>
                <SettingsItem>
                  <Dropdown
                    label={'Date format'}
                    options={dateFormatOptions}
                    defaultSelectedKey={'M/D/YYYY'}
                  />
                </SettingsItem>
                <SettingsItem>
                  <Dropdown
                    label={'Time format'}
                    options={timeFormatOptions}
                    defaultSelectedKey={'1:01 AM - 11:59 PM'}
                  />
                </SettingsItem>
              </SettingsPage>

              <SettingsPage name={'[Submenu 2]'} />
              <SettingsPage name={'[Submenu 3]'} />
              <SettingsPage name={'[Submenu 4]'} />
              <SettingsPage name={'[Submenu 5]'} />
            </SettingsExplorer>

            <SettingsExplorer name={'[Page 2]'} id={'second'}>
              <SettingsPage name={'[Submenu 1]'} />
              <SettingsPage name={'[Submenu 2]'} />
            </SettingsExplorer>
            <SettingsExplorer name={'[Page 3]'} id={'third'}>
              <SettingsPage name={'[Submenu 1]'} />
              <SettingsPage name={'[Submenu 2]'} />
            </SettingsExplorer>
          </TwoTierSettingsExplorer>
        </Modal>
      </div>
    );
  }

  private _openSettingsExplorer = (status: boolean) => {
    this.setState({ modalOpen: status });
  };
}
