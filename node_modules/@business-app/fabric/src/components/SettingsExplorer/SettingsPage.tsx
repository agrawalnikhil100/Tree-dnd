/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */

import * as React from 'react';
import { classNamesFunction, styled } from '@fluentui/react/lib/Utilities';
import { DefaultButton, IconButton, PrimaryButton } from '@fluentui/react/lib/Button';
import { mergeStyles } from '@fluentui/react/lib/Styling';
import { ISettingsPageProps, ISettingsPageStyleProps, ISettingsPageStyles } from './SettingsPage.types';
import { getStyles } from './SettingsPage.styles';
import { ICommitButtonProps, IExitButtonProps } from './SettingsExplorer.types';

const getClassNames = classNamesFunction<ISettingsPageStyleProps, ISettingsPageStyles>();

const SettingsPageBase: React.FunctionComponent<ISettingsPageProps> = props => {
  const {
    children,
    onRenderFooter = renderFooter,
    onRenderCloseButton = renderCloseButton,
    name,
    pageHeader,
    exitButtonProps,
    saveButtonProps,
    cancelButtonProps,
    styles,
    theme
  } = props;
  const classNames = getClassNames(styles, { theme });

  return (
    <div className={classNames.body}>
      <div className={classNames.header}>
        <h3 className={classNames.headerName}>{pageHeader ?? name}</h3>
        {onRenderCloseButton(exitButtonProps)}
      </div>
      <div className={classNames.contentContainer}>{children}</div>
      {onRenderFooter(saveButtonProps, cancelButtonProps, classNames.footerButtons)}
    </div>
  );
};

function renderFooter(
  saveButtonProps: ICommitButtonProps,
  discardButtonProps: ICommitButtonProps,
  footerStyle: string
): JSX.Element {
  return (
    <div className={footerStyle}>
      {!!saveButtonProps && (
        <PrimaryButton
          className={mergeStyles({
            marginRight: 8
          })}
          {...saveButtonProps}
        />
      )}
      {!!discardButtonProps && <DefaultButton {...discardButtonProps} />}
    </div>
  );
}

function renderCloseButton(exitButtonProps: IExitButtonProps): JSX.Element {
  return (
    <IconButton
      className={mergeStyles({
        padding: 8
      })}
      iconProps={{ iconName: 'Clear' }}
      {...exitButtonProps}
    />
  );
}

export const SettingsPage = styled<ISettingsPageProps, ISettingsPageStyleProps, ISettingsPageStyles>(
  SettingsPageBase,
  getStyles,
  undefined,
  { scope: 'SettingsPage' }
);
