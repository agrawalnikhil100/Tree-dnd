/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */

import * as React from 'react';

import { Label } from '@fluentui/react/lib/Label';
import { Toggle } from '@fluentui/react/lib/Toggle';

import { FilterSearchBox, IFilterItem } from '../';

export interface IFilterSearchBoxMultipleFiltersExampleState {
  searchText: string;
  selectedFilterKey: string;
  filterCalloutMatchComponentWidth: boolean;
}

const filters: IFilterItem[] = [
  { key: 'one', text: 'Filter 1' },
  { key: 'two', text: 'Filter 2' },
  { key: 'three', text: 'Filter 3' }
];

export class FilterSearchBoxMultipleFiltersExample extends React.Component<
  {},
  IFilterSearchBoxMultipleFiltersExampleState
> {
  public readonly state = {
    searchText: '',
    selectedFilterKey: filters[0].key,
    filterCalloutMatchComponentWidth: false
  };

  public render() {
    const { searchText, selectedFilterKey, filterCalloutMatchComponentWidth } = this.state;
    return (
      <>
        <FilterSearchBox
          strings={{
            searchBoxPlaceholder: 'Search'
          }}
          searchText={searchText}
          onSearchTextChange={this._onSearchTextChange}
          filters={filters}
          selectedFilterKey={selectedFilterKey}
          onFilterChange={this._onFilterChange}
          filterCalloutMatchComponentWidth={filterCalloutMatchComponentWidth}
          styles={{
            root: {
              marginBottom: 16
            }
          }}
        />
        <Label>{`Current search text: ${searchText}`}</Label>
        <Label>{`Current filter key: ${selectedFilterKey}`}</Label>
        <Toggle
          checked={filterCalloutMatchComponentWidth}
          onChange={this._onUseFullWidthChange}
          label={'Filter callout should match component width'}
        />
      </>
    );
  }

  private _onSearchTextChange = (event?: React.ChangeEvent<HTMLInputElement>, text?: string) => {
    this.setState({ searchText: text });
  };

  private _onFilterChange = (key: string) => {
    this.setState({ selectedFilterKey: key });
  };

  private _onUseFullWidthChange = (_: React.MouseEvent<HTMLElement>, checked: boolean) => {
    this.setState({ filterCalloutMatchComponentWidth: checked });
  };
}
