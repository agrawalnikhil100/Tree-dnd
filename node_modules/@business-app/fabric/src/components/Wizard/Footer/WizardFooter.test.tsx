/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */

import * as Enzyme from 'enzyme';
import 'jest';
import * as React from 'react';
import { WizardFooterBase as WizardFooter } from './WizardFooter.base';

describe('Wizard Footer', () => {
  it('should disable next/previous button when requested', () => {
    const noop = jest.fn();
    const wrapper = Enzyme.shallow(
      <WizardFooter
        backButtonText="Back"
        backButtonProps={{ className: 'back' }}
        continueButtonText="Next"
        continueButtonProps={{ className: 'next' }}
        canGoToNextStep={true}
        canGoToPreviousStep={false}
        shouldDisplayBackButton={true}
        shouldHideContinueButton={false}
        goToNextStep={noop}
        goToPreviousStep={noop}
      />
    );

    expect(wrapper.find('.back').props().disabled).toBe(true);
    expect(wrapper.find('.next').props().disabled).toBe(false);
  });

  it('supports hiding the back button', () => {
    const noop = jest.fn();
    const wrapper = Enzyme.shallow(
      <WizardFooter
        backButtonText="Back"
        backButtonProps={{ className: 'back' }}
        continueButtonText="Next"
        continueButtonProps={{ className: 'next' }}
        canGoToNextStep={true}
        canGoToPreviousStep={false}
        shouldDisplayBackButton={false}
        goToNextStep={noop}
        goToPreviousStep={noop}
      />
    );

    expect(wrapper.find('.back').exists()).toBe(false);
    expect(wrapper.find('.next').exists()).toBe(true);
  });

  it('supports hiding the next button', () => {
    const noop = jest.fn();
    const wrapper = Enzyme.shallow(
      <WizardFooter
        backButtonText="Back"
        backButtonProps={{ className: 'back' }}
        continueButtonText="Next"
        canGoToNextStep={true}
        canGoToPreviousStep={false}
        shouldDisplayBackButton={true}
        shouldHideContinueButton={true}
        goToNextStep={noop}
        goToPreviousStep={noop}
      />
    );

    expect(wrapper.find('.next').exists()).toBe(false);
  });
});
