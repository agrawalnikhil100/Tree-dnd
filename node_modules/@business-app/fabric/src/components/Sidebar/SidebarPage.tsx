/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */

import {
  ComponentPage,
  ExampleCard,
  IComponentDemoPageProps,
  PropertiesTableSet
} from '@fluentui/react-docsite-components';
import { mergeStyles } from '@fluentui/react/lib/Styling';
import * as React from 'react';
import { SidebarBasicExample } from './examples/Sidebar.Basic.Example';
import { SidebarCollapsedExample } from './examples/Sidebar.Collapsed.Example';

import SidebarBasicExampleCode from '!!raw-loader!../../../src/components/Sidebar/examples/Sidebar.Basic.Example.tsx';
import SidebarCollpasibleExampleCode from '!!raw-loader!../../../src/components/Sidebar/examples/Sidebar.Collapsed.Example.tsx';
import SidebarPropertiesTableSet from '!!raw-loader!../../../src/components/Sidebar/Sidebar.types.tsx';

export class SidebarPage extends React.Component<IComponentDemoPageProps, {}> {
  public render(): JSX.Element {
    return (
      <ComponentPage
        styles={{ navigation: { display: 'none' } }}
        title={'Sidebar'}
        componentName="SidebarExample"
        exampleCards={
          <div>
            <div className={exampleClassName}>
              <ExampleCard title="Sidebar Basic, not Collapsible" code={SidebarBasicExampleCode}>
                <SidebarBasicExample />
              </ExampleCard>
            </div>
            <div className={exampleClassName}>
              <ExampleCard title="Sidebar Collapsible" code={SidebarCollpasibleExampleCode}>
                <SidebarCollapsedExample />
              </ExampleCard>
            </div>
          </div>
        }
        propertiesTables={<PropertiesTableSet sources={[SidebarPropertiesTableSet]} />}
        overview={
          <div>
            <p>
              Sidebar navigation component. If the sidebar is collapsible, the collapse button is shown on the
              top.
            </p>
            <p>
              The sidebar uses a list of items to render the vertical navigation. Items are rendered as
              Sidebar buttons by default. If an item has a buttonAs or onRender property, these properties
              will be used to render the item instead. If not, but a defaultButton property is specified on
              the sidebar, the default button will be used for button rendering. Items should have an icon and
              a label if they are used in a collapsible sidebar.
            </p>
            <p>
              Custom styling for the sidebar is done by passing in a ISidebarStyles object. And example of
              this can be seen in the basic example below.
            </p>
          </div>
        }
        isHeaderVisible={this.props.isHeaderVisible}
      />
    );
  }
}

const exampleClassName = mergeStyles({
  selectors: {
    '.ExampleCard .ExampleCard-example': {
      height: 500,
      paddingBottom: 0
    }
  }
});
