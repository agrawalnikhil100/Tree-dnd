/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */

import { concatStyleSets } from '@fluentui/react/lib/Styling';

import { IAccordionStyleProps, IAccordionStyles } from '../Accordion';
import { getSidebarColors, ISidebarColors } from './Sidebar.styles';
import { sidebarFonts } from './Sidebar.styles';
import { getSidebarButtonStyles } from './SidebarButton.styles';

export const styles = (props: IAccordionStyleProps): IAccordionStyles => {
  const currentSidebarColors: ISidebarColors = getSidebarColors(props.theme);
  const buttonStyles = getSidebarButtonStyles(props.theme);

  const accordionStyles: IAccordionStyles = {
    root: {
      backgroundColor: currentSidebarColors.background
    },
    rootHovered: {
      backgroundColor: currentSidebarColors.backgroundHovered
    },
    rootPressed: {
      backgroundColor: currentSidebarColors.backgroundPressed
    },
    rootChecked: {
      backgroundColor: props.isContentVisible
        ? currentSidebarColors.background
        : currentSidebarColors.backgroundChecked
    },
    rootCheckedHovered: {
      backgroundColor: props.isContentVisible
        ? currentSidebarColors.backgroundHovered
        : currentSidebarColors.backgroundChecked
    },
    rootCheckedPressed: {
      backgroundColor: props.isContentVisible
        ? currentSidebarColors.backgroundPressed
        : currentSidebarColors.backgroundChecked
    },
    labelChecked: {
      fontWeight: props.isContentVisible ? 'normal' : 'bold',
      fontFamily: props.isContentVisible ? sidebarFonts.segoeUi : sidebarFonts.segoeUiSemibold
    },
    flexContainer: {
      selectors: {
        '.is-checked > &:before': { content: props.isContentVisible ? 'none' : '""' }
      }
    },
    menuIcon: {
      fontSize: '12px'
    }
  };
  return concatStyleSets(buttonStyles, accordionStyles);
};
