/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */

import * as React from 'react';
import { shallow, ShallowWrapper } from 'enzyme';
import {
  EmailActionButton,
  PersonaAccordionPanelBase,
  PersonaAccordionTitleButton,
  TeamsActionButton
} from './PersonaAccordionPanel';
import * as Types from './PersonaAccordionPanel.types';
import { getMockPresentUsers, MockPresenceStrings } from './PresenceMockData';
import { DefaultButton } from '@fluentui/react/lib/Button';

describe('Persona accordion panel shows persona detail and action items', () => {
  let props: Types.PersonaAccordionPanelProps;

  beforeEach(() => {
    props = {
      showActionItemsAlways: true,
      presentUser: getMockPresentUsers()[0],
      strings: MockPresenceStrings
    };
  });
  afterEach(() => {
    jest.clearAllMocks();
  });
  it('Should render persona details with actions when show action items always set to true', () => {
    const component = shallow(<PersonaAccordionPanelBase {...props} />);
    expect(component.find(PersonaAccordionTitleButton).length).toBe(1);
    verifyActionsRendered(component);
  });

  it('Should not render actions but persona details when show action items always set to false', () => {
    props.showActionItemsAlways = false;
    const component = shallow(<PersonaAccordionPanelBase {...props} />);
    expect(component.find(PersonaAccordionTitleButton).length).toBe(1);
    verifyActionsNotRendered(component);
  });

  it('Should not render actions on clicking persona accordion title when show action items always and isCollapsible set to false', () => {
    props.showActionItemsAlways = false;
    props.isCollapsible = false;
    const component = shallow(<PersonaAccordionPanelBase {...props} />);
    expect(component.find(PersonaAccordionTitleButton).length).toBe(1);
    verifyActionsNotRendered(component);
    component.find(PersonaAccordionTitleButton).props().onPersonaClick();
    verifyActionsNotRendered(component);
  });

  it('Should render actions on clicking persona accordion title when show action items always set to false and isCollapsible set to true', () => {
    props.showActionItemsAlways = false;
    props.isCollapsible = true;
    const component = shallow(<PersonaAccordionPanelBase {...props} />);
    expect(component.find(PersonaAccordionTitleButton).length).toBe(1);
    verifyActionsNotRendered(component);
    component.find(PersonaAccordionTitleButton).props().onPersonaClick();
    verifyActionsRendered(component);
  });

  it('Should verify persona accordion panel toggle up and down arrow button works', () => {
    props.showActionItemsAlways = false;
    props.isCollapsible = true;
    const component = shallow(<PersonaAccordionPanelBase {...props} />);
    expect(component.find(PersonaAccordionTitleButton).length).toBe(1);
    verifyActionsNotRendered(component);
    component.find(PersonaAccordionTitleButton).props().onPersonaClick();
    verifyActionsRendered(component);
    component.find(PersonaAccordionTitleButton).props().onPersonaClick();
    verifyActionsNotRendered(component);
  });

  it('Should verify clicking open teams in browser starts a teams chat test url', () => {
    const mockOpenUrlInNewTab = jest.spyOn(Types, 'openUrlInNewTab').mockImplementation();
    const component = shallow(<TeamsActionButton {...props} />);
    expect(component.find(DefaultButton).props().menuProps.items.length).toBe(2);
    component.find(DefaultButton).props().menuProps.items[0].onClick();
    expect(mockOpenUrlInNewTab).toHaveBeenCalledTimes(1);
    expect(mockOpenUrlInNewTab).toHaveBeenCalledWith(
      'https://teams.microsoft.com/_?tenantId=#/conversations/19:_123@unq.gbl.spaces?ctx=chat'
    );
  });

  it('Should verify clicking open teams in desktop app starts a teams chat', () => {
    const mockOpenUrlInNewTab = jest.spyOn(Types, 'openUrlInNewTab').mockImplementation();
    props.showActionItemsAlways = true;
    const component = shallow(<TeamsActionButton {...props} />);
    expect(component.find(DefaultButton).props().menuProps.items.length).toBe(2);
    component.find(DefaultButton).props().menuProps.items[1].onClick();
    expect(mockOpenUrlInNewTab).toHaveBeenCalledTimes(1);
    expect(mockOpenUrlInNewTab).toHaveBeenCalledWith('https://teams.microsoft.com/l/chat/0/0?users=');
  });

  function verifyActionsRendered(component: ShallowWrapper) {
    if (component != null) {
      expect(component.find(TeamsActionButton).length).toBe(1);
      expect(component.find(EmailActionButton).length).toBe(1);
    }
  }

  function verifyActionsNotRendered(component: ShallowWrapper) {
    if (component != null) {
      expect(component.find(TeamsActionButton).length).toBe(0);
      expect(component.find(EmailActionButton).length).toBe(0);
    }
  }
});
