/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */

import * as React from 'react';

// Components
import { ITextFieldProps, TextField } from '@fluentui/react/lib/TextField';
import { IFormContext } from '../../Form';
import { FormBaseInput, IFormBaseInputState } from '../../FormBaseInput';
import { IFormTextInputProps } from './FormTextInput.types';

/**
 * TextBox input for the Form.
 */
export class FormTextInput extends FormBaseInput<string, IFormTextInputProps, IFormBaseInputState<string>> {
  constructor(props: IFormTextInputProps, context: IFormContext) {
    super(props, context, false /* Leading edge debounce */);
    this.state = {
      isValid: true,
      currentValue: this.props.value || '',
      currentError: undefined
    };

    this._validateTextFieldProps(this.props.textFieldProps);
  }

  /**
   * Name of this component
   */
  public name(): string {
    return 'FormTextBox';
  }

  /**
   * Render a Fabric TextBox
   */
  public render(): JSX.Element {
    return (
      <TextField
        {...this.props.textFieldProps}
        key={this.props.inputKey}
        value={this.state.currentValue}
        onChange={this._onChange}
        errorMessage={this.state.currentError}
      />
    );
  }

  private _onChange = (
    event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>,
    newValue = ''
  ): void => {
    const { textFieldProps } = this.props;

    textFieldProps?.onChange?.(event, newValue);

    this.setValue(newValue);
  };

  private _validateTextFieldProps(props?: ITextFieldProps): void {
    if (props) {
      if (props.errorMessage) {
        // eslint-disable-next-line no-console
        console.warn(`FormTextBox: 'errorMessage' prop was specified and will be ignored`);
      }

      if (props.value) {
        // eslint-disable-next-line no-console
        console.warn(`FormTextBox: 'value' prop was specified and will be ignored`);
      }

      if (props.onChange) {
        // eslint-disable-next-line no-console
        console.warn(`FormTextBox: 'onChange' prop was specified and will be ignored`);
      }
    }
  }
}
