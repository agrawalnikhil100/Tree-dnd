/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */

import * as React from 'react';
import * as ReactTestUtils from 'react-dom/test-utils';

import { Form } from '../../Form';
import * as Validators from '../../validators/Validators';
import { FormTextInput } from '../textInput/FormTextInput';
import { FormConditionalSubmitButton } from './FormConditionalSubmitButton';

describe('FormSubmitButton Unit Tests', () => {
  jest.useFakeTimers();
  beforeEach(() => {
    jest.useFakeTimers();
  });

  afterEach(() => {
    jest.clearAllTimers();
  });

  class ExtendsTextBox extends FormTextInput {
    public setValue(value: string): void {
      super.setValue(value);
    }
  }

  // Disabled because of intermittent issues with timer logic.
  it.skip('Button is disabled when form is invalid and enabled when form is valid', done => {
    const formRef = React.createRef<Form>();
    ReactTestUtils.renderIntoDocument(
      <Form ref={formRef}>
        <ExtendsTextBox inputKey="name" validators={[Validators.required('Error')]} />

        <FormConditionalSubmitButton />
      </Form>
    );

    const button: HTMLButtonElement = ReactTestUtils.findRenderedDOMComponentWithClass(
      formRef.current,
      'ms-Button'
    ) as HTMLButtonElement;
    const textBox: ExtendsTextBox = ReactTestUtils.findRenderedComponentWithType(
      formRef.current,
      ExtendsTextBox
    );

    expect(button.getAttribute('disabled')).toEqual('');
    textBox.setValue('Value');
    jest.runAllTimers();
    expect(button.getAttribute('disabled')).toBeFalsy();
    done();
  });
});
