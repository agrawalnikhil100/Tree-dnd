/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */

import * as React from 'react';

// Components
import { IFormContext } from '../../Form';
import { FormBaseInput, IFormBaseInputState } from '../../FormBaseInput';

import { ITextFieldProps, TextField } from '@fluentui/react/lib/TextField';
import { IFormPrefixedTextBlockProps } from './FormPrefixedTextBlock.types';

/**
 * TextBox input for the Form.
 */
export class FormPrefixedTextBlock extends FormBaseInput<
  string,
  IFormPrefixedTextBlockProps,
  IFormBaseInputState<string>
> {
  constructor(props: IFormPrefixedTextBlockProps, context: IFormContext) {
    super(props, context, false /* Leading edge debounce */);
    this.state = {
      isValid: true,
      currentValue: this.props.value || '',
      currentError: undefined
    };

    this._validatePrefixedTextBlockProps(this.props.prefixedTextBlockProps);
  }

  /**
   * Render a Fabric TextBox
   */
  public render(): JSX.Element {
    return (
      <TextField
        {...this.props.prefixedTextBlockProps}
        key={this.props.inputKey}
        value={this.state.currentValue}
        onChange={this._onChange}
        errorMessage={this.state.currentError}
      />
    );
  }

  private _onChange = (event: null, value: string): void => {
    const { prefixedTextBlockProps } = this.props;

    prefixedTextBlockProps?.onChange?.(event, value);

    this.setValue(value);
  };

  private _validatePrefixedTextBlockProps(props?: ITextFieldProps): void {
    if (props) {
      if (props.errorMessage) {
        // eslint-disable-next-line no-console
        console.warn(`TextField: 'errorMessage' prop was specified and will be ignored`);
      }

      if (props.value) {
        // eslint-disable-next-line no-console
        console.warn(`TextField: 'value' prop was specified and will be ignored`);
      }

      if (props.onChange) {
        // eslint-disable-next-line no-console
        console.warn(`TextField: 'onBeforeChange' prop was specified and will be ignored`);
      }
    }
  }
}
