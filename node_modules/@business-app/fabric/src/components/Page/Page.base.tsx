/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */

import { Overlay } from '@fluentui/react/lib/Overlay';
import { Spinner, SpinnerSize, SpinnerType } from '@fluentui/react/lib/Spinner';
import { classNamesFunction } from '@fluentui/react/lib/Utilities';
import * as React from 'react';

import { Pane } from '../Pane';
import { IPageProps, IPageStyleProps, IPageStyles } from './Page.types';

const getClassNames = classNamesFunction<IPageStyleProps, IPageStyles>();

/**
 * Provides a common format for the overall layout and styling of a page.
 *
 * @export
 * @class Page
 * @extends {React.Component<IPageProps>}
 */

export class PageBase extends React.Component<IPageProps> {
  public render(): JSX.Element {
    const {
      className,
      renderHeader,
      renderMessageBar,
      renderTitle,
      renderPivot,
      renderFooter,
      showOverlay,
      overlayProps,
      spinnerProps,
      renderBody,
      styles,
      theme,
      paneProps,
      ...rest
    } = this.props;

    const classNames = getClassNames(styles, { theme, className, paneProps });
    return (
      <section id="ba-Page-main" className={classNames.root} {...rest}>
        <>
          {renderHeader && <div className={classNames.header}>{renderHeader()}</div>}
          {renderMessageBar && (
            <div className="ba-Page-MessageBar" aria-live="assertive">
              {renderMessageBar()}
            </div>
          )}
        </>
        <section className={classNames.container}>
          <section className={classNames.content}>
            <main className={classNames.body}>
              {renderTitle && <header className={classNames.title}>{renderTitle()}</header>}
              {renderPivot && <div className={classNames.pivot}>{renderPivot()}</div>}

              {renderBody && renderBody()}
            </main>
            {renderFooter && <footer className={classNames.footer}>{renderFooter()}</footer>}
          </section>
          {paneProps && <Pane {...paneProps} />}
        </section>
        {showOverlay && (
          <Overlay
            className={classNames.loadingOverlay}
            styles={{ root: { backgroundColor: '#ffffff', opacity: 0.9 } }}
            {...overlayProps}
          >
            <Spinner
              size={SpinnerSize.large}
              type={SpinnerType.large}
              ariaLive="assertive"
              styles={{ root: { margin: '0px auto auto auto', paddingTop: '300px' } }}
              {...spinnerProps}
            />
          </Overlay>
        )}
      </section>
    );
  }
}
