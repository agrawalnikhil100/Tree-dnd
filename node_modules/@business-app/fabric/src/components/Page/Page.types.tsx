/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */

import { IOverlayProps } from '@fluentui/react/lib/Overlay';
import { ISpinnerProps } from '@fluentui/react/lib/Spinner';
import { IStyle, ITheme } from '@fluentui/react/lib/Styling';
import { IRenderFunction, IStyleFunctionOrObject } from '@fluentui/react/lib/Utilities';

import { IPaneProps } from '../Pane';

export interface IPageProps extends Readonly<React.HTMLAttributes<HTMLDivElement>> {
  /**
   * Optionally, a command bar to display at the top of the page.
   * @type {IRenderFunction}
   */
  readonly renderHeader?: IRenderFunction<IPageProps>;

  /**
   * Optionally, a header to display at the top of the page, below the
   * aside.
   * @type {IRenderFunction}
   */
  readonly renderMessageBar?: IRenderFunction<IPageProps>;

  /**
   * Optionally, a header to display at the top of the page, below the
   * aside.
   * @type {IRenderFunction}
   */
  readonly renderTitle?: IRenderFunction<IPageProps>;

  /**
   * Optionally, render a pivot component beneath the header
   * @type {IRenderFunction}
   */
  readonly renderPivot?: IRenderFunction<IPageProps>;

  /**
   * The page content
   * @type {IRenderFunction}
   */
  readonly renderBody?: IRenderFunction<IPageProps>;

  /**
   * Optionally, a footer element to render at the bottom of the page.
   * @type {IRenderFunction}
   */
  readonly renderFooter?: IRenderFunction<IPageProps>;

  /**
   * Optionally, a pane to display at the right of the page,
   * @type {IPaneProps}
   */
  readonly paneProps?: IPaneProps;

  /**
   * Whether to overlay a blocking overlay spinner over the page, defaulting
   * to false.
   * @type {boolean}
   */
  readonly showOverlay?: boolean;

  /**
   * Optionally, properties to pass down to the overlay when loading
   * is on.
   * @type {IOverlayProps}
   */
  readonly overlayProps?: IOverlayProps;

  /**
   * Optionally, properties to pass down to the loading spinner when loading
   * is on.
   * @type {ISpinnerProps}
   */
  readonly spinnerProps?: ISpinnerProps;

  /**
   * Theme provided by High-Order Component.
   */
  theme?: ITheme;

  /**
   * Call to provide customized styling that will layer on top of the variant rules
   */
  styles?: IStyleFunctionOrObject<IPageStyleProps, IPageStyles>;
}

export type IPageStyleProps = Pick<IPageProps, 'theme' | 'className' | 'paneProps'>;

export interface IPageStyles {
  root?: IStyle;
  container?: IStyle;
  content?: IStyle;
  header?: IStyle;
  title?: IStyle;
  body?: IStyle;
  pivot?: IStyle;
  footer?: IStyle;
  loadingOverlay?: IStyle;
}
