/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */

import * as Enzyme from 'enzyme';
import 'jest';
import * as React from 'react';
import { loadingButton, LoadingDefaultButton } from './LoadingButton';

describe('LoadingButton', () => {
  it('should render the component', () => {
    const wrapper = Enzyme.mount(<LoadingDefaultButton className="loading-default-button" />);
    expect(wrapper.find('.loading-default-button').exists()).toBeTruthy();
    wrapper.unmount();
  });

  it('should render the loading spinner if loading is true', () => {
    const wrapper = Enzyme.mount(<LoadingDefaultButton className="loading-default-button" loading={true} />);

    expect(wrapper.find('.ba-LoadingButton-spinner').exists()).toBeTruthy();
    wrapper.unmount();
  });

  it('should not render the loading spinner if loading is false', () => {
    const wrapper = Enzyme.mount(<LoadingDefaultButton className="loading-default-button" loading={false} />);

    expect(wrapper.find('.ba-LoadingButton-spinner').exists()).toBeFalsy();
    wrapper.unmount();
  });

  it('should render anything in place of the loading spinner if provided', () => {
    const wrapper = Enzyme.mount(
      <LoadingDefaultButton
        className="loading-default-button"
        loading={true}
        spinnerAs={() => <span className="hello-span">Hello!</span>}
      />
    );

    expect(wrapper.find('.hello-span').exists()).toBeTruthy();
    wrapper.unmount();
  });

  it('should wrap anything that exposes a matching onRenderIcon property', () => {
    const TestComponent: React.FC<{ onRenderIcon?: () => JSX.Element }> = ({ onRenderIcon }) =>
      onRenderIcon();
    const WrappedComponent = loadingButton(TestComponent);
    const wrapper = Enzyme.mount(<WrappedComponent loading={true} />);

    expect(wrapper.find('.ba-LoadingButton-spinner').exists()).toBeTruthy();
    wrapper.unmount();
  });
});
