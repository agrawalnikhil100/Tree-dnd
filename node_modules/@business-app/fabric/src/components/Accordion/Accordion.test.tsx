/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */

import { shallow } from 'enzyme';
import 'jest';
import { DefaultButton } from '@fluentui/react/lib/Button';
import { getTheme } from '@fluentui/react/lib/Styling';
import * as React from 'react';
import { AccordionBase } from './Accordion.base';
import { styles } from './Accordion.styles';
import { IAccordionProps } from './Accordion.types';

describe('Accordion', () => {
  let defaultProps: IAccordionProps;

  beforeEach(() => {
    const theme = getTheme();
    defaultProps = {
      text: 'Stuff here',
      iconProps: { iconName: 'CollapseMenu' },
      onRenderContent: jest.fn(),
      styles: styles({ containerClassName: 'baf-test-accordian', isContentVisible: true }),
      theme
    };
  });

  it('should render the component', () => {
    const wrapper = shallow(<AccordionBase {...defaultProps} />);
    expect(wrapper.find('.ba-Accordion').length).toBe(1);
  });

  it('should show the content when the header is clicked', () => {
    const wrapper = shallow(
      <AccordionBase
        {...defaultProps}
        onRenderContent={() => {
          return (
            <DefaultButton
              key="item1"
              text="Link 1"
              iconProps={{ iconName: 'CompassNW' }}
              ariaLabel="New. Use left and right arrow keys to navigate"
              onClick={jest.fn()}
            />
          );
        }}
      />
    );
    wrapper.find('.ba-Accordion-header').simulate('click');
    expect(wrapper.find('.ba-Accordion-content').length).toBe(1);
  });

  it('should not show the content when the header is clicked twice', () => {
    const wrapper = shallow(
      <AccordionBase
        {...defaultProps}
        onRenderContent={() => {
          return (
            <DefaultButton
              key="item1"
              text="Link 1"
              iconProps={{ iconName: 'CompassNW' }}
              ariaLabel="New. Use left and right arrow keys to navigate"
              onClick={jest.fn()}
            />
          );
        }}
      />
    );

    expect(wrapper.find('.ba-Accordion-content').length).toBe(0);

    wrapper.find('.ba-Accordion-header').simulate('click');
    wrapper.find('.ba-Accordion-header').simulate('click');
    expect(wrapper.find('.ba-Accordion-content').length).toBe(0);
  });

  it('content should be initially visible if checked', () => {
    const wrapper = shallow(
      <AccordionBase
        {...defaultProps}
        checked={true}
        onRenderContent={() => {
          return (
            <DefaultButton
              key="item1"
              text="Link 1"
              iconProps={{ iconName: 'CompassNW' }}
              ariaLabel="New. Use left and right arrow keys to navigate"
              onClick={jest.fn()}
            />
          );
        }}
      />
    );

    expect(wrapper.find('.ba-Accordion-content').length).toBe(1);
  });

  it('content should be initially visible if not checked', () => {
    const wrapper = shallow(
      <AccordionBase
        {...defaultProps}
        checked={false}
        onRenderContent={() => {
          return (
            <DefaultButton
              key="item1"
              text="Link 1"
              iconProps={{ iconName: 'CompassNW' }}
              ariaLabel="New. Use left and right arrow keys to navigate"
              onClick={jest.fn()}
            />
          );
        }}
      />
    );

    expect(wrapper.find('.ba-Accordion-content').length).toBe(0);
  });

  it('content should remain visible on checked change', () => {
    const wrapper = shallow(
      <AccordionBase
        {...defaultProps}
        checked={true}
        onRenderContent={() => {
          return (
            <DefaultButton
              key="item1"
              text="Link 1"
              iconProps={{ iconName: 'CompassNW' }}
              ariaLabel="New. Use left and right arrow keys to navigate"
              onClick={jest.fn()}
            />
          );
        }}
      />
    );

    expect(wrapper.find('.ba-Accordion-content').length).toBe(1);

    wrapper.setProps({ checked: false });

    expect(wrapper.find('.ba-Accordion-content').length).toBe(1);
  });

  it('content should remain closed on checked change', () => {
    const wrapper = shallow(
      <AccordionBase
        {...defaultProps}
        checked={false}
        onRenderContent={() => {
          return (
            <DefaultButton
              key="item1"
              text="Link 1"
              iconProps={{ iconName: 'CompassNW' }}
              ariaLabel="New. Use left and right arrow keys to navigate"
              onClick={jest.fn()}
            />
          );
        }}
      />
    );

    expect(wrapper.find('.ba-Accordion-content').length).toBe(0);

    wrapper.setProps({ checked: true });

    expect(wrapper.find('.ba-Accordion-content').length).toBe(0);
  });
});
