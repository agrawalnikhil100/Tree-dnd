/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */

import { ITreeItem, ITreeProps, ITreeStrings } from './Tree.types';

export interface IAsyncTreeItem extends ITreeItem {
  isLoading: boolean;
  hasLoaded: boolean;
  canLoadMore: boolean;
  loadingError: Error | null;
}

export type ILoadingTreeSubItem = ITreeItem;

export type IErrorTreeSubItem = ITreeItem & {
  onRetryClick?: () => void;
};

export type ILoadMoreTreeSubItem = ITreeItem & {
  onLoadMoreClick?: () => void;
};

export type IAsyncTreeProps = Omit<
  ITreeProps<IAsyncTreeItem | ILoadingTreeSubItem | ILoadMoreTreeSubItem | IErrorTreeSubItem>,
  'items' | 'strings'
> & {
  onResolveItems: (
    parent: IAsyncTreeItem | null,
    continuationToken?: string
  ) => Promise<
    [
      Array<Omit<IAsyncTreeItem, 'level' | 'isLoading' | 'hasLoaded' | 'canLoadMore' | 'loadingError'>>,
      string | null
    ]
  >;

  strings: IAsyncTreeStrings;
};

export type IAsyncTreeStrings = ITreeStrings & {
  loadingSubItemLabel?: string;
  loadMoreSubItemLabel?: string;
  errorSubItemLabel?: string;
  errorSubItemRetryLinkText?: string;
};
