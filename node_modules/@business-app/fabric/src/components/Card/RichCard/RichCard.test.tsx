/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */

import 'jest';

import * as Enzyme from 'enzyme';
import * as React from 'react';

import { DefaultButton } from '@fluentui/react/lib/Button';
import { CardHeader } from './../CardHeader';
import { RichCard } from './../RichCard';

describe('RichCard', () => {
  const ContentArea = () => <DefaultButton>{'Content area'} /</DefaultButton>;
  const Footer = () => <DefaultButton>{'Footer area'} /</DefaultButton>;
  const CustomTitle = () => <div>{'custom title'} /</div>;
  const CustomSubTitle = () => <div>{'custom sub title'} /</div>;

  it('Card header and the content area get rendered', () => {
    const wrapper = Enzyme.mount(
      <RichCard headerProps={{ title: 'Title' }} renderContentArea={() => <ContentArea />} />
    );

    // The Card header gets rendered
    const findCardHeader = wrapper.find(CardHeader);
    expect(findCardHeader.length).toBe(1);

    // The content area gets rendered
    const findContentArea = wrapper.find(ContentArea);
    expect(findContentArea.length).toBe(1);

    wrapper.unmount();
  });

  it('The footer gets rendered when we pass the renderFooter prop', () => {
    const wrapper = Enzyme.mount(
      <RichCard
        headerProps={{ title: 'Title' }}
        renderContentArea={() => <ContentArea />}
        renderFooter={() => <Footer />}
      />
    );

    // The footer gets rendered
    const findCardFooter = wrapper.find(Footer);
    expect(findCardFooter.length).toBe(1);

    wrapper.unmount();
  });

  it('If iconProps are provided they are rendered', () => {
    const wrapper = Enzyme.mount(<RichCard headerProps={{ subTitleIconProps: { iconName: 'CompassNW' } }} />);

    const findCardIcon = wrapper.find('.ms-Icon');
    expect(findCardIcon.length).toBe(1);

    wrapper.unmount();
  });

  it('If onRenderTitle exists then it gets rendered', () => {
    const wrapper = Enzyme.mount(<RichCard headerProps={{ onRenderTitle: () => <CustomTitle /> }} />);

    const findCardTitle = wrapper.find(CustomTitle);
    expect(findCardTitle.length).toBe(1);

    wrapper.unmount();
  });

  it('If onRenderSubTitle exists then it gets rendered', () => {
    const wrapper = Enzyme.mount(<RichCard headerProps={{ onRenderSubTitle: () => <CustomSubTitle /> }} />);

    const findCardSubTitle = wrapper.find(CustomSubTitle);
    expect(findCardSubTitle.length).toBe(1);

    wrapper.unmount();
  });

  it('If both onRenderTitle and onRenderSubTitle then both get rendered ', () => {
    const wrapper = Enzyme.mount(
      <RichCard
        headerProps={{ onRenderTitle: () => <CustomTitle />, onRenderSubTitle: () => <CustomSubTitle /> }}
      />
    );

    const findCardTitle = wrapper.find(CustomTitle);
    expect(findCardTitle.length).toBe(1);

    const findCardSubTitle = wrapper.find(CustomSubTitle);
    expect(findCardSubTitle.length).toBe(1);

    wrapper.unmount();
  });
});
