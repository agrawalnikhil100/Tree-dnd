/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
import * as React from 'react';

import { classNamesFunction } from '@fluentui/react/lib/Utilities';

import { Card } from './../Card';
import { CardFooter } from './../CardFooter';
import { CardHeader } from './../CardHeader';

import { RichCardProps, RichCardStates, RichCardStyleProps, RichCardStyles } from './RichCard.types';

const getClassNames = classNamesFunction<RichCardStyleProps, RichCardStyles>();

export class RichCardBase extends React.Component<RichCardProps, RichCardStates> {
  constructor(props: RichCardProps) {
    super(props);

    const { headerProps, footerProps, renderFooter } = this.props;

    this.state = {
      hasHeader: !!headerProps,
      hasFooter: !!(footerProps || renderFooter)
    };
  }

  public render() {
    const {
      width,
      height,
      children,
      className,
      headerProps,
      footerProps,
      renderContentArea,
      renderFooter,
      renderHeader,
      styles,
      theme
    } = this.props;
    const { hasHeader, hasFooter } = this.state;
    const classNames = getClassNames(styles, {
      theme,
      className,
      hasHeader,
      hasFooter
    });

    return (
      <Card className={classNames.root} height={height} width={width}>
        {(headerProps || renderHeader) && <CardHeader {...headerProps}>{renderHeader?.()}</CardHeader>}

        <div className={classNames.contentArea}>{renderContentArea ? renderContentArea() : children}</div>

        {(footerProps || renderFooter) && <CardFooter {...footerProps}>{renderFooter?.()}</CardFooter>}
      </Card>
    );
  }
}
