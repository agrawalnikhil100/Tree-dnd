/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */

import * as Enzyme from 'enzyme';
import 'jest';
import * as React from 'react';
import { CommandBarWithSearchBox, ICommandBarWithSearchBoxProps } from '.';

describe('Page Header with Env', () => {
  let props: ICommandBarWithSearchBoxProps;

  beforeEach(() => {
    props = {
      items: []
    };
  });

  it('should render the component without searchbox', () => {
    const wrapper = Enzyme.shallow(<CommandBarWithSearchBox {...props} />);
    expect(wrapper).toMatchSnapshot();

    const commandBarProps = wrapper.props().children.props;
    expect(commandBarProps.isSearchBoxVisible).toBeFalsy();
    expect(commandBarProps.farItems).toBeFalsy();
  });

  it('should render the component with searchbox in farItems if flag set', () => {
    props.isSearchBoxVisible = true;
    props.searchBoxProps = {
      labelText: 'Search box'
    };

    const wrapper = Enzyme.shallow(<CommandBarWithSearchBox {...props} />);

    const commandBarProps = wrapper.props().children.props;
    expect(commandBarProps.isSearchBoxVisible).toBeFalsy();
    expect(commandBarProps.farItems.length).toBe(1);

    const searchBox = commandBarProps.farItems[0].onRender();
    const searchBoxProps = searchBox.props;
    expect(searchBoxProps).toHaveProperty('styles');
  });

  it('should render the component with the wrapper class', () => {
    props.wrapperClassName = 'test-class';

    const wrapper = Enzyme.shallow(<CommandBarWithSearchBox {...props} />);

    expect(wrapper.find('.test-class')).toBeDefined();
  });
});
