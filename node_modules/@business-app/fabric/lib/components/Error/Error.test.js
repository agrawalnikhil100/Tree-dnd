/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
import { __assign } from "tslib";
import * as Enzyme from 'enzyme';
import 'jest';
import { getTheme } from '@fluentui/react/lib/Styling';
import * as React from 'react';
import { ErrorBase } from './Error.base';
import { styles as getStyles } from './Error.styles';
describe('Error', function () {
    var wrapper;
    var props;
    beforeEach(function () {
        props = {
            styles: getStyles,
            theme: getTheme()
        };
    });
    afterEach(function () { return wrapper.unmount(); });
    it('should not unexpectedly change', function () {
        var seeDetailsShowLabel = 'See details';
        var seeDetailsHideLabel = 'Hide details';
        wrapper = Enzyme.mount(React.createElement(ErrorBase, __assign({}, props, { title: 'Title', subtitle: 'Subtitle', seeDetailsLinkShowLabel: seeDetailsShowLabel, seeDetailsLinkHideLabel: seeDetailsHideLabel, errorDetails: {
                messageLabel: 'message label',
                message: 'message',
                customerSupportLink: {
                    label: 'Customer Support',
                    url: '/',
                    target: '_blank'
                }
            }, learnMoreLink: {
                label: 'Learn more',
                url: '/',
                target: '_blank'
            }, callToActionLink: {
                label: 'Call to Action',
                url: '/',
                target: '_blank'
            } })));
        expect(wrapper).toMatchSnapshot();
    });
    it('should expand See Details section', function () {
        var seeDetailsShowLabel = 'See details';
        var seeDetailsHideLabel = 'Hide details';
        wrapper = Enzyme.mount(React.createElement(ErrorBase, __assign({}, props, { title: 'Title', seeDetailsLinkShowLabel: seeDetailsShowLabel, seeDetailsLinkHideLabel: seeDetailsHideLabel, errorDetails: {
                messageLabel: 'message label',
                message: 'message',
                customerSupportLink: {
                    label: 'Customer Support',
                    url: '/',
                    target: '_blank'
                }
            } })));
        expect(wrapper.find('.ba-Error-SeeDetailsButton').length).toBe(4);
        expect(wrapper.find('.ba-Error-SeeDetailsButton').first().getElement().props.text).toEqual(seeDetailsShowLabel);
        wrapper.find('.ba-Error-SeeDetailsButton').first().simulate('click');
        expect(wrapper.find('.ba-Error-SeeDetailsButton').first().getElement().props.text).toEqual(seeDetailsHideLabel);
        expect(wrapper.find('.ba-Error-SeeDetailsDiv').length).toBe(1);
        expect(wrapper.find('.ba-Error-CustomerSupportLink').length).toBe(3);
    });
    it('should render Learn More link when subtitle not provided', function () {
        wrapper = Enzyme.mount(React.createElement(ErrorBase, __assign({ title: 'Title' }, props, { learnMoreLink: {
                label: 'Learn more',
                url: '/',
                target: '_blank'
            }, callToActionLink: {
                label: 'Call to Action',
                url: '/',
                target: '_blank'
            } })));
        expect(wrapper.find('.ba-Error-LearnMoreLink').length).toBe(3);
        expect(wrapper.find('.ba-Error-ImageLarge').length).toBe(1);
    });
    it('should render all provided controls optionally', function () {
        var seeDetailsShowLabel = 'See details';
        var seeDetailsHideLabel = 'Hide details';
        wrapper = Enzyme.mount(React.createElement(ErrorBase, __assign({}, props, { title: 'Title', subtitle: 'Subtitle', seeDetailsLinkShowLabel: seeDetailsShowLabel, seeDetailsLinkHideLabel: seeDetailsHideLabel, errorDetails: {
                messageLabel: 'message label',
                message: 'message',
                customerSupportLink: {
                    label: 'Customer Support',
                    url: '/',
                    target: '_blank'
                }
            }, learnMoreLink: {
                label: 'Learn more',
                url: '/',
                target: '_blank'
            }, callToActionLink: {
                label: 'Call to Action',
                url: '/',
                target: '_blank'
            } })));
        expect(wrapper.find('.ba-Error-Title').length).toBe(1);
        expect(wrapper.find('.ba-Error-Subtitle').length).toBe(1);
        expect(wrapper.find('.ba-Error-LearnMoreLink').length).toBe(3);
        expect(wrapper.find('.ba-Error-CallToActionButton').length).toBeGreaterThanOrEqual(6);
        expect(wrapper.find('.ba-Error-ImageLarge').length).toBe(1);
        expect(wrapper.find('.ba-Error-SeeDetailsButton').length).toBe(4);
        wrapper.find('.ba-Error-SeeDetailsButton').first().simulate('click');
        expect(wrapper.find('.ba-Error-SeeDetailsDiv').length).toBe(1);
        expect(wrapper.find('.ba-Error-CustomerSupportLink').length).toBe(3);
    });
});
//# sourceMappingURL=Error.test.js.map