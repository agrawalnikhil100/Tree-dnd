/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
import * as Enzyme from 'enzyme';
import 'jest';
import * as React from 'react';
import { loadingButton, LoadingDefaultButton } from './LoadingButton';
describe('LoadingButton', function () {
    it('should render the component', function () {
        var wrapper = Enzyme.mount(React.createElement(LoadingDefaultButton, { className: "loading-default-button" }));
        expect(wrapper.find('.loading-default-button').exists()).toBeTruthy();
        wrapper.unmount();
    });
    it('should render the loading spinner if loading is true', function () {
        var wrapper = Enzyme.mount(React.createElement(LoadingDefaultButton, { className: "loading-default-button", loading: true }));
        expect(wrapper.find('.ba-LoadingButton-spinner').exists()).toBeTruthy();
        wrapper.unmount();
    });
    it('should not render the loading spinner if loading is false', function () {
        var wrapper = Enzyme.mount(React.createElement(LoadingDefaultButton, { className: "loading-default-button", loading: false }));
        expect(wrapper.find('.ba-LoadingButton-spinner').exists()).toBeFalsy();
        wrapper.unmount();
    });
    it('should render anything in place of the loading spinner if provided', function () {
        var wrapper = Enzyme.mount(React.createElement(LoadingDefaultButton, { className: "loading-default-button", loading: true, spinnerAs: function () { return React.createElement("span", { className: "hello-span" }, "Hello!"); } }));
        expect(wrapper.find('.hello-span').exists()).toBeTruthy();
        wrapper.unmount();
    });
    it('should wrap anything that exposes a matching onRenderIcon property', function () {
        var TestComponent = function (_a) {
            var onRenderIcon = _a.onRenderIcon;
            return onRenderIcon();
        };
        var WrappedComponent = loadingButton(TestComponent);
        var wrapper = Enzyme.mount(React.createElement(WrappedComponent, { loading: true }));
        expect(wrapper.find('.ba-LoadingButton-spinner').exists()).toBeTruthy();
        wrapper.unmount();
    });
});
//# sourceMappingURL=LoadingButton.test.js.map