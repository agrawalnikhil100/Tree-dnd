/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
import { __extends } from "tslib";
import { CommandBar } from '@fluentui/react/lib/CommandBar';
import { Stack } from '@fluentui/react/lib/Stack';
import { Toggle } from '@fluentui/react/lib/Toggle';
import * as React from 'react';
import { LoadingCommandButton, LoadingPrimaryButton } from '../LoadingButton';
var LoadingButtonExample = /** @class */ (function (_super) {
    __extends(LoadingButtonExample, _super);
    function LoadingButtonExample() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            isLoading: false
        };
        return _this;
    }
    LoadingButtonExample.prototype.render = function () {
        var _this = this;
        return (React.createElement(Stack, { maxWidth: 400, gap: 16 },
            React.createElement(LoadingPrimaryButton, { iconProps: { iconName: 'Save' }, text: "Save data", loading: this.state.isLoading, styles: { root: { width: 130 } } }),
            React.createElement(CommandBar, { items: [
                    {
                        key: 'add',
                        iconProps: { iconName: 'Add' },
                        text: 'Add item',
                        loading: this.state.isLoading
                    },
                    {
                        key: 'edit',
                        iconProps: { iconName: 'Edit' },
                        text: 'Edit item',
                        loading: this.state.isLoading
                    },
                    {
                        key: 'remove',
                        iconProps: { iconName: 'Delete' },
                        text: 'Remove item',
                        loading: this.state.isLoading
                    }
                ], buttonAs: LoadingCommandButton }),
            React.createElement(Toggle, { label: "Toggle loading", checked: !!this.state.isLoading, onClick: function () { return _this.setState({ isLoading: !_this.state.isLoading }); } })));
    };
    return LoadingButtonExample;
}(React.Component));
export { LoadingButtonExample };
//# sourceMappingURL=LoadingButton.Example.js.map