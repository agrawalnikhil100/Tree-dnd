/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
import { __assign, __extends } from "tslib";
import { ActionButton, CommandButton, DefaultButton, PrimaryButton } from '@fluentui/react/lib/Button';
import { Spinner, SpinnerSize } from '@fluentui/react/lib/Spinner';
import * as React from 'react';
var spinnerStyles = {
    root: {
        marginLeft: 4,
        marginRight: 4
    }
};
/**
 * A higher order component that wraps Button components with the ability to render a loading spinner
 * in the place of the button's icon.
 * @param ButtonComponent The Button component to wrap.
 */
export function loadingButton(ButtonComponent) {
    return /** @class */ (function (_super) {
        __extends(LoadingButton, _super);
        function LoadingButton() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.onRenderIcon = function (buttonProps, defaultRender) {
                var _a = _this.props, loading = _a.loading, spinnerAs = _a.spinnerAs;
                if (!loading) {
                    return defaultRender && defaultRender(buttonProps);
                }
                var SpinnerComponent = spinnerAs || Spinner;
                return (React.createElement(SpinnerComponent, { className: "ba-LoadingButton-spinner", size: SpinnerSize.small, styles: spinnerStyles }));
            };
            return _this;
        }
        LoadingButton.prototype.render = function () {
            return React.createElement(ButtonComponent, __assign({}, this.props, { onRenderIcon: this.onRenderIcon }));
        };
        return LoadingButton;
    }(React.Component));
}
/** Office Fabric's "ActionButton" pre-wrapped with loading capability. */
export var LoadingActionButton = loadingButton(ActionButton);
/** Office Fabric's "CommandButton" pre-wrapped with loading capability. */
export var LoadingCommandButton = loadingButton(CommandButton);
/** Office Fabric's "DefaultButton" pre-wrapped with loading capability. */
export var LoadingDefaultButton = loadingButton(DefaultButton);
/** Office Fabric's "PrimaryButton" pre-wrapped with loading capability. */
export var LoadingPrimaryButton = loadingButton(PrimaryButton);
//# sourceMappingURL=LoadingButton.js.map