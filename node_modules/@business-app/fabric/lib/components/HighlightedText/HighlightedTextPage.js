/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
import { __extends } from "tslib";
import HighlightedTextBasicExampleCode from '!!raw-loader!../../../src/components/HighlightedText/examples/HighlightedText.Basic.Example.tsx';
import HighlightedTextCharactersExampleCode from '!!raw-loader!../../../src/components/HighlightedText/examples/HighlightedText.Characters.Example.tsx';
import HighlightedTextStyledExampleCode from '!!raw-loader!../../../src/components/HighlightedText/examples/HighlightedText.Styled.Example.tsx';
import HighlightedTextPropertiesTableSet from '!!raw-loader!../../../src/components/HighlightedText/HighlightedText.types.ts';
import { ComponentPage, ExampleCard, PropertiesTableSet } from '@fluentui/react-docsite-components';
import { Link } from '@fluentui/react/lib/Link';
import * as React from 'react';
import { HighlightedTextBasicExample } from './examples/HighlightedText.Basic.Example';
import { HighlightedTextCharactersExample } from './examples/HighlightedText.Characters.Example';
import { HighlightedTextStyledExample } from './examples/HighlightedText.Styled.Example';
var HighlightedTextPage = /** @class */ (function (_super) {
    __extends(HighlightedTextPage, _super);
    function HighlightedTextPage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    HighlightedTextPage.prototype.render = function () {
        return (React.createElement(ComponentPage, { styles: { navigation: { display: 'none' } }, title: 'HighlightedText', componentName: "HighlightedTextExample", exampleCards: React.createElement("div", null,
                React.createElement(ExampleCard, { title: "Basic highlighted text", code: HighlightedTextBasicExampleCode },
                    React.createElement(HighlightedTextBasicExample, null)),
                React.createElement(ExampleCard, { title: "Styled highlighted text", code: HighlightedTextStyledExampleCode },
                    React.createElement(HighlightedTextStyledExample, null)),
                React.createElement(ExampleCard, { title: "Multi-byte characters, RTL, and helpers", code: HighlightedTextCharactersExampleCode },
                    React.createElement(HighlightedTextCharactersExample, null))), propertiesTables: React.createElement(PropertiesTableSet, { sources: [HighlightedTextPropertiesTableSet] }), overview: React.createElement("div", null,
                React.createElement("p", null, "HighlightedText renders a string with highlights at the specified indices and lengths. Highlights are permitted to overlap.")), accessibility: React.createElement("div", null,
                React.createElement("p", null, "This component is accessible in Microsoft Edge, Chrome, and Firefox with Narrator. Localized labels for the start and end of a highlight will be attached to each highlight. It is not accessible in IE11 due to pseudo-elements not being exposed to the accessibility tree."),
                React.createElement("p", null,
                    "See recommended approach on MDN\u00A0",
                    React.createElement(Link, { href: 'https://developer.mozilla.org/en-US/docs/Web/HTML/Element/mark#Accessibility_concerns' }, "here"),
                    ".")), isHeaderVisible: this.props.isHeaderVisible }));
    };
    return HighlightedTextPage;
}(React.Component));
export { HighlightedTextPage };
//# sourceMappingURL=HighlightedTextPage.js.map