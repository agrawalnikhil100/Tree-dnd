/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
import { __assign } from "tslib";
import { shallow } from 'enzyme';
import 'jest';
import { DefaultButton } from '@fluentui/react/lib/Button';
import { getTheme } from '@fluentui/react/lib/Styling';
import * as React from 'react';
import { AccordionBase } from './Accordion.base';
import { styles } from './Accordion.styles';
describe('Accordion', function () {
    var defaultProps;
    beforeEach(function () {
        var theme = getTheme();
        defaultProps = {
            text: 'Stuff here',
            iconProps: { iconName: 'CollapseMenu' },
            onRenderContent: jest.fn(),
            styles: styles({ containerClassName: 'baf-test-accordian', isContentVisible: true }),
            theme: theme
        };
    });
    it('should render the component', function () {
        var wrapper = shallow(React.createElement(AccordionBase, __assign({}, defaultProps)));
        expect(wrapper.find('.ba-Accordion').length).toBe(1);
    });
    it('should show the content when the header is clicked', function () {
        var wrapper = shallow(React.createElement(AccordionBase, __assign({}, defaultProps, { onRenderContent: function () {
                return (React.createElement(DefaultButton, { key: "item1", text: "Link 1", iconProps: { iconName: 'CompassNW' }, ariaLabel: "New. Use left and right arrow keys to navigate", onClick: jest.fn() }));
            } })));
        wrapper.find('.ba-Accordion-header').simulate('click');
        expect(wrapper.find('.ba-Accordion-content').length).toBe(1);
    });
    it('should not show the content when the header is clicked twice', function () {
        var wrapper = shallow(React.createElement(AccordionBase, __assign({}, defaultProps, { onRenderContent: function () {
                return (React.createElement(DefaultButton, { key: "item1", text: "Link 1", iconProps: { iconName: 'CompassNW' }, ariaLabel: "New. Use left and right arrow keys to navigate", onClick: jest.fn() }));
            } })));
        expect(wrapper.find('.ba-Accordion-content').length).toBe(0);
        wrapper.find('.ba-Accordion-header').simulate('click');
        wrapper.find('.ba-Accordion-header').simulate('click');
        expect(wrapper.find('.ba-Accordion-content').length).toBe(0);
    });
    it('content should be initially visible if checked', function () {
        var wrapper = shallow(React.createElement(AccordionBase, __assign({}, defaultProps, { checked: true, onRenderContent: function () {
                return (React.createElement(DefaultButton, { key: "item1", text: "Link 1", iconProps: { iconName: 'CompassNW' }, ariaLabel: "New. Use left and right arrow keys to navigate", onClick: jest.fn() }));
            } })));
        expect(wrapper.find('.ba-Accordion-content').length).toBe(1);
    });
    it('content should be initially visible if not checked', function () {
        var wrapper = shallow(React.createElement(AccordionBase, __assign({}, defaultProps, { checked: false, onRenderContent: function () {
                return (React.createElement(DefaultButton, { key: "item1", text: "Link 1", iconProps: { iconName: 'CompassNW' }, ariaLabel: "New. Use left and right arrow keys to navigate", onClick: jest.fn() }));
            } })));
        expect(wrapper.find('.ba-Accordion-content').length).toBe(0);
    });
    it('content should remain visible on checked change', function () {
        var wrapper = shallow(React.createElement(AccordionBase, __assign({}, defaultProps, { checked: true, onRenderContent: function () {
                return (React.createElement(DefaultButton, { key: "item1", text: "Link 1", iconProps: { iconName: 'CompassNW' }, ariaLabel: "New. Use left and right arrow keys to navigate", onClick: jest.fn() }));
            } })));
        expect(wrapper.find('.ba-Accordion-content').length).toBe(1);
        wrapper.setProps({ checked: false });
        expect(wrapper.find('.ba-Accordion-content').length).toBe(1);
    });
    it('content should remain closed on checked change', function () {
        var wrapper = shallow(React.createElement(AccordionBase, __assign({}, defaultProps, { checked: false, onRenderContent: function () {
                return (React.createElement(DefaultButton, { key: "item1", text: "Link 1", iconProps: { iconName: 'CompassNW' }, ariaLabel: "New. Use left and right arrow keys to navigate", onClick: jest.fn() }));
            } })));
        expect(wrapper.find('.ba-Accordion-content').length).toBe(0);
        wrapper.setProps({ checked: true });
        expect(wrapper.find('.ba-Accordion-content').length).toBe(0);
    });
});
//# sourceMappingURL=Accordion.test.js.map