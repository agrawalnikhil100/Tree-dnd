/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
import { __assign } from "tslib";
import * as Enzyme from 'enzyme';
import 'jest';
import { getTheme } from '@fluentui/react/lib/Styling';
import * as React from 'react';
import { EmptyStateBase } from './EmptyState.base';
import { styles as getStyles } from './EmptyState.styles';
var doNothing = { onClick: function () { return undefined; } };
describe('EmptyState', function () {
    var wrapper;
    var props;
    beforeEach(function () {
        props = {
            styles: getStyles,
            theme: getTheme()
        };
    });
    afterEach(function () { return wrapper.unmount(); });
    it('should not unexpectedly change', function () {
        wrapper = Enzyme.mount(React.createElement(EmptyStateBase, __assign({}, props, { icon: 'Filter', primaryMessage: 'A learn more', secondaryMessage: ["There's no stuff here", 'second paragraph'], callToActionText: 'Make something here', callToActionProps: doNothing, learnMoreLabel: 'Learn more', learnMoreProps: doNothing })));
        expect(wrapper).toMatchSnapshot();
    });
    it('should place secondary messages optionally', function () {
        wrapper = Enzyme.mount(React.createElement(EmptyStateBase, __assign({}, props, { icon: 'Filter', primaryMessage: 'test', secondaryMessage: ['secondary', 'secondary'] })));
        expect(wrapper.find('.ba-EmptyState-PrimaryMessage').length).toBe(1);
        expect(wrapper.find('.ba-EmptyState-SecondaryMessage').length).toBe(2);
        expect(wrapper.find('.ms-Button').length).toBe(0);
    });
    it('should place call to actions optionally', function () {
        wrapper = Enzyme.mount(React.createElement(EmptyStateBase, __assign({}, props, { icon: 'Filter', primaryMessage: 'test', callToActionProps: { text: 'test', onClick: function () { return undefined; } }, callToActionText: 'test' })));
        expect(wrapper.find('.ba-EmptyState-PrimaryMessage').length).toBe(1);
        expect(wrapper.find('.ba-EmptyState-SecondaryMessage').length).toBe(0);
        expect(wrapper.find('.ms-Button').length).toBe(1);
    });
    it('should place learn more optionally', function () {
        wrapper = Enzyme.mount(React.createElement(EmptyStateBase, __assign({}, props, { icon: 'Filter', primaryMessage: 'test', secondaryMessage: ['secondary'], learnMoreProps: { onClick: function () { return undefined; } }, learnMoreLabel: 'test' })));
        expect(wrapper.find('.ba-EmptyState-PrimaryMessage').length).toBe(1);
        expect(wrapper.find('.ba-EmptyState-SecondaryMessage').length).toBe(1);
        expect(wrapper.find('LinkBase').length).toBe(1);
    });
    it('should place only the primaryMessage with no extra properties', function () {
        wrapper = Enzyme.mount(React.createElement(EmptyStateBase, __assign({}, props, { icon: 'Filter', primaryMessage: 'test' })));
        expect(wrapper.find('.ba-EmptyState-PrimaryMessage').length).toBe(1);
        expect(wrapper.find('.ba-EmptyState-SecondaryMessage').length).toBe(0);
        expect(wrapper.find('button').length).toBe(0);
    });
});
//# sourceMappingURL=EmptyState.test.js.map