/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
import { __assign, __extends } from "tslib";
import * as React from 'react';
// Components
import { TextField } from '@fluentui/react/lib/TextField';
import { FormBaseInput } from '../../FormBaseInput';
/**
 * TextBox input for the Form.
 */
var FormTextInput = /** @class */ (function (_super) {
    __extends(FormTextInput, _super);
    function FormTextInput(props, context) {
        var _this = _super.call(this, props, context, false /* Leading edge debounce */) || this;
        _this._onChange = function (event, newValue) {
            var _a;
            if (newValue === void 0) { newValue = ''; }
            var textFieldProps = _this.props.textFieldProps;
            (_a = textFieldProps === null || textFieldProps === void 0 ? void 0 : textFieldProps.onChange) === null || _a === void 0 ? void 0 : _a.call(textFieldProps, event, newValue);
            _this.setValue(newValue);
        };
        _this.state = {
            isValid: true,
            currentValue: _this.props.value || '',
            currentError: undefined
        };
        _this._validateTextFieldProps(_this.props.textFieldProps);
        return _this;
    }
    /**
     * Name of this component
     */
    FormTextInput.prototype.name = function () {
        return 'FormTextBox';
    };
    /**
     * Render a Fabric TextBox
     */
    FormTextInput.prototype.render = function () {
        return (React.createElement(TextField, __assign({}, this.props.textFieldProps, { key: this.props.inputKey, value: this.state.currentValue, onChange: this._onChange, errorMessage: this.state.currentError })));
    };
    FormTextInput.prototype._validateTextFieldProps = function (props) {
        if (props) {
            if (props.errorMessage) {
                // eslint-disable-next-line no-console
                console.warn("FormTextBox: 'errorMessage' prop was specified and will be ignored");
            }
            if (props.value) {
                // eslint-disable-next-line no-console
                console.warn("FormTextBox: 'value' prop was specified and will be ignored");
            }
            if (props.onChange) {
                // eslint-disable-next-line no-console
                console.warn("FormTextBox: 'onChange' prop was specified and will be ignored");
            }
        }
    };
    return FormTextInput;
}(FormBaseInput));
export { FormTextInput };
//# sourceMappingURL=FormTextInput.js.map