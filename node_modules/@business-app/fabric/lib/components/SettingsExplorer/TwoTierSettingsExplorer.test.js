/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
import { __assign } from "tslib";
import * as Enzyme from 'enzyme';
import 'jest';
import * as React from 'react';
import { SettingsExplorer } from './SettingsExplorer';
import { SettingsPage } from './SettingsPage';
import { TwoTierSettingsExplorerBase } from './TwoTierSettingsExplorer.base';
var TwoTierSettingsExplorerProps = {
    name: 'General Settings',
    saveButtonProps: {
        onClick: function () { return null; },
        text: 'Save'
    },
    cancelButtonProps: {
        onClick: function () { return null; },
        text: 'Cancel'
    },
    exitButtonProps: {
        onClick: function () { return null; },
        ariaLabel: 'Exit'
    }
};
var wrapper;
describe('Two tiered settings component', function () {
    beforeEach(function () {
        wrapper = Enzyme.shallow(React.createElement(TwoTierSettingsExplorerBase, __assign({}, TwoTierSettingsExplorerProps),
            React.createElement(SettingsExplorer, { name: 'First' },
                React.createElement(SettingsPage, { name: 'a' }),
                React.createElement(SettingsPage, { name: 'b' })),
            React.createElement(SettingsExplorer, { name: 'Second' },
                React.createElement(SettingsPage, { name: 'c' }),
                React.createElement(SettingsPage, { name: 'd' }))));
    });
    it('should render as expected', function () {
        expect(wrapper).toMatchSnapshot();
    });
});
describe('Two tiered settings component with custom key props', function () {
    beforeEach(function () {
        wrapper = Enzyme.shallow(React.createElement(TwoTierSettingsExplorerBase, __assign({}, TwoTierSettingsExplorerProps),
            React.createElement(SettingsExplorer, { name: 'First', id: 'First' },
                React.createElement(SettingsPage, { name: 'a', id: 'a' }),
                React.createElement(SettingsPage, { name: 'b' })),
            React.createElement(SettingsExplorer, { name: 'Second', id: 'Second' },
                React.createElement(SettingsPage, { name: 'c' }),
                React.createElement(SettingsPage, { name: 'd', id: 'a' }))));
    });
    it('should render as expected', function () {
        expect(wrapper).toMatchSnapshot();
    });
});
//# sourceMappingURL=TwoTierSettingsExplorer.test.js.map