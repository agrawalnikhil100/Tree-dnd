/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
/// <reference types="react" />
import { IButtonProps } from '@fluentui/react/lib/Button';
import { IContextualMenuProps } from '@fluentui/react/lib/ContextualMenu';
import { IFontIconProps } from '@fluentui/react/lib/Icon';
import { ILinkProps } from '@fluentui/react/lib/Link';
import { IStyle, ITheme } from '@fluentui/react/lib/Styling';
import { IStyleFunctionOrObject } from '@fluentui/react/lib/Utilities';
export declare enum ActionItemType {
    Link = 0,
    Button = 1,
    ContextualMenu = 2
}
export interface CardHeaderProps extends Readonly<React.HTMLAttributes<HTMLDivElement>> {
    /**
     * Title to be displayed in the header.
     */
    title?: string;
    /**
     * Sub-Title to be displayed in the header.
     */
    subTitle?: string;
    /**
     * @default auto
     * Custom height for the header.
     */
    height?: number;
    /**
     * Props for the large Main icon in the Card Header.
     */
    titleIconProps?: IFontIconProps | JSX.Element;
    /**
     * Props for the Sub icon in the Card Header. Requires A `subTitle` to be present.
     */
    subTitleIconProps?: IFontIconProps | JSX.Element;
    /**
     * This props is an array of Objects that help build the header's action buttons. As of now they can either be Links, Buttons, or Contextual Menus.
     */
    actionItemProps?: Array<{
        type: ActionItemType;
        props: ILinkProps | IButtonProps | IContextualMenuProps;
    }>;
    /**
     * The props for the contextual menu in the header.
     */
    contextualMenuProps?: IContextualMenuProps;
    /**
     * If a contextualMenu is present, an aria label for it must also be present.
     */
    contextualMenuAriaLabel?: string;
    /**
     * Callback that renders action links in the header.
     */
    renderActionLinks?: () => JSX.Element;
    /**
     * Theme provided by High-Order Component.
     */
    theme?: ITheme;
    /**
     * Call to provide customized styling that will layer on top of the variant rules.
     */
    styles?: IStyleFunctionOrObject<CardHeaderStyleProps, CardHeaderStyles>;
    /**
     * Callback that renders custom title.
     */
    onRenderTitle?: () => JSX.Element;
    /**
     * Callback that renders custom subTitle.
     */
    onRenderSubTitle?: () => JSX.Element;
}
export declare type CardHeaderStyleProps = Pick<CardHeaderProps, 'height' | 'subTitle' | 'theme' | 'className'>;
export interface CardHeaderStyles {
    headerContainer?: IStyle;
    titleContainer?: IStyle;
    titleIcon?: IStyle;
    title?: IStyle;
    subTitleContainer?: IStyle;
    subTitleIcon?: IStyle;
    subTitle?: IStyle;
    actionMenuContainer?: IStyle;
    actionMenuItem?: IStyle;
    actionMenuButton?: IStyle;
    actionMenuLink?: IStyle;
}
