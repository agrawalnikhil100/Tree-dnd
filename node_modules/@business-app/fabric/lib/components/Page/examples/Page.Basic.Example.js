/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
import { __extends } from "tslib";
import { Breadcrumb } from '@fluentui/react/lib/Breadcrumb';
import { ChoiceGroup } from '@fluentui/react/lib/ChoiceGroup';
import { Label } from '@fluentui/react/lib/Label';
import { MessageBar, MessageBarType } from '@fluentui/react/lib/MessageBar';
import { PivotItem } from '@fluentui/react/lib/Pivot';
import { Toggle } from '@fluentui/react/lib/Toggle';
import * as React from 'react';
import { DetailsList, DetailsListLayoutMode } from '@fluentui/react/lib/DetailsList';
import { Pivot } from '@fluentui/react/lib/Pivot';
import { Page } from '../';
import { items } from '../../../utilities/data/contextualMenuItems';
import { CommandBarWithSearchBox } from '../../CommandBarWithSearchBox';
import { PaneSize } from '../../Pane';
var categories = ['Cat', 'House', 'Table'];
var PageBasicExample = /** @class */ (function (_super) {
    __extends(PageBasicExample, _super);
    function PageBasicExample(props) {
        var _this = _super.call(this, props) || this;
        _this.onChangePaneType = function (ev, option) {
            var paneType;
            switch (option.key) {
                case 'A':
                    paneType = PaneSize.small;
                    break;
                case 'B':
                    paneType = PaneSize.medium;
                    break;
                default:
                    paneType = PaneSize.small;
                    break;
            }
            _this.setState({ paneType: paneType, isOpenPane: false });
        };
        _this._onRenderPaneBody = function () {
            return React.createElement("div", null, "Content goes here...");
        };
        _this._onDismissPane = function () {
            _this.setState({ isOpenPane: false });
        };
        _this._onTogglePane = function (isOpenPane) {
            _this.setState({ isOpenPane: isOpenPane });
        };
        _this._renderBody = function () {
            return (React.createElement("div", null,
                React.createElement(DetailsList, { items: _this.detailsListItems, columns: _this.columns, setKey: "set", layoutMode: DetailsListLayoutMode.justified, selectionPreservedOnEmptyClick: true, ariaLabelForSelectionColumn: "Toggle selection", ariaLabelForSelectAllCheckbox: "Toggle selection for all items", checkButtonAriaLabel: "Row checkbox" }),
                React.createElement("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."),
                React.createElement("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."),
                React.createElement("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."),
                React.createElement("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."),
                React.createElement("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."),
                React.createElement("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.")));
        };
        _this.state = {
            isLoading: false,
            isOpenPane: false,
            paneType: PaneSize.small
        };
        _this.detailsListItems = [];
        for (var i = 0; i < 75; i++) {
            _this.detailsListItems.push({
                key: i,
                name: 'Item ' + i,
                value: i
            });
        }
        _this.columns = [
            { key: 'column1', name: 'Name', fieldName: 'name', minWidth: 100, maxWidth: 200, isResizable: true },
            { key: 'column2', name: 'Value', fieldName: 'value', minWidth: 100, maxWidth: 200, isResizable: true }
        ];
        _this._onLoadingSet = _this._onLoadingSet.bind(_this);
        return _this;
    }
    PageBasicExample.prototype.render = function () {
        return (React.createElement("div", null,
            React.createElement(Toggle, { label: "Show loading overlay", checked: this.state.isLoading, onChanged: this._onLoadingSet, onText: "Loading", offText: "Loaded" }),
            React.createElement(ChoiceGroup, { className: "defaultChoiceGroup", defaultSelectedKey: "A", options: [
                    {
                        key: 'A',
                        text: 'Small pane'
                    },
                    {
                        key: 'B',
                        text: 'Medium pane'
                    }
                ], onChange: this.onChangePaneType, label: "Pane type", required: true }),
            React.createElement(Toggle, { label: "Show Pane", checked: this.state.isOpenPane, onChanged: this._onTogglePane }),
            React.createElement(Label, null, "The page is surrounded by a black border so you can tell where the page ends."),
            React.createElement("div", { style: { border: '2px solid black' } },
                React.createElement(Page, { style: { height: '500px', overflowX: 'scroll' }, paneProps: {
                        isOpen: this.state.isOpenPane,
                        headerText: 'Pane Example',
                        onDismiss: this._onDismissPane,
                        hasCloseButton: true,
                        onRenderBody: this._onRenderPaneBody,
                        type: this.state.paneType
                    }, spinnerProps: {
                        ariaLabel: 'Loading'
                    }, showOverlay: this.state.isLoading, renderHeader: function () { return React.createElement(CommandBarWithSearchBox, { items: items }); }, renderMessageBar: function () { return (React.createElement(MessageBar, { messageBarType: MessageBarType.error }, "Lets display an error")); }, renderFooter: function () { return React.createElement(MessageBar, null, "This is a page footer"); }, renderTitle: function () { return (React.createElement(Breadcrumb, { items: [
                            { text: 'Test', key: 'Test' },
                            { text: 'Header', key: 'Header' }
                        ] })); }, renderPivot: function () { return (React.createElement(Pivot, null,
                        React.createElement(PivotItem, { linkText: 'Test' }),
                        React.createElement(PivotItem, { linkText: 'Another Test' }),
                        React.createElement(PivotItem, { linkText: 'One More' }),
                        React.createElement(PivotItem, { linkText: 'Hi' }))); }, renderBody: this._renderBody }))));
    };
    PageBasicExample.prototype._onLoadingSet = function (isLoading) {
        this.setState({ isLoading: isLoading });
    };
    return PageBasicExample;
}(React.Component));
export { PageBasicExample };
//# sourceMappingURL=Page.Basic.Example.js.map