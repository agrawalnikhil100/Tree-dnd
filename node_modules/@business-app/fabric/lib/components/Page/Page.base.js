/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
import { __assign, __extends, __rest } from "tslib";
import { Overlay } from '@fluentui/react/lib/Overlay';
import { Spinner, SpinnerSize, SpinnerType } from '@fluentui/react/lib/Spinner';
import { classNamesFunction } from '@fluentui/react/lib/Utilities';
import * as React from 'react';
import { Pane } from '../Pane';
var getClassNames = classNamesFunction();
/**
 * Provides a common format for the overall layout and styling of a page.
 *
 * @export
 * @class Page
 * @extends {React.Component<IPageProps>}
 */
var PageBase = /** @class */ (function (_super) {
    __extends(PageBase, _super);
    function PageBase() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PageBase.prototype.render = function () {
        var _a = this.props, className = _a.className, renderHeader = _a.renderHeader, renderMessageBar = _a.renderMessageBar, renderTitle = _a.renderTitle, renderPivot = _a.renderPivot, renderFooter = _a.renderFooter, showOverlay = _a.showOverlay, overlayProps = _a.overlayProps, spinnerProps = _a.spinnerProps, renderBody = _a.renderBody, styles = _a.styles, theme = _a.theme, paneProps = _a.paneProps, rest = __rest(_a, ["className", "renderHeader", "renderMessageBar", "renderTitle", "renderPivot", "renderFooter", "showOverlay", "overlayProps", "spinnerProps", "renderBody", "styles", "theme", "paneProps"]);
        var classNames = getClassNames(styles, { theme: theme, className: className, paneProps: paneProps });
        return (React.createElement("section", __assign({ id: "ba-Page-main", className: classNames.root }, rest),
            React.createElement(React.Fragment, null,
                renderHeader && React.createElement("div", { className: classNames.header }, renderHeader()),
                renderMessageBar && (React.createElement("div", { className: "ba-Page-MessageBar", "aria-live": "assertive" }, renderMessageBar()))),
            React.createElement("section", { className: classNames.container },
                React.createElement("section", { className: classNames.content },
                    React.createElement("main", { className: classNames.body },
                        renderTitle && React.createElement("header", { className: classNames.title }, renderTitle()),
                        renderPivot && React.createElement("div", { className: classNames.pivot }, renderPivot()),
                        renderBody && renderBody()),
                    renderFooter && React.createElement("footer", { className: classNames.footer }, renderFooter())),
                paneProps && React.createElement(Pane, __assign({}, paneProps))),
            showOverlay && (React.createElement(Overlay, __assign({ className: classNames.loadingOverlay, styles: { root: { backgroundColor: '#ffffff', opacity: 0.9 } } }, overlayProps),
                React.createElement(Spinner, __assign({ size: SpinnerSize.large, type: SpinnerType.large, ariaLive: "assertive", styles: { root: { margin: '0px auto auto auto', paddingTop: '300px' } } }, spinnerProps))))));
    };
    return PageBase;
}(React.Component));
export { PageBase };
//# sourceMappingURL=Page.base.js.map