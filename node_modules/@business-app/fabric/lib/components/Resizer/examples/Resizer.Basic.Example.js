/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
import { __extends } from "tslib";
import * as React from 'react';
import { Resizer } from '../Resizer';
import { PrimaryButton } from '@fluentui/react/lib/Button';
import { ResizerLocation } from '../Resizer.types';
export function ResizerBasicExample() {
    return React.createElement(ResizableButton, { initialSize: 350 });
}
var hiddenAccessibleDivStyles = {
    overflow: 'hidden',
    position: 'absolute',
    top: -1000,
    left: -1000,
    width: 0,
    height: 0
};
var ResizableButton = /** @class */ (function (_super) {
    __extends(ResizableButton, _super);
    function ResizableButton(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {
            width: props.initialSize,
            height: 148
        };
        return _this;
    }
    ResizableButton.prototype.render = function () {
        var _this = this;
        return (React.createElement(React.Fragment, null,
            React.createElement("div", { style: { position: 'relative', width: this.state.width, height: 150 } },
                React.createElement(PrimaryButton, { style: { width: '100%', height: '100%' }, text: "Hover on the right edge to see the resizer" }),
                React.createElement(Resizer, { ariaLabel: 'Use the left and right arrow keys to resize the example', location: ResizerLocation.Right, size: this.state.width, onSizeChanged: function (width) { return _this.setState({ width: width }); }, minSize: 100, maxSize: 1000 })),
            React.createElement("div", { style: {
                    marginTop: 20,
                    position: 'relative',
                    width: this.props.initialSize,
                    height: this.state.height
                } },
                React.createElement(PrimaryButton, { style: { width: '100%', height: '100%' }, text: "Hover on the bottom edge to see the resizer" }),
                React.createElement(Resizer, { ariaLabel: 'Use the up and down arrow keys to resize the example', location: ResizerLocation.Bottom, size: this.state.height, onSizeChanged: function (height) { return _this.setState({ height: height }); }, minSize: 100, maxSize: 1000 })),
            React.createElement("div", { "aria-live": "assertive", "aria-atomic": "true", style: hiddenAccessibleDivStyles }, "Example resized to " + this.state.height + " height"),
            React.createElement("div", { "aria-live": "assertive", "aria-atomic": "true", style: hiddenAccessibleDivStyles }, "Example resized to " + this.state.width + " width")));
    };
    return ResizableButton;
}(React.Component));
//# sourceMappingURL=Resizer.Basic.Example.js.map