/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
import { __extends } from "tslib";
import { IconButton } from '@fluentui/react/lib/Button';
import { Icon } from '@fluentui/react/lib/Icon';
import { css } from '@fluentui/react/lib/Utilities';
import { classNamesFunction } from '@fluentui/react/lib/Utilities';
import * as React from 'react';
var getClassNames = classNamesFunction();
var WizardTipsAndHelpBase = /** @class */ (function (_super) {
    __extends(WizardTipsAndHelpBase, _super);
    function WizardTipsAndHelpBase() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            isWizardTipsAndHelpVisibleOnSmallScreens: false
        };
        _this.onShowClicked = function () {
            _this.setState({
                isWizardTipsAndHelpVisibleOnSmallScreens: true
            });
        };
        _this.onCloseClicked = function () {
            _this.setState({
                isWizardTipsAndHelpVisibleOnSmallScreens: false
            });
        };
        return _this;
    }
    WizardTipsAndHelpBase.prototype.render = function () {
        var _a = this.props, children = _a.children, title = _a.title, closeButtonText = _a.closeButtonText, theme = _a.theme, styles = _a.styles, className = _a.className;
        var classNames = getClassNames(styles, {
            theme: theme,
            className: className
        });
        return (React.createElement(React.Fragment, null,
            React.createElement(IconButton, { iconProps: { iconName: 'Help' }, className: classNames.show, onClick: this.onShowClicked, ariaLabel: title, title: title }),
            React.createElement("aside", { className: css(classNames.root, !this.state.isWizardTipsAndHelpVisibleOnSmallScreens && classNames.rootHidden) },
                React.createElement("header", { className: classNames.header },
                    React.createElement(Icon, { iconName: "Help", className: classNames.icon }),
                    React.createElement("h4", { className: classNames.title }, title),
                    React.createElement(IconButton, { iconProps: { iconName: 'Cancel' }, className: classNames.close, onClick: this.onCloseClicked, ariaLabel: closeButtonText, title: closeButtonText })),
                children)));
    };
    return WizardTipsAndHelpBase;
}(React.Component));
export { WizardTipsAndHelpBase };
//# sourceMappingURL=WizardTipsAndHelp.base.js.map