/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
import { ActionButton } from '@fluentui/react/lib/Button';
import { Link } from '@fluentui/react/lib/Link';
import { classNamesFunction } from '@fluentui/react/lib/Utilities';
import * as React from 'react';
import { getStyles } from './TipsAndHelpCard.styles';
var getClassNames = classNamesFunction();
export function TipsAndHelpCardBase(props) {
    var _a = props.card, title = _a.title, content = _a.content, action = _a.action, actionLink = _a.actionLink;
    var classNames = getClassNames(getStyles, {
        theme: props.theme,
        className: props.className
    });
    return (React.createElement("div", { className: classNames.root },
        React.createElement("div", { className: classNames.content },
            React.createElement("h5", { className: classNames.title }, title),
            React.createElement("div", { className: classNames.text }, content)),
        (action || actionLink) && (React.createElement("footer", { className: classNames.action },
            action && (React.createElement(ActionButton, { iconProps: { iconName: action.iconName }, onClick: action.onClick, className: classNames.button, disabled: action.isDisabled }, action.name)),
            actionLink &&
                (actionLink.iconName ? (React.createElement(ActionButton, { iconProps: { iconName: actionLink.iconName }, href: actionLink.href, target: actionLink.target || '_blank', className: classNames.button, onClick: actionLink.onClick }, actionLink.name)) : (React.createElement(Link, { href: actionLink.href, target: actionLink.target || '_blank', onClick: actionLink.onClick }, actionLink.name)))))));
}
//# sourceMappingURL=TipsAndHelpCard.base.js.map