/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
import * as Enzyme from 'enzyme';
import 'jest';
import * as React from 'react';
import { WizardFooterBase as WizardFooter } from './WizardFooter.base';
describe('Wizard Footer', function () {
    it('should disable next/previous button when requested', function () {
        var noop = jest.fn();
        var wrapper = Enzyme.shallow(React.createElement(WizardFooter, { backButtonText: "Back", backButtonProps: { className: 'back' }, continueButtonText: "Next", continueButtonProps: { className: 'next' }, canGoToNextStep: true, canGoToPreviousStep: false, shouldDisplayBackButton: true, shouldHideContinueButton: false, goToNextStep: noop, goToPreviousStep: noop }));
        expect(wrapper.find('.back').props().disabled).toBe(true);
        expect(wrapper.find('.next').props().disabled).toBe(false);
    });
    it('supports hiding the back button', function () {
        var noop = jest.fn();
        var wrapper = Enzyme.shallow(React.createElement(WizardFooter, { backButtonText: "Back", backButtonProps: { className: 'back' }, continueButtonText: "Next", continueButtonProps: { className: 'next' }, canGoToNextStep: true, canGoToPreviousStep: false, shouldDisplayBackButton: false, goToNextStep: noop, goToPreviousStep: noop }));
        expect(wrapper.find('.back').exists()).toBe(false);
        expect(wrapper.find('.next').exists()).toBe(true);
    });
    it('supports hiding the next button', function () {
        var noop = jest.fn();
        var wrapper = Enzyme.shallow(React.createElement(WizardFooter, { backButtonText: "Back", backButtonProps: { className: 'back' }, continueButtonText: "Next", canGoToNextStep: true, canGoToPreviousStep: false, shouldDisplayBackButton: true, shouldHideContinueButton: true, goToNextStep: noop, goToPreviousStep: noop }));
        expect(wrapper.find('.next').exists()).toBe(false);
    });
});
//# sourceMappingURL=WizardFooter.test.js.map