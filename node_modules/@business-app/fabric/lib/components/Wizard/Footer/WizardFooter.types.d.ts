/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
/// <reference types="react" />
import { IButtonProps } from '@fluentui/react/lib/Button';
import { IStyle, ITheme } from '@fluentui/react/lib/Styling';
import { IPropsWithStyles, IRefObject } from '@fluentui/react/lib/Utilities';
export declare type IButtonPropsWithAutomationId = IButtonProps & {
    'data-automation-id'?: string;
};
export interface WizardFooterProps extends IPropsWithStyles<WizardFooterStyleProps, WizardFooterStyles> {
    /**
     * Optional callback to access the Footer interface. Use this instead of ref for accessing
     * the public methods and properties of the component.
     */
    componentRef?: IRefObject<React.Component>;
    className?: string;
    /**
     * Theme provided by High-Order Component.
     */
    theme?: ITheme;
    shouldDisplayBackButton: boolean;
    shouldHideContinueButton?: boolean;
    canGoToPreviousStep: boolean;
    canGoToNextStep: boolean;
    continueButtonText: string;
    continueButtonProps?: IButtonPropsWithAutomationId;
    backButtonText: string;
    backButtonProps?: IButtonPropsWithAutomationId;
    summaryText?: string;
    goToPreviousStep(): void;
    goToNextStep(): void;
    renderFooterContent?(defaultFooterButtonsRender: () => React.ReactNode, defaultFooterSummaryRender: () => React.ReactNode): React.ReactNode;
}
export declare type WizardFooterStyleProps = {
    theme: ITheme;
    className?: string;
};
export interface WizardFooterStyles {
    root: IStyle;
    button: IStyle;
    summaryText: IStyle;
}
