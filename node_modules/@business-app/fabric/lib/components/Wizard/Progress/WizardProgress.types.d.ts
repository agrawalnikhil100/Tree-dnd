/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
/// <reference types="react" />
import { IStyle, ITheme } from '@fluentui/react/lib/Styling';
import { IPropsWithStyles } from '@fluentui/react/lib/Utilities';
import { StepStatus } from '../StepStatus';
export interface WizardProgressProps extends IPropsWithStyles<WizardProgressStyleProps, WizardProgressStyles> {
    /**
     * Theme provided by High-Order Component.
     */
    theme?: ITheme;
    className?: string;
    expandButtonLabel: string;
    collapseButtonLabel: string;
    stepNames: string[];
    stepSummaries: string[][];
    stepStatuses: StepStatus[];
    currentIndex: number;
    computeAriaDescription(stepIndex: number): React.ReactNode;
    onProgressStepClick?(stepIndex: number): void;
}
export declare type WizardProgressStyleProps = {
    theme: ITheme;
    className?: string;
};
export interface WizardProgressStyles {
    /** Style for the root element. */
    root: IStyle;
    list: IStyle;
    itemWrapper: IStyle;
    passedStep: IStyle;
    currentStep: IStyle;
    futureStep: IStyle;
    lastStep: IStyle;
    validIcon: IStyle;
    warningIcon: IStyle;
    errorIcon: IStyle;
    emptyIcon: IStyle;
    currentEmptyIcon: IStyle;
    label: IStyle;
    summary: IStyle;
    visuallyHidden: IStyle;
    toggle: IStyle;
}
