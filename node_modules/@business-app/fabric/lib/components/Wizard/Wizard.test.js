/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
import * as Enzyme from 'enzyme';
import 'jest';
import * as React from 'react';
import { StepStatus } from './StepStatus';
import { WizardBase as Wizard } from './Wizard.base';
describe('Wizard', function () {
    it('renders the placeholders correctly', function () {
        var noop = jest.fn();
        var wrapper = Enzyme.shallow(React.createElement(Wizard, { onRenderStep: function () { return React.createElement("div", { className: "step-body" }); }, onRenderRightPane: function () { return React.createElement("div", { className: "right-pane" }); }, onRenderHeaderItems: function () { return React.createElement("div", { className: "header-items" }); }, onRenderHeaderFarItems: function () { return React.createElement("div", { className: "header-far-items" }); }, progressProps: {
                stepNames: ['Step1', 'Step2'],
                stepStatuses: [StepStatus.Valid, StepStatus.Empty],
                stepSummaries: [['Done'], []],
                currentIndex: 0,
                computeAriaDescription: function () { return 'description'; },
                expandButtonLabel: 'Expand timeline',
                collapseButtonLabel: 'Collapse timeline',
                onProgressStepClick: function (stepNo) { return null; }
            }, footerProps: {
                backButtonText: 'Back',
                continueButtonText: 'Next',
                canGoToPreviousStep: true,
                canGoToNextStep: true,
                shouldDisplayBackButton: true,
                goToNextStep: noop,
                goToPreviousStep: noop
            } }));
        expect(wrapper.find('.step-body').length).toBe(1);
        expect(wrapper.find('.right-pane').length).toBe(1);
        expect(wrapper.find('.header-items').length).toBe(1);
        expect(wrapper.find('.header-far-items').length).toBe(1);
    });
});
//# sourceMappingURL=Wizard.test.js.map