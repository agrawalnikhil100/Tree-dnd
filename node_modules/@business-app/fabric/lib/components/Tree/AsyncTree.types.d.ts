/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
import { ITreeItem, ITreeProps, ITreeStrings } from './Tree.types';
export interface IAsyncTreeItem extends ITreeItem {
    isLoading: boolean;
    hasLoaded: boolean;
    canLoadMore: boolean;
    loadingError: Error | null;
}
export declare type ILoadingTreeSubItem = ITreeItem;
export declare type IErrorTreeSubItem = ITreeItem & {
    onRetryClick?: () => void;
};
export declare type ILoadMoreTreeSubItem = ITreeItem & {
    onLoadMoreClick?: () => void;
};
export declare type IAsyncTreeProps = Omit<ITreeProps<IAsyncTreeItem | ILoadingTreeSubItem | ILoadMoreTreeSubItem | IErrorTreeSubItem>, 'items' | 'strings'> & {
    onResolveItems: (parent: IAsyncTreeItem | null, continuationToken?: string) => Promise<[
        Array<Omit<IAsyncTreeItem, 'level' | 'isLoading' | 'hasLoaded' | 'canLoadMore' | 'loadingError'>>,
        string | null
    ]>;
    strings: IAsyncTreeStrings;
};
export declare type IAsyncTreeStrings = ITreeStrings & {
    loadingSubItemLabel?: string;
    loadMoreSubItemLabel?: string;
    errorSubItemLabel?: string;
    errorSubItemRetryLinkText?: string;
};
