/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
import { __extends } from "tslib";
import { ComponentPage, ExampleCard, PropertiesTableSet } from '@fluentui/react-docsite-components';
import * as React from 'react';
import { TreeAlternatingRowColorExample } from './examples/Tree.AlternatingRowColorExample';
import { TreeBasicUncontrolledExample } from './examples/Tree.BasicUncontrolled.Example';
import { TreeControlledExample } from './examples/Tree.Controlled.Example';
import { TreeHeavilyCustomizedExample } from './examples/Tree.HeavilyCustomized.Example';
import { TreeOverflowAndLayoutExample } from './examples/Tree.OverflowAndLayout.Example';
import AsyncTreeBasicExampleCode from '!!raw-loader!../../../src/components/Tree/examples/AsyncTree.BasicExample.tsx';
import AsyncTreePaginationExampleCode from '!!raw-loader!../../../src/components/Tree/examples/AsyncTree.PaginationExample.tsx';
import ShimmeredTreeBasicExampleCode from '!!raw-loader!../../../src/components/Tree/examples/ShimmeredTree.BasicExample.tsx';
import TreeAlternatingRowColorExampleCode from '!!raw-loader!../../../src/components/Tree/examples/Tree.AlternatingRowColorExample.tsx';
import TreeBasicUncontrolledExampleCode from '!!raw-loader!../../../src/components/Tree/examples/Tree.BasicUncontrolled.Example.tsx';
import TreeControlledExampleCode from '!!raw-loader!../../../src/components/Tree/examples/Tree.Controlled.Example.tsx';
import TreeHeavilyCustomizedExampleCode from '!!raw-loader!../../../src/components/Tree/examples/Tree.HeavilyCustomized.Example.tsx';
import TreeOverflowAndLayoutExampleCode from '!!raw-loader!../../../src/components/Tree/examples/Tree.OverflowAndLayout.Example.tsx';
import TreePropertiesTableSet from '!!raw-loader!../../../src/components/Tree/Tree.types.ts';
import { AsyncTreeBasicExample } from './examples/AsyncTree.BasicExample';
import { AsyncTreePaginationExample } from './examples/AsyncTree.PaginationExample';
import { ShimmeredTreeBasicExample } from './examples/ShimmeredTree.BasicExample';
var TreePage = /** @class */ (function (_super) {
    __extends(TreePage, _super);
    function TreePage() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            selection: {}
        };
        return _this;
    }
    TreePage.prototype.render = function () {
        return (React.createElement(ComponentPage, { styles: { navigation: { display: 'none' } }, title: 'Tree', componentName: "TreeExample", exampleCards: React.createElement("div", null,
                React.createElement(ExampleCard, { title: "Basic Uncontrolled Tree (with no contextual menu options)", code: TreeBasicUncontrolledExampleCode },
                    React.createElement(TreeBasicUncontrolledExample, null)),
                React.createElement(ExampleCard, { title: "Controlled Tree", code: TreeControlledExampleCode },
                    React.createElement(TreeControlledExample, null)),
                React.createElement(ExampleCard, { title: "Alternating Row Color Tree", code: TreeAlternatingRowColorExampleCode },
                    React.createElement(TreeAlternatingRowColorExample, null)),
                React.createElement(ExampleCard, { title: "Heavily Customized Tree", code: TreeHeavilyCustomizedExampleCode },
                    React.createElement(TreeHeavilyCustomizedExample, null)),
                React.createElement(ExampleCard, { title: "Overflow and Layout", code: TreeOverflowAndLayoutExampleCode },
                    React.createElement(TreeOverflowAndLayoutExample, null)),
                React.createElement(ExampleCard, { title: "Lazy loaded", code: AsyncTreeBasicExampleCode },
                    React.createElement(AsyncTreeBasicExample, null)),
                React.createElement(ExampleCard, { title: "Shimmered Tree", code: ShimmeredTreeBasicExampleCode },
                    React.createElement(ShimmeredTreeBasicExample, null)),
                React.createElement(ExampleCard, { title: "Lazy loaded with pagination", code: AsyncTreePaginationExampleCode },
                    React.createElement(AsyncTreePaginationExample, null)),
                React.createElement(ExampleCard, { title: "Shimmered Tree", code: ShimmeredTreeBasicExampleCode },
                    React.createElement(ShimmeredTreeBasicExample, null))), propertiesTables: React.createElement(PropertiesTableSet, { sources: [TreePropertiesTableSet] }), overview: React.createElement("div", null,
                React.createElement("p", null, "Provides a tree control.")), isHeaderVisible: this.props.isHeaderVisible }));
    };
    return TreePage;
}(React.Component));
export { TreePage };
//# sourceMappingURL=TreePage.js.map