/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
import { IAsyncTreeItem, IErrorTreeSubItem, ILoadingTreeSubItem, ILoadMoreTreeSubItem } from './AsyncTree.types';
import { IArrayTree } from './useArrayTree';
export interface IAsyncArrayTree<TTreeItem extends IAsyncTreeItem> extends IArrayTree<TTreeItem | ILoadingTreeSubItem | ILoadMoreTreeSubItem | IErrorTreeSubItem> {
    load(item: TTreeItem): void;
    loadMore(item: TTreeItem, continuationToken: string): void;
}
export declare function useAsyncArrayTree<TTreeItem extends IAsyncTreeItem>(topLevelItems: TTreeItem[], onLoadChildren: (item: TTreeItem, continuationToken?: string) => Promise<[
    Array<Omit<TTreeItem, 'level' | 'isLoading' | 'hasLoaded' | 'canLoadMore' | 'loadingError'>>,
    string | null
]>, loadingSubItemFactory?: (parent: TTreeItem) => ILoadingTreeSubItem, loadMoreSubItemFactory?: (parent: TTreeItem, onLoadMoreClick: () => void) => ILoadMoreTreeSubItem, errorSubItemFactory?: (parent: TTreeItem, onRetryClick: () => void) => IErrorTreeSubItem): IAsyncArrayTree<TTreeItem>;
