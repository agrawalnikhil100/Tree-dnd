/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
import { __extends } from "tslib";
import { mergeStyleSets } from '@fluentui/react/lib/Styling';
import * as React from 'react';
import { Tree } from '../Tree';
import { getFolderKeys, produceItems } from './Tree.Example.Data';
var TreeBasicUncontrolledExample = /** @class */ (function (_super) {
    __extends(TreeBasicUncontrolledExample, _super);
    function TreeBasicUncontrolledExample() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TreeBasicUncontrolledExample.prototype.render = function () {
        var items = produceItems;
        var folderKeysSet = getFolderKeys(items);
        return (React.createElement("div", { className: exampleStyles.exampleContainer },
            React.createElement(Tree, { items: items, initialExpandedItemKeys: folderKeysSet, strings: {
                    listAriaLabel: 'list',
                    moreCommandsAriaLabel: 'more commands'
                } })));
    };
    return TreeBasicUncontrolledExample;
}(React.Component));
export { TreeBasicUncontrolledExample };
var exampleStyles = mergeStyleSets({
    exampleContainer: {
        // 'display: flex' is important for the Tree to layout correctly.
        display: 'flex',
        // Just an example to prove that row direction also works for the Tree.
        flexDirection: 'row',
        width: 320,
        height: 200,
        userSelect: 'none'
    }
});
//# sourceMappingURL=Tree.BasicUncontrolled.Example.js.map