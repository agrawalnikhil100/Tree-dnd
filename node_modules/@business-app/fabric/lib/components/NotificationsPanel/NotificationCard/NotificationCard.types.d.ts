/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
/// <reference types="react" />
import { IStyle, ITheme } from '@fluentui/react/lib/Styling';
import { IStyleFunctionOrObject } from '@fluentui/react/lib/Utilities';
export interface INotificationCardProps {
    /**
     * Id for the notification.
     */
    id: string;
    /**
     * The title text for the notification.
     */
    title?: string;
    /**
     * The description text for the notification.
     */
    body?: string;
    /**
     * Text to show on the primary part of the header.
     */
    headerPrimaryText?: string;
    /**
     * Text to show on the secondary part of the header.
     */
    headerSecondaryText?: string;
    /**
     * Header tooltip.
     */
    headerTooltip?: string;
    /**
     * Text for the call to action link.
     */
    actionText?: string;
    /**
     * Whether this is a new notification or an old one.
     */
    isNew?: boolean;
    /**
     * Tooltip for the dismiss icon.
     */
    dismissTooltip?: string;
    /**
     * Dismiss icon accessible label.
     */
    dismissAriaLabel?: string;
    /**
     * Removes the default tab-index from the Notification Card.
     */
    disableTabIndex?: boolean;
    /**
     * onDismiss callback.
     */
    onDismiss?: (id: string) => void;
    /**
     * Call to action callback.
     */
    onActionClick?: (id: string) => void;
    /**
     * Callback for handling clicking on the Notification Card.
     */
    onClick?: (id: string) => void;
    /**
     * Callback to provide a custom icon for the  Notification Card.
     */
    onRenderIcon?: () => JSX.Element;
    /**
     * Callback to provide a custom Notification Card.
     */
    onRenderCardBody?: () => JSX.Element;
    /**
     * Theme provided by High-Order Component.
     */
    theme?: ITheme;
    /**
     * Call to provide customized styling that will layer on top of the variant rules.
     */
    styles?: IStyleFunctionOrObject<Pick<INotificationCardProps, 'theme'>, INotificationCardStyles>;
}
export interface INotificationCardStyles {
    root: IStyle;
    container: IStyle;
    readMarker: IStyle;
    body: IStyle;
    header: IStyle;
    headerTextContainer: IStyle;
    headerSeparator: IStyle;
    closeIcon: IStyle;
    messageContainer: IStyle;
    message: IStyle;
    messageTitle: IStyle;
    messageDescription: IStyle;
    messageActionText: IStyle;
    iconContainer: IStyle;
}
export interface INotificationCardStyleProps extends Pick<INotificationCardProps, 'theme'> {
    hasOnClick: boolean;
}
