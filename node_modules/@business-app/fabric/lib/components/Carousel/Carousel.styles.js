/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
import { HighContrastSelector } from '@fluentui/react/lib/Styling';
export var styles = function (_a) {
    var _b, _c, _d, _e;
    var className = _a.className, theme = _a.theme;
    var palette = theme.palette, semanticColors = theme.semanticColors;
    return {
        root: [
            'ba-Carousel',
            className,
            {
                position: 'relative',
                display: 'flex',
                alignItems: 'center',
                justifyContent: 'center',
                minHeight: 32,
                overflow: 'hidden'
            }
        ],
        itemWrapper: [
            'ba-CarouselItem',
            {
                width: '100%'
            }
        ],
        indicatorsWrapper: [
            'ba-Carousel-indicatorsWrapper',
            {
                position: 'absolute',
                display: 'flex',
                left: '50%',
                bottom: 0,
                transform: 'translateX(-50%)',
                whiteSpace: 'nowrap',
                selectors: (_b = {},
                    _b[HighContrastSelector] = {
                        bottom: 3
                    },
                    _b)
            }
        ],
        controlsWrapper: [
            'ba-Carousel-controlsWrapper',
            {
                display: 'flex'
            }
        ],
        subComponentStyles: {
            tooltipControl: {
                root: [
                    'ba-Carousel-tooltipControl',
                    {
                        position: 'absolute',
                        top: '50%',
                        transform: 'translateY(-50%)',
                        padding: 0,
                        selectors: {
                            '&.ba-Carousel-tooltipControl-previous': {
                                left: 1,
                                selectors: (_c = {},
                                    _c[HighContrastSelector] = {
                                        left: 3
                                    },
                                    _c)
                            },
                            '&.ba-Carousel-tooltipControl-next': {
                                right: 1,
                                selectors: (_d = {},
                                    _d[HighContrastSelector] = {
                                        right: 3
                                    },
                                    _d)
                            }
                        }
                    }
                ]
            },
            control: {
                root: [
                    'ba-Carousel-control',
                    {
                        height: 32,
                        minWidth: 32,
                        padding: 0,
                        color: semanticColors.buttonText,
                        backgroundColor: semanticColors.buttonBackground,
                        border: '1px solid transparent',
                        boxShadow: theme.effects.elevation8,
                        selectors: (_e = {
                                '&.ba-Carousel-control-previous': { borderBottomLeftRadius: 0, borderTopLeftRadius: 0 },
                                '&.ba-Carousel-control-next': { borderBottomRightRadius: 0, borderTopRightRadius: 0 }
                            },
                            _e[HighContrastSelector] = {
                                color: semanticColors.primaryButtonText,
                                backgroundColor: semanticColors.primaryButtonBackgroundHovered
                            },
                            _e)
                    }
                ],
                rootHovered: {
                    color: semanticColors.buttonText,
                    backgroundColor: semanticColors.buttonBackgroundHovered,
                    borderColor: 'transparent'
                },
                rootFocused: {
                    color: semanticColors.buttonText,
                    backgroundColor: semanticColors.buttonBackground,
                    borderColor: 'transparent'
                },
                rootPressed: {
                    color: semanticColors.buttonText,
                    backgroundColor: semanticColors.buttonBackgroundPressed,
                    borderColor: 'transparent'
                },
                icon: {
                    fontSize: 20
                }
            },
            indicator: {
                root: [
                    'ba-Carousel-indicator',
                    {
                        color: palette.neutralPrimary,
                        selectors: {
                            '&.is-active': {
                                color: palette.themePrimary
                            }
                        }
                    }
                ],
                icon: {
                    fontSize: 10
                }
            },
            toggle: {
                root: [
                    'ba-Carousel-toggle',
                    {
                        color: palette.themePrimary
                    }
                ],
                rootHovered: {
                    color: palette.themeDark,
                    backgroundColor: semanticColors.buttonBackgroundHovered
                },
                rootPressed: {
                    color: palette.themeDarker,
                    backgroundColor: semanticColors.buttonBackgroundPressed
                },
                rootChecked: {
                    color: palette.themePrimary,
                    backgroundColor: 'transparent'
                },
                rootCheckedHovered: {
                    color: palette.themeDark,
                    backgroundColor: semanticColors.buttonBackgroundHovered
                },
                rootCheckedPressed: {
                    color: palette.themeDarker,
                    backgroundColor: semanticColors.buttonBackgroundPressed
                }
            }
        }
    };
};
//# sourceMappingURL=Carousel.styles.js.map