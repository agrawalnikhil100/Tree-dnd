/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
import { __extends } from "tslib";
import { ComponentPage, ExampleCard, PropertiesTableSet } from '@fluentui/react-docsite-components';
import * as React from 'react';
import { TreeViewBasicUncontrolledExample } from './examples/TreeView.BasicUncontrolled.Example';
import { TreeViewCustomItemExample } from './examples/TreeView.CustomItem.Example';
import { TreeViewFileTreeExample } from './examples/TreeView.FileTree.Example';
import { TreeViewCustomStylesExample } from './examples/TreeView.CustomStyles.Example';
import TreeViewBasicUncontrolledExampleCode from '!!raw-loader!../../../src/components/TreeView/examples/TreeView.BasicUncontrolled.Example.tsx';
import TreeViewCustomItemExampleCode from '!!raw-loader!../../../src/components/TreeView/examples/TreeView.CustomItem.Example.tsx';
import TreeViewFileTreeExampleCode from '!!raw-loader!../../../src/components/TreeView/examples/TreeView.FileTree.Example.tsx';
import TreeViewCustomStylesExampleCode from '!!raw-loader!../../../src/components/TreeView/examples/TreeView.CustomStyles.Example.tsx';
import TreeViewPropertiesTableSet from '!!raw-loader!../../../src/components/TreeView/TreeView.types.ts';
var TreeViewPage = /** @class */ (function (_super) {
    __extends(TreeViewPage, _super);
    function TreeViewPage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TreeViewPage.prototype.render = function () {
        return (React.createElement(ComponentPage, { styles: { navigation: { display: 'none' } }, title: 'TreeView', componentName: "TreeView", exampleCards: React.createElement("div", null,
                React.createElement(ExampleCard, { title: "Basic Uncontrolled TreeView", code: TreeViewBasicUncontrolledExampleCode },
                    React.createElement(TreeViewBasicUncontrolledExample, null)),
                React.createElement(ExampleCard, { title: "Custom Item TreeView", code: TreeViewCustomItemExampleCode },
                    React.createElement(TreeViewCustomItemExample, null)),
                React.createElement(ExampleCard, { title: "VSCode-like File Tree", code: TreeViewFileTreeExampleCode },
                    React.createElement(TreeViewFileTreeExample, null)),
                React.createElement(ExampleCard, { title: "Different background color example for use in a non-menu/other application", code: TreeViewCustomStylesExampleCode },
                    React.createElement(TreeViewCustomStylesExample, null))), propertiesTables: React.createElement(PropertiesTableSet, { sources: [TreeViewPropertiesTableSet] }), overview: React.createElement("div", null,
                React.createElement("p", null,
                    "A wrapper on top of the Tree control which allows the \"items\" prop to be hierarchical, which can be more convenient in many cases.",
                    React.createElement("br", null),
                    React.createElement("br", null),
                    "Another advantage is that certain properties for the tree items (namely: level, setSize, indexInParent, and isFolder) will get automatically provided by the TreeView so you don't need to worry about them.",
                    React.createElement("br", null),
                    React.createElement("br", null),
                    "See ",
                    React.createElement("a", { href: "https://businessappfabric.azurewebsites.net/#component=id__25" }, "BAF Tree"),
                    ".")), isHeaderVisible: this.props.isHeaderVisible }));
    };
    return TreeViewPage;
}(React.Component));
export { TreeViewPage };
//# sourceMappingURL=TreeViewPage.js.map