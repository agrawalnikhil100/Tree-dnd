/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
import { ITreeItem, ITreeProps } from '../Tree';
export { ITreeStyles } from '../Tree';
export declare type ITreeViewItem = {
    children?: ITreeViewItem[];
} & Pick<ITreeItem, Exclude<keyof ITreeItem, 'level' | 'setSize' | 'indexInParent' | 'isFolder'>>;
export declare type ITreePropsWithoutItems<T extends ITreeItem> = Pick<ITreeProps<T>, Exclude<keyof ITreeProps<T>, 'items'>>;
/**
 * The props of the TreeView component.
 */
export interface ITreeViewProps<T extends ITreeViewItem> extends ITreePropsWithoutItems<ITreeItem> {
    items: T[];
}
