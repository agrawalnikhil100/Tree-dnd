/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
import { concatStyleSets } from '@fluentui/react/lib/Styling';
import { memoizeFunction } from '@fluentui/react/lib/Utilities';
import { SidebarStylingConstants } from './Sidebar.types';
export var sidebarFonts = {
    segoeUiSemibold: 'wf_segoe-ui_semibold, "Segoe UI Semibold", "Segoe WP Semibold", "Segoe UI", "Segoe WP", Tahoma, Arial, sans-serif',
    segoeUiSemilight: 'wf_segoe-ui_semilight, "Segoe UI Light", "Segoe WP Light", "Segoe UI", "Segoe WP",Tahoma, Arial, sans-serif',
    segoeUi: 'wf_segoe-ui_normal, "Segoe UI", "Segoe WP", Tahoma, Arial, sans-serif'
};
export var getSidebarColors = function (theme) { return ({
    background: theme.palette.neutralLighter,
    backgroundHovered: theme.palette.neutralQuaternaryAlt,
    backgroundChecked: theme.palette.white,
    backgroundPressed: theme.palette.neutralQuaternary,
    textColor: theme.palette.neutralPrimary
}); };
export var getSidebarStyles = memoizeFunction(function (theme, customStyles) {
    var currentSidebarColors = getSidebarColors(theme);
    var sidebarStyles = {
        root: {
            height: '100%',
            backgroundColor: currentSidebarColors.background,
            width: SidebarStylingConstants.sidebarWidth,
            position: 'relative',
            borderRight: "solid 1px " + currentSidebarColors.backgroundPressed
        },
        rootCollapsed: {
            width: SidebarStylingConstants.sidebarCollapsedWidth,
            backgroundColor: currentSidebarColors.background,
            height: '100%',
            position: 'relative'
        },
        content: {
            height: 'auto',
            width: '100%',
            backgroundColor: currentSidebarColors.background,
            overflowX: 'hidden'
        },
        contentCollapsed: {
            backgroundColor: currentSidebarColors.background,
            overflow: 'hidden'
        },
        footer: {
            bottom: '0',
            position: 'absolute',
            width: '100%'
        }
    };
    return concatStyleSets(sidebarStyles, customStyles);
});
export var getButtonColoredStyles = memoizeFunction(function (theme, customStyles) {
    var currentSidebarColors = getSidebarColors(theme);
    var buttonStyles = {
        root: {
            display: 'flex',
            borderColor: 'transparent',
            backgroundColor: currentSidebarColors.background
        },
        rootExpanded: {
            backgroundColor: currentSidebarColors.background
        },
        rootExpandedHovered: {
            backgroundColor: currentSidebarColors.backgroundHovered
        },
        rootDisabled: {
            backgroundColor: currentSidebarColors.background
        },
        rootHovered: {
            backgroundColor: currentSidebarColors.backgroundHovered
        },
        rootPressed: {
            backgroundColor: currentSidebarColors.backgroundPressed
        },
        rootChecked: {
            backgroundColor: currentSidebarColors.backgroundChecked
        },
        rootCheckedHovered: {
            backgroundColor: currentSidebarColors.backgroundChecked
        },
        rootCheckedPressed: {
            backgroundColor: currentSidebarColors.backgroundChecked
        },
        flexContainer: {
            width: '100%'
        },
        icon: {
            fill: currentSidebarColors.textColor,
            color: currentSidebarColors.textColor
        },
        iconDisabled: {
            fill: theme.semanticColors.buttonTextDisabled,
            color: theme.semanticColors.buttonTextDisabled
        },
        iconExpanded: {
            color: currentSidebarColors.textColor,
            fill: currentSidebarColors.textColor
        },
        labelDisabled: {
            color: theme.semanticColors.buttonTextDisabled
        },
        label: {
            color: currentSidebarColors.textColor
        },
        menuIcon: {
            color: currentSidebarColors.textColor,
            fontSize: '10px'
        },
        menuIconDisabled: {
            color: theme.semanticColors.buttonTextDisabled
        }
    };
    return concatStyleSets(buttonStyles, customStyles);
});
export var getCollapsedButtonStyles = memoizeFunction(function (theme) {
    var currentSidebarColors = getSidebarColors(theme);
    return {
        rootCheckedHovered: {
            backgroundColor: currentSidebarColors.backgroundChecked,
            selectors: {
                '&.is-expanded:hover': {
                    backgroundColor: currentSidebarColors.backgroundHovered
                }
            }
        },
        flexContainer: {
            selectors: {
                '.is-expanded > &:before': {
                    content: 'none'
                }
            }
        }
    };
});
//# sourceMappingURL=Sidebar.styles.js.map