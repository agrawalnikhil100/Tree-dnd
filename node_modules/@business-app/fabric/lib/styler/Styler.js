/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
import { __assign, __extends } from "tslib";
import * as React from 'react';
import { createTheme } from '@fluentui/react/lib/Styling';
import { Customizer, merge } from '@fluentui/react/lib/Utilities';
import * as Themes from '../utilities/themes';
import { BusinessAppStyles } from './BusinessAppStyles';
import { icons } from './Icons';
export { BusinessAppStyles } from './BusinessAppStyles';
export { FabricDarkStyles } from './FabricDarkStyles';
var Styler = /** @class */ (function (_super) {
    __extends(Styler, _super);
    function Styler(props) {
        var _this = _super.call(this, props) || this;
        _this.render = function () {
            var _a = _this.props, children = _a.children, theme = _a.theme, themeOverrides = _a.themeOverrides, scopedSettings = _a.scopedSettings;
            var mergedThemeOptions = merge(theme, themeOverrides);
            var mergedScopedSettings = merge(BusinessAppStyles, scopedSettings);
            var customizations = {
                settings: { theme: createTheme(mergedThemeOptions) },
                scopedSettings: mergedScopedSettings
            };
            return React.createElement(Customizer, __assign({}, customizations), children);
        };
        var _a = _this.props, iconSubset = _a.iconSubset, iconOptions = _a.iconOptions;
        icons(iconSubset, iconOptions);
        return _this;
    }
    Styler.defaultProps = {
        theme: Themes.DefaultTheme,
        themeOverrides: {}
    };
    return Styler;
}(React.Component));
export { Styler };
//# sourceMappingURL=Styler.js.map