"use strict";
/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.getStyles = void 0;
var Styling_1 = require("@fluentui/react/lib/Styling");
var getStyles = function (props) {
    var _a, _b, _c;
    var palette = props.theme.palette;
    var smallScreenSelector = '@media (max-width: 767px)';
    var smallOnlySelector = Styling_1.getScreenSelector(0, Styling_1.ScreenWidthMaxSmall);
    return {
        root: [
            'ba-wizard',
            props.className,
            {
                display: 'flex',
                flex: '1 1 auto',
                flexDirection: 'row',
                overflow: 'hidden',
                background: palette.white,
                selectors: (_a = {},
                    _a[smallScreenSelector] = {
                        flexDirection: 'column'
                    },
                    _a)
            }
        ],
        bodyWrapper: {
            display: 'flex',
            flex: '1 1 auto',
            flexDirection: 'column',
            overflow: 'hidden'
        },
        header: {
            position: 'relative',
            display: 'flex',
            flex: '0 0 40px',
            justifyContent: 'space-between',
            alignItems: 'center',
            background: palette.white,
            zIndex: 1,
            selectors: (_b = {
                    '::after': {
                        content: '""',
                        position: 'absolute',
                        top: '100%',
                        right: 0,
                        left: 0,
                        borderBottom: "1px solid " + palette.neutralLight
                    },
                    '.ms-Button-textContainer': {
                        whiteSpace: 'nowrap'
                    }
                },
                _b[smallScreenSelector] = {
                    background: palette.neutralLighterAlt,
                    selectors: {
                        '.ms-Button-textContainer': {
                            display: 'none'
                        }
                    }
                },
                _b)
        },
        headerItems: {
            display: 'flex',
            alignItems: 'center',
            flex: '1 1 auto'
        },
        headerFarItems: {
            display: 'flex',
            alignItems: 'center',
            overflow: 'hidden',
            selectors: {
                '> .ms-TooltipHost': {
                    whiteSpace: 'noWrap',
                    overflow: 'hidden',
                    textOverflow: 'ellipsis'
                }
            }
        },
        headerFarItem: {
            paddingLeft: '12px',
            selectors: {
                ':not(:last-child)': {
                    borderRight: "1px solid " + palette.neutralTertiaryAlt,
                    paddingRight: '12px'
                },
                '& .ms-Button-icon': {
                    marginLeft: 0
                }
            }
        },
        section: {
            display: 'flex',
            flex: '1 1 auto',
            overflowY: 'hidden'
        },
        stepContainer: {
            flex: '1 1 auto',
            display: 'flex',
            flexDirection: 'column',
            position: 'relative',
            overflowY: 'hidden'
        },
        stepBody: {
            display: 'flex',
            flexDirection: 'column',
            flex: '1 1 auto',
            overflowY: 'hidden',
            selectors: (_c = {},
                _c[smallOnlySelector] = {
                    flex: '1 0 25px'
                },
                _c)
        }
    };
};
exports.getStyles = getStyles;
//# sourceMappingURL=Wizard.styles.js.map