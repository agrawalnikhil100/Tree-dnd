"use strict";
/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.WizardTipsAndHelpBase = void 0;
var tslib_1 = require("tslib");
var Button_1 = require("@fluentui/react/lib/Button");
var Icon_1 = require("@fluentui/react/lib/Icon");
var Utilities_1 = require("@fluentui/react/lib/Utilities");
var Utilities_2 = require("@fluentui/react/lib/Utilities");
var React = require("react");
var getClassNames = Utilities_2.classNamesFunction();
var WizardTipsAndHelpBase = /** @class */ (function (_super) {
    tslib_1.__extends(WizardTipsAndHelpBase, _super);
    function WizardTipsAndHelpBase() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            isWizardTipsAndHelpVisibleOnSmallScreens: false
        };
        _this.onShowClicked = function () {
            _this.setState({
                isWizardTipsAndHelpVisibleOnSmallScreens: true
            });
        };
        _this.onCloseClicked = function () {
            _this.setState({
                isWizardTipsAndHelpVisibleOnSmallScreens: false
            });
        };
        return _this;
    }
    WizardTipsAndHelpBase.prototype.render = function () {
        var _a = this.props, children = _a.children, title = _a.title, closeButtonText = _a.closeButtonText, theme = _a.theme, styles = _a.styles, className = _a.className;
        var classNames = getClassNames(styles, {
            theme: theme,
            className: className
        });
        return (React.createElement(React.Fragment, null,
            React.createElement(Button_1.IconButton, { iconProps: { iconName: 'Help' }, className: classNames.show, onClick: this.onShowClicked, ariaLabel: title, title: title }),
            React.createElement("aside", { className: Utilities_1.css(classNames.root, !this.state.isWizardTipsAndHelpVisibleOnSmallScreens && classNames.rootHidden) },
                React.createElement("header", { className: classNames.header },
                    React.createElement(Icon_1.Icon, { iconName: "Help", className: classNames.icon }),
                    React.createElement("h4", { className: classNames.title }, title),
                    React.createElement(Button_1.IconButton, { iconProps: { iconName: 'Cancel' }, className: classNames.close, onClick: this.onCloseClicked, ariaLabel: closeButtonText, title: closeButtonText })),
                children)));
    };
    return WizardTipsAndHelpBase;
}(React.Component));
exports.WizardTipsAndHelpBase = WizardTipsAndHelpBase;
//# sourceMappingURL=WizardTipsAndHelp.base.js.map