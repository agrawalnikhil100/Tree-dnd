"use strict";
/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.FilterableComboBoxDependentExample = void 0;
var tslib_1 = require("tslib");
var Label_1 = require("@fluentui/react/lib/Label");
var SelectableOption_1 = require("@fluentui/react/lib/SelectableOption");
var Stack_1 = require("@fluentui/react/lib/Stack");
var React = require("react");
var FilterableComboBox_1 = require("../FilterableComboBox");
var colors = ['Red', 'Green', 'Blue', 'Orange'].map(function (name) { return ({
    key: name.toLowerCase(),
    text: name.indexOf('_') === 0 ? name.substr(1) : name,
    itemType: name.indexOf('_') === 0
        ? SelectableOption_1.SelectableOptionMenuItemType.Header
        : name.indexOf('&') === 0
            ? SelectableOption_1.SelectableOptionMenuItemType.Divider
            : SelectableOption_1.SelectableOptionMenuItemType.Normal
}); });
var foods = [
    'Tacos',
    'Salad',
    'Spaghetti',
    'Ice cream',
    'Pizza',
    'Soup'
].map(function (name) { return ({
    key: name.toLowerCase(),
    text: name.indexOf('_') === 0 ? name.substr(1) : name,
    itemType: name.indexOf('_') === 0
        ? SelectableOption_1.SelectableOptionMenuItemType.Header
        : name.indexOf('&') === 0
            ? SelectableOption_1.SelectableOptionMenuItemType.Divider
            : SelectableOption_1.SelectableOptionMenuItemType.Normal
}); });
var category = ['Foods', 'Colors'].map(function (name) { return ({
    key: name.toLowerCase(),
    text: name.indexOf('_') === 0 ? name.substr(1) : name,
    itemType: name.indexOf('_') === 0
        ? SelectableOption_1.SelectableOptionMenuItemType.Header
        : name.indexOf('&') === 0
            ? SelectableOption_1.SelectableOptionMenuItemType.Divider
            : SelectableOption_1.SelectableOptionMenuItemType.Normal
}); });
var FilterableComboBoxDependentExample = /** @class */ (function (_super) {
    tslib_1.__extends(FilterableComboBoxDependentExample, _super);
    function FilterableComboBoxDependentExample() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            secondOptions: []
        };
        return _this;
    }
    FilterableComboBoxDependentExample.prototype.render = function () {
        var _this = this;
        return (React.createElement(Stack_1.Stack, { maxWidth: 400, gap: 16 },
            React.createElement(FilterableComboBox_1.FilterableComboBox, { label: 'Choose a category from the options', options: category, noResultsMessage: function (query) { return (React.createElement(Label_1.Label, { styles: { root: { padding: '8px 16px' } } }, "No results found matching \"" + query + "\".")); }, calloutProps: { calloutMaxHeight: 400 }, useComboBoxAsMenuWidth: true, onChange: function (evt, option) {
                    return option &&
                        _this.setState({
                            secondOptions: option.key === 'foods' ? foods : colors
                        });
                } }),
            React.createElement(FilterableComboBox_1.FilterableComboBox, { label: 'Choose an option based on the above category', options: this.state.secondOptions, noResultsMessage: function (query) { return (React.createElement(Label_1.Label, { styles: { root: { padding: '8px 16px' } } }, "No results found matching \"" + query + "\".")); }, calloutProps: { calloutMaxHeight: 400 }, useComboBoxAsMenuWidth: true, disabled: this.state.secondOptions.length < 1 })));
    };
    return FilterableComboBoxDependentExample;
}(React.Component));
exports.FilterableComboBoxDependentExample = FilterableComboBoxDependentExample;
//# sourceMappingURL=FilterableComboBox.Dependent.Example.js.map