"use strict";
/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.FilterableComboBoxPage = void 0;
var tslib_1 = require("tslib");
var react_docsite_components_1 = require("@fluentui/react-docsite-components");
var React = require("react");
var FilterableComboBox_Dependent_Example_1 = require("./examples/FilterableComboBox.Dependent.Example");
var FilterableComboBox_Example_1 = require("./examples/FilterableComboBox.Example");
var FilterableComboBox_Grouped_Example_1 = require("./examples/FilterableComboBox.Grouped.Example");
var FilterableComboBox_Dependent_Example_tsx_1 = require("!!raw-loader!../../../src/components/FilterableComboBox/examples/FilterableComboBox.Dependent.Example.tsx");
var FilterableComboBox_Example_tsx_1 = require("!!raw-loader!../../../src/components/FilterableComboBox/examples/FilterableComboBox.Example.tsx");
var FilterableComboBox_Grouped_Example_tsx_1 = require("!!raw-loader!../../../src/components/FilterableComboBox/examples/FilterableComboBox.Grouped.Example.tsx");
var FilterableComboBox_types_ts_1 = require("!!raw-loader!../../../src/components/FilterableComboBox/FilterableComboBox.types.ts");
var FilterableComboBoxFreeForm_Example_tsx_1 = require("!!raw-loader!../../../src/components/FilterableComboBox/examples/FilterableComboBoxFreeForm.Example.tsx");
var FilterableComboBoxFreeForm_Example_1 = require("./examples/FilterableComboBoxFreeForm.Example");
var FilterableComboBoxPage = /** @class */ (function (_super) {
    tslib_1.__extends(FilterableComboBoxPage, _super);
    function FilterableComboBoxPage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FilterableComboBoxPage.prototype.render = function () {
        return (React.createElement(react_docsite_components_1.ComponentPage, { styles: { navigation: { display: 'none' } }, title: 'Filterable ComboBox', componentName: "FilterableComboBox", exampleCards: React.createElement("div", null,
                React.createElement(react_docsite_components_1.ExampleCard, { title: "Basic example", code: FilterableComboBox_Example_tsx_1.default },
                    React.createElement(FilterableComboBox_Example_1.FilterableComboBoxExample, null)),
                React.createElement(react_docsite_components_1.ExampleCard, { title: "Basic example with free form", code: FilterableComboBoxFreeForm_Example_tsx_1.default },
                    React.createElement(FilterableComboBoxFreeForm_Example_1.FilterableComboBoxFreeFormExample, null)),
                React.createElement(react_docsite_components_1.ExampleCard, { title: "Grouped list example", code: FilterableComboBox_Grouped_Example_tsx_1.default },
                    React.createElement(FilterableComboBox_Grouped_Example_1.FilterableComboBoxGroupedExample, null)),
                React.createElement(react_docsite_components_1.ExampleCard, { title: "Dependent combo box example", code: FilterableComboBox_Dependent_Example_tsx_1.default },
                    React.createElement(FilterableComboBox_Dependent_Example_1.FilterableComboBoxDependentExample, null))), propertiesTables: React.createElement(react_docsite_components_1.PropertiesTableSet, { sources: [FilterableComboBox_types_ts_1.default] }), overview: React.createElement("div", null,
                React.createElement("p", null, "The Filterable ComboBox is a (higher-order) component that provides default behavior around the Office Fabric ComboBox control."),
                React.createElement("p", null, "It replaces the default auto-complete behavior of the ComboBox's freeform input with the ability to instead filter on the options within the ComboBox, allowing for partial, mid-string matches.")), isHeaderVisible: this.props.isHeaderVisible }));
    };
    return FilterableComboBoxPage;
}(React.Component));
exports.FilterableComboBoxPage = FilterableComboBoxPage;
//# sourceMappingURL=FilterableComboBoxPage.js.map