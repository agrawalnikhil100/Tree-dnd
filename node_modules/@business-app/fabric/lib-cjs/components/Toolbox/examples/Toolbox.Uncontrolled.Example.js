"use strict";
/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ToolboxUncontrolledExample = void 0;
var tslib_1 = require("tslib");
var Button_1 = require("@fluentui/react/lib/Button");
var ChoiceGroup_1 = require("@fluentui/react/lib/ChoiceGroup");
var Styling_1 = require("@fluentui/react/lib/Styling");
var React = require("react");
var Toolbox_1 = require("../Toolbox");
var ToolboxItem_1 = require("../ToolboxItem");
var ToolboxUncontrolledExample = /** @class */ (function (_super) {
    tslib_1.__extends(ToolboxUncontrolledExample, _super);
    function ToolboxUncontrolledExample(props) {
        var _this = _super.call(this, props) || this;
        _this._onSettingChangedCallback = function (event, option) {
            _this.setState({ userChosenSetting: option.key });
        };
        _this.state = {
            userChosenSetting: ''
        };
        return _this;
    }
    ToolboxUncontrolledExample.prototype.render = function () {
        var toolboxItemRootStyle = Styling_1.mergeStyles({
            width: '100%',
            padding: 16
        });
        var buttonStyle = Styling_1.mergeStyles({
            marginRight: 16
        });
        return (React.createElement(React.Fragment, null,
            React.createElement(Toolbox_1.Toolbox, { strings: {
                    expandTooltip: 'Expand',
                    collapseTooltip: 'Collapse',
                    closeTooltip: 'Close'
                }, styles: {
                    root: {
                        height: 320
                    }
                } },
                React.createElement(ToolboxItem_1.ToolboxItem, { headerText: 'Print', itemKey: 'item1', itemIcon: 'Print' },
                    React.createElement("div", { className: toolboxItemRootStyle },
                        React.createElement(Button_1.PrimaryButton, { className: buttonStyle }, 'Print something'))),
                React.createElement(ToolboxItem_1.ToolboxItem, { headerText: 'Eraser', itemKey: 'item2', itemIcon: 'EraseTool' },
                    React.createElement("div", { className: toolboxItemRootStyle },
                        React.createElement(Button_1.PrimaryButton, { className: buttonStyle }, 'Erase all bugs'))),
                React.createElement(ToolboxItem_1.ToolboxItem, { headerText: 'Settings', itemKey: 'item3', itemIcon: 'Settings' },
                    React.createElement("div", { className: toolboxItemRootStyle },
                        React.createElement(ChoiceGroup_1.ChoiceGroup, { selectedKey: this.state.userChosenSetting, onChange: this._onSettingChangedCallback, label: 'Choose your setting', options: [
                                {
                                    key: 'item1',
                                    text: 'Setting 1'
                                },
                                {
                                    key: 'item2',
                                    text: 'Setting 2'
                                }
                            ] }))))));
    };
    return ToolboxUncontrolledExample;
}(React.Component));
exports.ToolboxUncontrolledExample = ToolboxUncontrolledExample;
//# sourceMappingURL=Toolbox.Uncontrolled.Example.js.map