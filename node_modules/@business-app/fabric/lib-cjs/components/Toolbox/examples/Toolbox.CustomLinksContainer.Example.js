"use strict";
/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ToolboxCustomLinksContainerExample = void 0;
var tslib_1 = require("tslib");
var Button_1 = require("@fluentui/react/lib/Button");
var FocusZone_1 = require("@fluentui/react/lib/FocusZone");
var Styling_1 = require("@fluentui/react/lib/Styling");
var React = require("react");
var Toolbox_1 = require("../Toolbox");
var ToolboxItem_1 = require("../ToolboxItem");
var ToolboxCustomLinksContainerExample = /** @class */ (function (_super) {
    tslib_1.__extends(ToolboxCustomLinksContainerExample, _super);
    function ToolboxCustomLinksContainerExample(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {
            userChosenSetting: ''
        };
        return _this;
    }
    ToolboxCustomLinksContainerExample.prototype.render = function () {
        var toolboxItemRootStyle = Styling_1.mergeStyles({
            width: '100%',
            padding: 16
        });
        var buttonStyle = Styling_1.mergeStyles({
            marginRight: 16
        });
        return (React.createElement(React.Fragment, null,
            React.createElement(Toolbox_1.Toolbox, { strings: {
                    expandTooltip: 'Expand',
                    collapseTooltip: 'Collapse',
                    closeTooltip: 'Close'
                }, styles: {
                    root: {
                        height: 320
                    }
                }, toolboxLinksContainerAs: CustomToolboxLinksContainer },
                React.createElement(ToolboxItem_1.ToolboxItem, { headerText: 'Print', itemKey: 'item1', itemIcon: 'Print' },
                    React.createElement("div", { className: toolboxItemRootStyle },
                        React.createElement(Button_1.PrimaryButton, { className: buttonStyle }, 'Print something'))),
                React.createElement(ToolboxItem_1.ToolboxItem, { headerText: 'Eraser', itemKey: 'item2', itemIcon: 'EraseTool' },
                    React.createElement("div", { className: toolboxItemRootStyle },
                        React.createElement(Button_1.PrimaryButton, { className: buttonStyle }, 'Erase all bugs'))),
                React.createElement(ToolboxItem_1.ToolboxItem, { headerText: 'Print', itemKey: 'item3', itemIcon: 'Print' },
                    React.createElement("div", { className: toolboxItemRootStyle },
                        React.createElement(Button_1.PrimaryButton, { className: buttonStyle }, 'Print something'))),
                React.createElement(ToolboxItem_1.ToolboxItem, { headerText: 'Eraser', itemKey: 'item4', itemIcon: 'EraseTool' },
                    React.createElement("div", { className: toolboxItemRootStyle },
                        React.createElement(Button_1.PrimaryButton, { className: buttonStyle }, 'Erase all bugs'))),
                React.createElement(ToolboxItem_1.ToolboxItem, { headerText: 'Print', itemKey: 'item5', itemIcon: 'Print' },
                    React.createElement("div", { className: toolboxItemRootStyle },
                        React.createElement(Button_1.PrimaryButton, { className: buttonStyle }, 'Print something'))),
                React.createElement(ToolboxItem_1.ToolboxItem, { headerText: 'Eraser', itemKey: 'item6', itemIcon: 'EraseTool' },
                    React.createElement("div", { className: toolboxItemRootStyle },
                        React.createElement(Button_1.PrimaryButton, { className: buttonStyle }, 'Erase all bugs'))),
                React.createElement(ToolboxItem_1.ToolboxItem, { headerText: 'Print', itemKey: 'item7', itemIcon: 'Print' },
                    React.createElement("div", { className: toolboxItemRootStyle },
                        React.createElement(Button_1.PrimaryButton, { className: buttonStyle }, 'Print something'))),
                React.createElement(ToolboxItem_1.ToolboxItem, { headerText: 'Eraser', itemKey: 'item8', itemIcon: 'EraseTool' },
                    React.createElement("div", { className: toolboxItemRootStyle },
                        React.createElement(Button_1.PrimaryButton, { className: buttonStyle }, 'Erase all bugs'))))));
    };
    return ToolboxCustomLinksContainerExample;
}(React.Component));
exports.ToolboxCustomLinksContainerExample = ToolboxCustomLinksContainerExample;
var CustomToolboxLinksContainer = function (props) {
    var _a;
    var theme = Styling_1.getTheme();
    var containerStyles = Styling_1.mergeStyles({
        border: "8px " + theme.palette.themePrimary + " solid",
        overflowY: 'scroll'
    });
    var InnerComponent = (_a = props.defaultRender) !== null && _a !== void 0 ? _a : FocusZone_1.FocusZone;
    return (React.createElement("div", { className: containerStyles },
        React.createElement(InnerComponent, tslib_1.__assign({}, props))));
};
//# sourceMappingURL=Toolbox.CustomLinksContainer.Example.js.map