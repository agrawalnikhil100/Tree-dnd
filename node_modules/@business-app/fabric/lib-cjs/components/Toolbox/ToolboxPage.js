"use strict";
/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ToolboxPage = void 0;
var tslib_1 = require("tslib");
var react_docsite_components_1 = require("@fluentui/react-docsite-components");
var React = require("react");
var Toolbox_ConditionallyShowTools_Example_1 = require("./examples/Toolbox.ConditionallyShowTools.Example");
var Toolbox_Controlled_Example_1 = require("./examples/Toolbox.Controlled.Example");
var Toolbox_Uncontrolled_Example_1 = require("./examples/Toolbox.Uncontrolled.Example");
var Toolbox_UncontrolledDefaultOpen_Example_1 = require("./examples/Toolbox.UncontrolledDefaultOpen.Example");
var Toolbox_CustomLinksContainer_Example_1 = require("./examples/Toolbox.CustomLinksContainer.Example");
var Toolbox_ConditionallyShowTools_Example_tsx_1 = require("!!raw-loader!../../../src/components/Toolbox/examples/Toolbox.ConditionallyShowTools.Example.tsx");
var Toolbox_Controlled_Example_tsx_1 = require("!!raw-loader!../../../src/components/Toolbox/examples/Toolbox.Controlled.Example.tsx");
var Toolbox_Uncontrolled_Example_tsx_1 = require("!!raw-loader!../../../src/components/Toolbox/examples/Toolbox.Uncontrolled.Example.tsx");
var Toolbox_UncontrolledDefaultOpen_Example_tsx_1 = require("!!raw-loader!../../../src/components/Toolbox/examples/Toolbox.UncontrolledDefaultOpen.Example.tsx");
var Toolbox_CustomLinksContainer_Example_tsx_1 = require("!!raw-loader!../../../src/components/Toolbox/examples/Toolbox.CustomLinksContainer.Example.tsx");
var Toolbox_types_ts_1 = require("!!raw-loader!../../../src/components/Toolbox/Toolbox.types.ts");
var ToolboxPage = /** @class */ (function (_super) {
    tslib_1.__extends(ToolboxPage, _super);
    function ToolboxPage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ToolboxPage.prototype.render = function () {
        return (React.createElement(react_docsite_components_1.ComponentPage, { styles: { navigation: { display: 'none' } }, title: 'Toolbox', componentName: "Toolbox", exampleCards: React.createElement("div", null,
                React.createElement(react_docsite_components_1.ExampleCard, { title: "Uncontrolled Toolbox example (manages its own selection state)", code: Toolbox_Uncontrolled_Example_tsx_1.default },
                    React.createElement(Toolbox_Uncontrolled_Example_1.ToolboxUncontrolledExample, null)),
                React.createElement(react_docsite_components_1.ExampleCard, { title: "Uncontrolled Toolbox example with drawer open initially", code: Toolbox_UncontrolledDefaultOpen_Example_tsx_1.default },
                    React.createElement(Toolbox_UncontrolledDefaultOpen_Example_1.ToolboxUncontrolledDefaultOpenExample, null)),
                React.createElement(react_docsite_components_1.ExampleCard, { title: "Controlled Toolbox example (parent manages selection)", code: Toolbox_Controlled_Example_tsx_1.default },
                    React.createElement(Toolbox_Controlled_Example_1.ToolboxControlledExample, null)),
                React.createElement(react_docsite_components_1.ExampleCard, { title: "Conditionally shown/hide or enable/disable Toolbox tools", code: Toolbox_ConditionallyShowTools_Example_tsx_1.default },
                    React.createElement(Toolbox_ConditionallyShowTools_Example_1.ToolboxConditionallyShowToolsExample, null)),
                React.createElement(react_docsite_components_1.ExampleCard, { title: "Toolbox with custom links container example", code: Toolbox_CustomLinksContainer_Example_tsx_1.default },
                    React.createElement(Toolbox_CustomLinksContainer_Example_1.ToolboxCustomLinksContainerExample, null))), propertiesTables: React.createElement(react_docsite_components_1.PropertiesTableSet, { sources: [Toolbox_types_ts_1.default] }), overview: React.createElement("div", null,
                React.createElement("p", null,
                    "The Toolbox gives you a sidebar to choose between different panels. The panel (or \"drawer\") can be collapsed to give the user more space to interact with the main work surface. The user can toggle between just seeing icons for the different tools and seeing full names for the different tools alongside the icons.",
                    React.createElement("br", null),
                    React.createElement("br", null),
                    "While this control doesn't use the Fabric Pivot, it is very similar to it conceptually (but rotated 90 degrees and turned into a sidebar). Both controls allow you to click tabs selecting between different content to view.",
                    React.createElement("br", null),
                    React.createElement("br", null),
                    "See ",
                    React.createElement("a", { href: "https://developer.microsoft.com/en-us/fabric#/components/pivot" }, "Fabric Pivot"),
                    ".")), isHeaderVisible: true }));
    };
    return ToolboxPage;
}(React.Component));
exports.ToolboxPage = ToolboxPage;
//# sourceMappingURL=ToolboxPage.js.map