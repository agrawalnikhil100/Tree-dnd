"use strict";
/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var Enzyme = require("enzyme");
require("jest");
var Overlay_1 = require("@fluentui/react/lib/Overlay");
var Spinner_1 = require("@fluentui/react/lib/Spinner");
var React = require("react");
var Page_base_1 = require("./Page.base");
var Page_styles_1 = require("./Page.styles");
describe('Page Header with Env', function () {
    var props = {
        styles: Page_styles_1.getStyles
    };
    it('should render the component without any subitems', function () {
        var wrapper = Enzyme.mount(React.createElement(Page_base_1.PageBase, tslib_1.__assign({}, props)));
        expect(wrapper).toMatchSnapshot();
    });
    it('should render the component with the wrapper class', function () {
        var testProps = tslib_1.__assign(tslib_1.__assign({}, props), { className: 'test-class' });
        var wrapper = Enzyme.shallow(React.createElement(Page_base_1.PageBase, tslib_1.__assign({}, testProps)));
        expect(wrapper.find('.test-class').type()).toBe('section');
    });
    it('should optionally render a header', function () {
        var testProps = tslib_1.__assign(tslib_1.__assign({}, props), { renderHeader: function () { return React.createElement("div", { className: "test-class" }); } });
        var withHeader = Enzyme.shallow(React.createElement(Page_base_1.PageBase, tslib_1.__assign({}, testProps)));
        expect(withHeader.find('.test-class').exists()).toBe(true);
        var withoutHeader = Enzyme.shallow(React.createElement(Page_base_1.PageBase, tslib_1.__assign({}, props)));
        expect(withoutHeader.find('header').exists()).toBe(false);
    });
    it('should optionally render a footer', function () {
        var testProps = tslib_1.__assign(tslib_1.__assign({}, props), { renderFooter: function () { return React.createElement("div", { className: "test-class" }); } });
        var withFooter = Enzyme.shallow(React.createElement(Page_base_1.PageBase, tslib_1.__assign({}, testProps)));
        expect(withFooter.find('footer').exists()).toBe(true);
        expect(withFooter.find('footer').find('.test-class').exists()).toBe(true);
        var withoutFooter = Enzyme.shallow(React.createElement(Page_base_1.PageBase, tslib_1.__assign({}, props)));
        expect(withoutFooter.find('footer').exists()).toBe(false);
    });
    it('should optionally render a loading overlay', function () {
        var testProps = tslib_1.__assign(tslib_1.__assign({}, props), { showOverlay: true, spinnerProps: { size: Spinner_1.SpinnerSize.large } });
        var withFooter = Enzyme.shallow(React.createElement(Page_base_1.PageBase, tslib_1.__assign({}, testProps)));
        expect(withFooter.find(Overlay_1.Overlay).find(Spinner_1.Spinner).length).toBe(1);
    });
    it('should optionally render body contents', function () {
        var testProps = tslib_1.__assign(tslib_1.__assign({}, props), { renderBody: function () { return React.createElement("div", null, "Test"); } });
        var withBody = Enzyme.mount(React.createElement(Page_base_1.PageBase, tslib_1.__assign({}, testProps)));
        expect(withBody).toMatchSnapshot();
    });
});
//# sourceMappingURL=Page.test.js.map