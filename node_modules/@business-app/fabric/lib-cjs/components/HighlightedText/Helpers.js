"use strict";
/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.calculateWordHighlights = void 0;
/**
 * Given a list of words, calculate the start indices and lengths of all occurences of the words.
 * @param str String in which to find indices.
 * @param words Array of words whose indices to calculate.
 * @param ignoreCase Whether to ignore case when searching for words. Defaults to false.
 */
function calculateWordHighlights(str, words, ignoreCase) {
    var regexFlags = ignoreCase ? 'gi' : 'g';
    return flatArray(words.map(function (word) {
        var wordOccurences = [];
        var length = word.length;
        // TODO: switch to String.matchAll once support is wider
        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/matchAll
        var result;
        var regex = new RegExp(word, regexFlags);
        // eslint-disable-next-line no-cond-assign
        while ((result = regex.exec(str))) {
            wordOccurences.push({
                startIndex: result.index,
                length: length
            });
            // manually advance the index to ensure we don't miss overlaps
            regex.lastIndex = result.index + 1;
        }
        return wordOccurences;
    }));
}
exports.calculateWordHighlights = calculateWordHighlights;
function flatArray(nestedArray) {
    return nestedArray.reduce(function (accum, cur) { return accum.concat(cur); }, []);
}
//# sourceMappingURL=Helpers.js.map