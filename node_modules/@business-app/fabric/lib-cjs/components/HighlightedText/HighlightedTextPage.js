"use strict";
/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.HighlightedTextPage = void 0;
var tslib_1 = require("tslib");
var HighlightedText_Basic_Example_tsx_1 = require("!!raw-loader!../../../src/components/HighlightedText/examples/HighlightedText.Basic.Example.tsx");
var HighlightedText_Characters_Example_tsx_1 = require("!!raw-loader!../../../src/components/HighlightedText/examples/HighlightedText.Characters.Example.tsx");
var HighlightedText_Styled_Example_tsx_1 = require("!!raw-loader!../../../src/components/HighlightedText/examples/HighlightedText.Styled.Example.tsx");
var HighlightedText_types_ts_1 = require("!!raw-loader!../../../src/components/HighlightedText/HighlightedText.types.ts");
var react_docsite_components_1 = require("@fluentui/react-docsite-components");
var Link_1 = require("@fluentui/react/lib/Link");
var React = require("react");
var HighlightedText_Basic_Example_1 = require("./examples/HighlightedText.Basic.Example");
var HighlightedText_Characters_Example_1 = require("./examples/HighlightedText.Characters.Example");
var HighlightedText_Styled_Example_1 = require("./examples/HighlightedText.Styled.Example");
var HighlightedTextPage = /** @class */ (function (_super) {
    tslib_1.__extends(HighlightedTextPage, _super);
    function HighlightedTextPage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    HighlightedTextPage.prototype.render = function () {
        return (React.createElement(react_docsite_components_1.ComponentPage, { styles: { navigation: { display: 'none' } }, title: 'HighlightedText', componentName: "HighlightedTextExample", exampleCards: React.createElement("div", null,
                React.createElement(react_docsite_components_1.ExampleCard, { title: "Basic highlighted text", code: HighlightedText_Basic_Example_tsx_1.default },
                    React.createElement(HighlightedText_Basic_Example_1.HighlightedTextBasicExample, null)),
                React.createElement(react_docsite_components_1.ExampleCard, { title: "Styled highlighted text", code: HighlightedText_Styled_Example_tsx_1.default },
                    React.createElement(HighlightedText_Styled_Example_1.HighlightedTextStyledExample, null)),
                React.createElement(react_docsite_components_1.ExampleCard, { title: "Multi-byte characters, RTL, and helpers", code: HighlightedText_Characters_Example_tsx_1.default },
                    React.createElement(HighlightedText_Characters_Example_1.HighlightedTextCharactersExample, null))), propertiesTables: React.createElement(react_docsite_components_1.PropertiesTableSet, { sources: [HighlightedText_types_ts_1.default] }), overview: React.createElement("div", null,
                React.createElement("p", null, "HighlightedText renders a string with highlights at the specified indices and lengths. Highlights are permitted to overlap.")), accessibility: React.createElement("div", null,
                React.createElement("p", null, "This component is accessible in Microsoft Edge, Chrome, and Firefox with Narrator. Localized labels for the start and end of a highlight will be attached to each highlight. It is not accessible in IE11 due to pseudo-elements not being exposed to the accessibility tree."),
                React.createElement("p", null,
                    "See recommended approach on MDN\u00A0",
                    React.createElement(Link_1.Link, { href: 'https://developer.mozilla.org/en-US/docs/Web/HTML/Element/mark#Accessibility_concerns' }, "here"),
                    ".")), isHeaderVisible: this.props.isHeaderVisible }));
    };
    return HighlightedTextPage;
}(React.Component));
exports.HighlightedTextPage = HighlightedTextPage;
//# sourceMappingURL=HighlightedTextPage.js.map