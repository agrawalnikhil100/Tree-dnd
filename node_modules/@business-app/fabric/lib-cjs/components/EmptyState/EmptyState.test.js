"use strict";
/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var Enzyme = require("enzyme");
require("jest");
var Styling_1 = require("@fluentui/react/lib/Styling");
var React = require("react");
var EmptyState_base_1 = require("./EmptyState.base");
var EmptyState_styles_1 = require("./EmptyState.styles");
var doNothing = { onClick: function () { return undefined; } };
describe('EmptyState', function () {
    var wrapper;
    var props;
    beforeEach(function () {
        props = {
            styles: EmptyState_styles_1.styles,
            theme: Styling_1.getTheme()
        };
    });
    afterEach(function () { return wrapper.unmount(); });
    it('should not unexpectedly change', function () {
        wrapper = Enzyme.mount(React.createElement(EmptyState_base_1.EmptyStateBase, tslib_1.__assign({}, props, { icon: 'Filter', primaryMessage: 'A learn more', secondaryMessage: ["There's no stuff here", 'second paragraph'], callToActionText: 'Make something here', callToActionProps: doNothing, learnMoreLabel: 'Learn more', learnMoreProps: doNothing })));
        expect(wrapper).toMatchSnapshot();
    });
    it('should place secondary messages optionally', function () {
        wrapper = Enzyme.mount(React.createElement(EmptyState_base_1.EmptyStateBase, tslib_1.__assign({}, props, { icon: 'Filter', primaryMessage: 'test', secondaryMessage: ['secondary', 'secondary'] })));
        expect(wrapper.find('.ba-EmptyState-PrimaryMessage').length).toBe(1);
        expect(wrapper.find('.ba-EmptyState-SecondaryMessage').length).toBe(2);
        expect(wrapper.find('.ms-Button').length).toBe(0);
    });
    it('should place call to actions optionally', function () {
        wrapper = Enzyme.mount(React.createElement(EmptyState_base_1.EmptyStateBase, tslib_1.__assign({}, props, { icon: 'Filter', primaryMessage: 'test', callToActionProps: { text: 'test', onClick: function () { return undefined; } }, callToActionText: 'test' })));
        expect(wrapper.find('.ba-EmptyState-PrimaryMessage').length).toBe(1);
        expect(wrapper.find('.ba-EmptyState-SecondaryMessage').length).toBe(0);
        expect(wrapper.find('.ms-Button').length).toBe(1);
    });
    it('should place learn more optionally', function () {
        wrapper = Enzyme.mount(React.createElement(EmptyState_base_1.EmptyStateBase, tslib_1.__assign({}, props, { icon: 'Filter', primaryMessage: 'test', secondaryMessage: ['secondary'], learnMoreProps: { onClick: function () { return undefined; } }, learnMoreLabel: 'test' })));
        expect(wrapper.find('.ba-EmptyState-PrimaryMessage').length).toBe(1);
        expect(wrapper.find('.ba-EmptyState-SecondaryMessage').length).toBe(1);
        expect(wrapper.find('LinkBase').length).toBe(1);
    });
    it('should place only the primaryMessage with no extra properties', function () {
        wrapper = Enzyme.mount(React.createElement(EmptyState_base_1.EmptyStateBase, tslib_1.__assign({}, props, { icon: 'Filter', primaryMessage: 'test' })));
        expect(wrapper.find('.ba-EmptyState-PrimaryMessage').length).toBe(1);
        expect(wrapper.find('.ba-EmptyState-SecondaryMessage').length).toBe(0);
        expect(wrapper.find('button').length).toBe(0);
    });
});
//# sourceMappingURL=EmptyState.test.js.map