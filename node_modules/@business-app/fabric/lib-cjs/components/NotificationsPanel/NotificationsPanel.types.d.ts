/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
import { IStyle } from '@fluentui/react/lib/Styling';
import { IStyleFunctionOrObject } from '@fluentui/react/lib/Utilities';
import { IPanelProps } from '../Panel';
import { INotificationCardProps } from './NotificationCard/NotificationCard.types';
export declare enum NotificationsPanelState {
    Loaded = 0,
    Loading = 1,
    Error = 2,
    Empty = 3
}
export interface INotificationsPanelProps extends IPanelProps {
    /**
     * Message to announce to screen readers when the pane is loading.
     */
    ariaLoadingMessage?: string;
    /**
     * List of notifications to show in the panel.
     */
    notifications: INotificationCardProps[];
    /**
     * Message to show when there are no notifications provided (or if the user dismissed all the notifications).
     */
    emptyStateMessage: string;
    /**
     * Text for the dismiss all link on the header of the panel.
     */
    dismissAllText?: string;
    /**
     * Title for the Dismiss all button.
     */
    dismissTooltip?: string;
    /**
     * Controls the state of the panel.
     */
    panelState?: NotificationsPanelState;
    /**
     * Error message.
     */
    errorPrimaryMessage?: string;
    /**
     * Secondary error message.
     */
    errorSecondaryMessage?: string;
    /**
     * Callback that gets executed when the user clicks on the dismiss all link on the header of the panel.
     */
    onDismissAll: () => void;
    /**
     * Callback on mount of component.
     */
    onMount?: () => void;
    /**
     * Call to provide customized styling that will layer on top of the variant rules.
     */
    styles?: IPanelProps['styles'] & IStyleFunctionOrObject<Pick<INotificationsPanelProps, 'theme'>, INotificationsPanelStyles>;
}
export interface INotificationsPanelStyles {
    centeredContent: IStyle;
}
