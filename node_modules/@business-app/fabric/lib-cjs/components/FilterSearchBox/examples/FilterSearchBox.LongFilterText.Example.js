"use strict";
/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.FilterSearchBoxLongFilterTextExample = void 0;
var tslib_1 = require("tslib");
var React = require("react");
var Label_1 = require("@fluentui/react/lib/Label");
var Toggle_1 = require("@fluentui/react/lib/Toggle");
var __1 = require("../");
var filters = [
    {
        key: 'one',
        text: 'Filter 1Filter 1Filter 1Filter 1Filterter 1Filter 1Filter 1Filter 1Filter 1Filter 1Filter 1Filter 1Filter 1Filter 1Filter 1Filter 1Filter 1Filter 1Filter 1Filter 1Filter 1Filter 1Filter 1Filter 1Filter 1'
    },
    { key: 'two', text: 'Filter 2' },
    { key: 'three', text: 'Filter 3' }
];
var FilterSearchBoxLongFilterTextExample = /** @class */ (function (_super) {
    tslib_1.__extends(FilterSearchBoxLongFilterTextExample, _super);
    function FilterSearchBoxLongFilterTextExample() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            searchText: '',
            selectedFilterKey: filters[0].key,
            filterCalloutMatchComponentWidth: false
        };
        _this._onSearchTextChange = function (event, text) {
            _this.setState({ searchText: text });
        };
        _this._onFilterChange = function (key) {
            _this.setState({ selectedFilterKey: key });
        };
        _this._onUseFullWidthChange = function (_, checked) {
            _this.setState({ filterCalloutMatchComponentWidth: checked });
        };
        return _this;
    }
    FilterSearchBoxLongFilterTextExample.prototype.render = function () {
        var _a = this.state, searchText = _a.searchText, selectedFilterKey = _a.selectedFilterKey, filterCalloutMatchComponentWidth = _a.filterCalloutMatchComponentWidth;
        return (React.createElement(React.Fragment, null,
            React.createElement(__1.FilterSearchBox, { strings: {
                    searchBoxPlaceholder: 'Search'
                }, searchText: searchText, onSearchTextChange: this._onSearchTextChange, filters: filters, selectedFilterKey: selectedFilterKey, onFilterChange: this._onFilterChange, filterCalloutMatchComponentWidth: filterCalloutMatchComponentWidth, styles: {
                    root: {
                        marginBottom: 16
                    }
                } }),
            React.createElement(Label_1.Label, null, "Current search text: " + searchText),
            React.createElement(Label_1.Label, null, "Current filter key: " + selectedFilterKey),
            React.createElement(Toggle_1.Toggle, { checked: filterCalloutMatchComponentWidth, onChange: this._onUseFullWidthChange, label: 'Filter callout should match component width' })));
    };
    return FilterSearchBoxLongFilterTextExample;
}(React.Component));
exports.FilterSearchBoxLongFilterTextExample = FilterSearchBoxLongFilterTextExample;
//# sourceMappingURL=FilterSearchBox.LongFilterText.Example.js.map