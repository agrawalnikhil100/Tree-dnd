"use strict";
/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.getStyles = void 0;
var tslib_1 = require("tslib");
var height = 36;
var separatorMargin = 8;
var sharedButtonRootStyles = {
    backgroundColor: 'transparent',
    height: '100%',
    padding: '0 8px',
    borderColor: 'transparent'
};
var getStyles = function (props) {
    var palette = props.theme.palette;
    return {
        root: {
            width: '100%',
            height: height,
            display: 'flex',
            flexDirection: 'row',
            border: "1px solid " + palette.neutralQuaternaryAlt
        },
        active: {
            borderColor: '#333'
        },
        searchBox: {
            flex: '1 1 auto',
            float: 'left',
            border: 'none',
            height: '100%'
        },
        separator: {
            flex: '0 0 1px',
            height: height - separatorMargin * 2,
            marginTop: separatorMargin,
            // margin right -1 will move it so when the filter button is hovered, the separator is covered and not seen.
            marginRight: -1,
            backgroundColor: palette.neutralQuaternaryAlt
        },
        tooltipHost: {
            height: '100%',
            maxWidth: '50%'
        },
        filterButtonRoot: tslib_1.__assign(tslib_1.__assign({}, sharedButtonRootStyles), { minWidth: 0, maxWidth: '50%' }),
        filterButtonRootInTooltipHost: tslib_1.__assign(tslib_1.__assign({}, sharedButtonRootStyles), { width: '100%', maxWidth: '100%' }),
        filterButtonLabel: {
            fontWeight: 400,
            textOverflow: 'ellipsis',
            overflow: 'hidden',
            lineHeight: 'normal'
        },
        filterButtonNoLabel: {
            margin: 0
        },
        filterButtonTextContainer: {
            overflow: 'hidden',
            whiteSpace: 'nowrap'
        }
    };
};
exports.getStyles = getStyles;
//# sourceMappingURL=FilterSearchBox.styles.js.map