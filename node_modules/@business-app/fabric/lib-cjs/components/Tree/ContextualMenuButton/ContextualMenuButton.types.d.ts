/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
import { DirectionalHint, IContextualMenuItem, IContextualMenuProps } from '@fluentui/react/lib/ContextualMenu';
import { IIconProps } from '@fluentui/react/lib/Icon';
import { IBaseProps } from '@fluentui/react/lib/Utilities';
import * as React from 'react';
export interface IContextualMenuButtonProps extends React.HTMLAttributes<HTMLButtonElement>, IBaseProps {
    /**
     * Whether the menu button is disabled.
     */
    disabled: boolean;
    /**
     * An optional directional hint to use for the contextual menu.
     */
    directionalHint?: DirectionalHint;
    /**
     * The items to show in the menu.
     */
    items: IContextualMenuItem[];
    /**
     * Whether or not to show the menu.
     */
    isOpen: boolean;
    /**
     * The callback to call when the menu button is clicked (whether the menu was open on closed).
     */
    onClick: (e: React.MouseEvent<HTMLElement>) => void;
    /**
     * The callback to call when the contextual menu is dismissed.
     */
    onDismiss: () => void;
    /**
     * The aria label for the contextual menu button and for the contextual menu.
     */
    ariaLabel: string;
    /**
     * The iconProps for the Icon inside the contextual menu button.
     */
    iconProps: IIconProps;
    /**
     * The style to apply to the menu button when the menu is open.
     */
    menuOpenStyle: string;
    /**
     * The style to apply to the menu button when the menu is closed.
     */
    menuClosedStyle: string;
    /**
     * The style to apply to the menu button when the button is disabled.
     */
    menuDisabledStyle: string;
    onRenderContextualMenu(menuProps: IContextualMenuProps): JSX.Element;
}
