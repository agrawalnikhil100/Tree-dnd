"use strict";
/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TreePage = void 0;
var tslib_1 = require("tslib");
var react_docsite_components_1 = require("@fluentui/react-docsite-components");
var React = require("react");
var Tree_AlternatingRowColorExample_1 = require("./examples/Tree.AlternatingRowColorExample");
var Tree_BasicUncontrolled_Example_1 = require("./examples/Tree.BasicUncontrolled.Example");
var Tree_Controlled_Example_1 = require("./examples/Tree.Controlled.Example");
var Tree_HeavilyCustomized_Example_1 = require("./examples/Tree.HeavilyCustomized.Example");
var Tree_OverflowAndLayout_Example_1 = require("./examples/Tree.OverflowAndLayout.Example");
var AsyncTree_BasicExample_tsx_1 = require("!!raw-loader!../../../src/components/Tree/examples/AsyncTree.BasicExample.tsx");
var AsyncTree_PaginationExample_tsx_1 = require("!!raw-loader!../../../src/components/Tree/examples/AsyncTree.PaginationExample.tsx");
var ShimmeredTree_BasicExample_tsx_1 = require("!!raw-loader!../../../src/components/Tree/examples/ShimmeredTree.BasicExample.tsx");
var Tree_AlternatingRowColorExample_tsx_1 = require("!!raw-loader!../../../src/components/Tree/examples/Tree.AlternatingRowColorExample.tsx");
var Tree_BasicUncontrolled_Example_tsx_1 = require("!!raw-loader!../../../src/components/Tree/examples/Tree.BasicUncontrolled.Example.tsx");
var Tree_Controlled_Example_tsx_1 = require("!!raw-loader!../../../src/components/Tree/examples/Tree.Controlled.Example.tsx");
var Tree_HeavilyCustomized_Example_tsx_1 = require("!!raw-loader!../../../src/components/Tree/examples/Tree.HeavilyCustomized.Example.tsx");
var Tree_OverflowAndLayout_Example_tsx_1 = require("!!raw-loader!../../../src/components/Tree/examples/Tree.OverflowAndLayout.Example.tsx");
var Tree_types_ts_1 = require("!!raw-loader!../../../src/components/Tree/Tree.types.ts");
var AsyncTree_BasicExample_1 = require("./examples/AsyncTree.BasicExample");
var AsyncTree_PaginationExample_1 = require("./examples/AsyncTree.PaginationExample");
var ShimmeredTree_BasicExample_1 = require("./examples/ShimmeredTree.BasicExample");
var TreePage = /** @class */ (function (_super) {
    tslib_1.__extends(TreePage, _super);
    function TreePage() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            selection: {}
        };
        return _this;
    }
    TreePage.prototype.render = function () {
        return (React.createElement(react_docsite_components_1.ComponentPage, { styles: { navigation: { display: 'none' } }, title: 'Tree', componentName: "TreeExample", exampleCards: React.createElement("div", null,
                React.createElement(react_docsite_components_1.ExampleCard, { title: "Basic Uncontrolled Tree (with no contextual menu options)", code: Tree_BasicUncontrolled_Example_tsx_1.default },
                    React.createElement(Tree_BasicUncontrolled_Example_1.TreeBasicUncontrolledExample, null)),
                React.createElement(react_docsite_components_1.ExampleCard, { title: "Controlled Tree", code: Tree_Controlled_Example_tsx_1.default },
                    React.createElement(Tree_Controlled_Example_1.TreeControlledExample, null)),
                React.createElement(react_docsite_components_1.ExampleCard, { title: "Alternating Row Color Tree", code: Tree_AlternatingRowColorExample_tsx_1.default },
                    React.createElement(Tree_AlternatingRowColorExample_1.TreeAlternatingRowColorExample, null)),
                React.createElement(react_docsite_components_1.ExampleCard, { title: "Heavily Customized Tree", code: Tree_HeavilyCustomized_Example_tsx_1.default },
                    React.createElement(Tree_HeavilyCustomized_Example_1.TreeHeavilyCustomizedExample, null)),
                React.createElement(react_docsite_components_1.ExampleCard, { title: "Overflow and Layout", code: Tree_OverflowAndLayout_Example_tsx_1.default },
                    React.createElement(Tree_OverflowAndLayout_Example_1.TreeOverflowAndLayoutExample, null)),
                React.createElement(react_docsite_components_1.ExampleCard, { title: "Lazy loaded", code: AsyncTree_BasicExample_tsx_1.default },
                    React.createElement(AsyncTree_BasicExample_1.AsyncTreeBasicExample, null)),
                React.createElement(react_docsite_components_1.ExampleCard, { title: "Shimmered Tree", code: ShimmeredTree_BasicExample_tsx_1.default },
                    React.createElement(ShimmeredTree_BasicExample_1.ShimmeredTreeBasicExample, null)),
                React.createElement(react_docsite_components_1.ExampleCard, { title: "Lazy loaded with pagination", code: AsyncTree_PaginationExample_tsx_1.default },
                    React.createElement(AsyncTree_PaginationExample_1.AsyncTreePaginationExample, null)),
                React.createElement(react_docsite_components_1.ExampleCard, { title: "Shimmered Tree", code: ShimmeredTree_BasicExample_tsx_1.default },
                    React.createElement(ShimmeredTree_BasicExample_1.ShimmeredTreeBasicExample, null))), propertiesTables: React.createElement(react_docsite_components_1.PropertiesTableSet, { sources: [Tree_types_ts_1.default] }), overview: React.createElement("div", null,
                React.createElement("p", null, "Provides a tree control.")), isHeaderVisible: this.props.isHeaderVisible }));
    };
    return TreePage;
}(React.Component));
exports.TreePage = TreePage;
//# sourceMappingURL=TreePage.js.map