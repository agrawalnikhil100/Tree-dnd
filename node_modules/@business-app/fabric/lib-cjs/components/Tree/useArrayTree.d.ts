/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
import { ITreeItem } from './Tree.types';
export interface IArrayTree<TTreeItem extends ITreeItem> {
    items: ReadonlyArray<Readonly<TTreeItem>>;
    getChildrenOf(item: Readonly<TTreeItem>): ReadonlyArray<Readonly<TTreeItem>>;
    appendChildrenTo(item: Readonly<TTreeItem> | null, children: ReadonlyArray<Readonly<TTreeItem>>): void;
    replace(item: Readonly<TTreeItem>, replacementItem: Readonly<TTreeItem>): void;
    remove(item: Readonly<TTreeItem>): void;
    clear(): void;
    refresh(): void;
}
export declare function useArrayTree<TTreeItem extends ITreeItem>(topLevelItems?: TTreeItem[]): IArrayTree<TTreeItem>;
