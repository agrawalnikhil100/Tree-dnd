/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
import { IContextualMenuItem } from '@fluentui/react/lib/ContextualMenu';
import { IPoint } from '@fluentui/react/lib/Utilities';
import * as React from 'react';
import { ITreeNodeProps } from './TreeNode.types';
export interface ITreeNodeState {
    contextualMenuTargetPoint: IPoint;
    isContextualMenuOpen: boolean;
    menuOpenedForItemKey: string;
    items: IContextualMenuItem[];
}
export declare class TreeNode extends React.Component<ITreeNodeProps, ITreeNodeState> {
    private contextMenuRef;
    private static _getStateFromProps;
    private get _supportsContextualMenu();
    constructor(props: ITreeNodeProps);
    static getDerivedStateFromProps(nextProps: ITreeNodeProps, prevState: ITreeNodeState): ITreeNodeState;
    render(): JSX.Element;
    private _onRenderItemContainer;
    private _onRenderItemLabelContent;
    private _onRenderItemLabel;
    private _onRenderExpandIcon;
    private _onRenderContextualMenu;
    private _getAriaExpanded;
    private _getCommands;
    private _handleNodeKeyDown;
    private _onExpandIconClicked;
    private _onNodeDoubleClicked;
    private _onNodeSelected;
    private _onContextMenu;
    private _onMenuButtonClick;
    private _toggleShowMenu;
    private _showContextMenu;
    private _dismissContextMenu;
}
