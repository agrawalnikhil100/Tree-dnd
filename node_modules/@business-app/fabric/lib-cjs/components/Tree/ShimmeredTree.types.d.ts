/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
import { IShimmerProps, IShimmerStyleProps, IShimmerStyles } from '@fluentui/react/lib/Shimmer';
import { IComponentAs, IPropsWithStyles, IStyleFunctionOrObject } from '@fluentui/react/lib/Utilities';
import { ITreeItem, ITreeProps, ITreeStyleProps, ITreeStyles } from './Tree.types';
export declare type IShimmeredTreeItem = ITreeItem & {
    label: '';
    key: string;
    level: number;
    isFolder?: boolean;
    moreCommandsAriaLabel?: undefined;
    disableSelection: true;
    disableFocus: true;
    iconProps?: undefined;
    isShimmered: true;
};
export declare type IShimmeredTreeProps<T extends ITreeItem = ITreeItem> = Omit<ITreeProps<T>, 'items'> & Partial<IShimmeredTreeSlots> & IPropsWithStyles<IShimmeredTreeStyleProps, IShimmeredTreeStyles> & {
    items: T[] | IShimmeredTreeItem[];
};
export declare type IShimmeredTreeStyleProps = ITreeStyleProps;
export declare type IShimmeredTreeStyles = ITreeStyles & {
    subComponentStyles: {
        shimmer: IStyleFunctionOrObject<IShimmerStyleProps, IShimmerStyles>;
    };
};
export interface IShimmeredTreeSlots {
    shimmerProps: Partial<IShimmerProps>;
    shimmerAs: IComponentAs<IShimmerProps>;
}
