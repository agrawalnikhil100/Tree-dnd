"use strict";
/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ShimmeredTreeBasicExample = void 0;
var Styling_1 = require("@fluentui/react/lib/Styling");
var React = require("react");
var ShimmeredTree_1 = require("../ShimmeredTree");
var ShimmeredTreeBasicExample = function (props) {
    var treeItems = React.useMemo(function () {
        var items = [];
        items.push({
            key: 'folder',
            label: 'Folder 1',
            setSize: 11,
            level: 0,
            isFolder: true,
            indexInParent: 0,
            iconProps: {
                iconName: 'OpenFolderHorizontal'
            }
        });
        for (var i = 0; i < 5; i++) {
            items.push({
                isShimmered: true,
                key: "shimmered- + " + i.toString(),
                label: '',
                level: 1,
                setSize: 5,
                indexInParent: i,
                disableFocus: true,
                disableSelection: true
            });
        }
        for (var i = 0; i < 10; i++) {
            if (i < 5) {
                var item = {
                    key: i.toString(),
                    label: "Record " + (i + 1).toString(),
                    level: 0,
                    setSize: 11,
                    indexInParent: i + 1,
                    iconProps: {
                        iconName: 'Page'
                    }
                };
                items.push(item);
            }
            else {
                var shimmeredItem = {
                    isShimmered: true,
                    key: i.toString(),
                    label: '',
                    level: 0,
                    setSize: 10,
                    indexInParent: i,
                    disableFocus: true,
                    disableSelection: true
                };
                items.push(shimmeredItem);
            }
        }
        return items;
    }, []);
    return (React.createElement(React.Fragment, null,
        React.createElement("div", { className: exampleStyles.exampleContainer },
            React.createElement(ShimmeredTree_1.ShimmeredTree, { items: treeItems, styles: treeStyles, strings: { moreCommandsAriaLabel: '', listAriaLabel: '' } }))));
};
exports.ShimmeredTreeBasicExample = ShimmeredTreeBasicExample;
var exampleStyles = Styling_1.mergeStyleSets({
    exampleContainer: {
        // 'display: flex' is important for the Tree to layout correctly.
        display: 'flex',
        // Just an example to prove that row direction also works for the Tree.
        flexDirection: 'row',
        width: 320,
        height: 200,
        userSelect: 'none'
    }
});
var treeStyles = {
    root: {
        background: 'white'
    }
};
//# sourceMappingURL=ShimmeredTree.BasicExample.js.map