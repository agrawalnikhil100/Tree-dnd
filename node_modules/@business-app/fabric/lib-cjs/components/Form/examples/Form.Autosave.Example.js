"use strict";
/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.FormAutosaveExample = void 0;
var tslib_1 = require("tslib");
var React = require("react");
var __1 = require("..");
var Validators = require("../validators/Validators");
var FormAutosaveExample = /** @class */ (function (_super) {
    tslib_1.__extends(FormAutosaveExample, _super);
    function FormAutosaveExample() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        _this._onUpdate = function (key, value) {
            var newFormResults = _this.state && _this.state.formResults ? tslib_1.__assign({}, _this.state.formResults) : {};
            newFormResults[key] = value;
            _this.setState({ formResults: newFormResults });
        };
        return _this;
    }
    FormAutosaveExample.prototype.render = function () {
        return (React.createElement("div", null,
            React.createElement(__1.Form, { onUpdated: this._onUpdate },
                React.createElement(__1.FormTextInput, { textFieldProps: { label: 'Text Input with max length of 10' }, inputKey: "maxLength", validators: [Validators.maxLength(10, function (length) { return 'Must be less than 10 characters'; })] }),
                React.createElement(__1.FormTextInput, { textFieldProps: { label: 'Text input with min length of 10' }, inputKey: "minLength", validators: [Validators.minLength(10, function (length) { return 'Must be greater than 10 characters'; })] }),
                React.createElement(__1.FormTextInput, { textFieldProps: { label: 'Required text input' }, inputKey: "required", validators: [Validators.required('Field is required')] }),
                React.createElement(__1.FormDatePicker, { datePickerProps: { label: 'Date Picker with date no less than yesterday' }, inputKey: "date", validators: [
                        function (value) {
                            if (value) {
                                var date = new Date();
                                date.setDate(date.getDate() - 1);
                                if (value.getTime() < date.getTime()) {
                                    return 'Date must be today or later';
                                }
                            }
                            return undefined;
                        }
                    ] })),
            this.state && this.state.formResults && (React.createElement("div", { className: "results-view" },
                React.createElement("h4", null, "Results"),
                JSON.stringify(this.state.formResults)))));
    };
    return FormAutosaveExample;
}(React.Component));
exports.FormAutosaveExample = FormAutosaveExample;
//# sourceMappingURL=Form.Autosave.Example.js.map