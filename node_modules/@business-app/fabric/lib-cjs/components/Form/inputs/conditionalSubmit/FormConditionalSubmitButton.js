"use strict";
/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.FormConditionalSubmitButton = void 0;
var tslib_1 = require("tslib");
var PropTypes = require("prop-types");
var React = require("react");
// Components
var Button_1 = require("@fluentui/react/lib/Button");
var Utilities_1 = require("@fluentui/react/lib/Utilities");
/**
 * Submit button for the form which is disabled when the form is invalid
 */
var FormConditionalSubmitButton = /** @class */ (function (_super) {
    tslib_1.__extends(FormConditionalSubmitButton, _super);
    function FormConditionalSubmitButton(props, formContext) {
        var _this = _super.call(this, props, formContext) || this;
        _this.formContext = formContext;
        return _this;
    }
    /**
     * Render a Fabric Button
     */
    FormConditionalSubmitButton.prototype.render = function () {
        var _a = this.props.buttonProps || {}, disabled = _a.disabled, buttonProps = tslib_1.__rest(_a, ["disabled"]);
        return (React.createElement(Button_1.PrimaryButton, tslib_1.__assign({}, buttonProps, { type: "submit", disabled: disabled || !this.formContext.isFormValid() }), this.props.children));
    };
    FormConditionalSubmitButton.contextTypes = {
        isFormValid: PropTypes.func.isRequired,
        mountInput: PropTypes.func.isRequired,
        unmountInput: PropTypes.func.isRequired,
        submitValue: PropTypes.func.isRequired
    };
    return FormConditionalSubmitButton;
}(Utilities_1.BaseComponent));
exports.FormConditionalSubmitButton = FormConditionalSubmitButton;
//# sourceMappingURL=FormConditionalSubmitButton.js.map