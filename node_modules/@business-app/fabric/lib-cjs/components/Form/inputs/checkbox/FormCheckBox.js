"use strict";
/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.FormCheckBox = void 0;
var tslib_1 = require("tslib");
var React = require("react");
// Components
var Checkbox_1 = require("@fluentui/react/lib/Checkbox");
var FormBaseInput_1 = require("../../FormBaseInput");
/**
 * Checkbox input for the Form. Displays a boolean value as a checkbox
 */
var FormCheckBox = /** @class */ (function (_super) {
    tslib_1.__extends(FormCheckBox, _super);
    function FormCheckBox(props, context) {
        var _this = _super.call(this, props, context) || this;
        _this._onChange = function (event, isChecked) {
            var _a;
            var checkboxProps = _this.props.checkboxProps;
            (_a = checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.onChange) === null || _a === void 0 ? void 0 : _a.call(checkboxProps, event, isChecked);
            _this.setValue(isChecked);
        };
        _this.state = {
            isValid: true,
            currentValue: _this.props.value || false,
            currentError: undefined
        };
        _this._validateCheckboxProps(props.checkboxProps);
        return _this;
    }
    /**
     * Render a checkbox
     */
    FormCheckBox.prototype.render = function () {
        return (React.createElement(Checkbox_1.Checkbox, tslib_1.__assign({}, this.props.checkboxProps, { key: this.props.inputKey, onChange: this._onChange, checked: this.state.currentValue })));
    };
    FormCheckBox.prototype._validateCheckboxProps = function (props) {
        if (props) {
            if (props.checked !== null && props.checked !== undefined) {
                // eslint-disable-next-line no-console
                console.warn("FormCheckBox: 'checked' prop was specified and will be ignored");
            }
            if (props.onChange) {
                // eslint-disable-next-line no-console
                console.warn("FormCheckBox: 'onChange' prop was specified and will be ignored");
            }
        }
    };
    return FormCheckBox;
}(FormBaseInput_1.FormBaseInput));
exports.FormCheckBox = FormCheckBox;
//# sourceMappingURL=FormCheckBox.js.map