"use strict";
/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MultistepPanelBasicExample = void 0;
var tslib_1 = require("tslib");
var MessageBar_1 = require("@fluentui/react/lib/MessageBar");
var Toggle_1 = require("@fluentui/react/lib/Toggle");
var React = require("react");
var MultistepPanel_1 = require("../MultistepPanel");
var MultistepPanelBasicExample = /** @class */ (function (_super) {
    tslib_1.__extends(MultistepPanelBasicExample, _super);
    function MultistepPanelBasicExample(props) {
        var _this = _super.call(this, props) || this;
        _this._setPanelOpenIndex = function (newIndex) {
            if (_this.state.panelOpenIndex !== newIndex) {
                _this.setState({
                    panelOpenIndex: newIndex,
                    messageBar: null
                });
            }
        };
        _this._onDismiss = function () {
            _this.setState({ open: false });
        };
        _this.state = {
            open: false,
            panelOpenIndex: 0,
            dismissDialog: {
                title: 'Discard changes',
                subtext: 'Are you sure you want to discard changes?',
                confirmButtonText: 'Discard',
                cancelButtonText: 'Cancel'
            },
            messageBar: null,
            panel1Stuff: false
        };
        return _this;
    }
    MultistepPanelBasicExample.prototype.getPanelProps1 = function (commonProps) {
        return tslib_1.__assign(tslib_1.__assign({}, commonProps), { headerText: 'Page 1', closeButtonAriaLabel: 'close', children: React.createElement("span", null, "Content goes here."), footerButtons: [
                {
                    primary: true,
                    navigateableOnClick: function (currentIndex) { return currentIndex - 1; },
                    text: 'Cancel',
                    ariaLabel: 'Cancel'
                },
                {
                    navigateableOnClick: function (currentIndex) { return currentIndex + 1; },
                    text: 'Next',
                    ariaLabel: 'Next'
                }
            ] });
    };
    MultistepPanelBasicExample.prototype.getPanelProps2 = function (commonProps) {
        var _this = this;
        var content = (React.createElement(Toggle_1.Toggle, { label: "Click here to proceed", checked: this.state.panel1Stuff, onChanged: function (hasChanged) { return _this.setState({ panel1Stuff: hasChanged }); }, onText: "Changed", offText: "Unchanged" }));
        return tslib_1.__assign(tslib_1.__assign({}, commonProps), { headerText: 'Page 2', closeButtonAriaLabel: 'close', children: content, footerButtons: [
                {
                    primary: true,
                    navigateableOnClick: function (currentIndex) { return currentIndex - 1; },
                    text: 'Back'
                },
                {
                    navigateableOnClick: function (currentIndex) {
                        if (_this.state.panel1Stuff) {
                            return currentIndex + 1;
                        }
                        else {
                            _this._setError('Please toggle the button to proceed.');
                            return currentIndex;
                        }
                    },
                    text: 'Next'
                }
            ], messageBar: this.state.messageBar });
    };
    MultistepPanelBasicExample.prototype.getPanelProps3 = function (commonProps) {
        return tslib_1.__assign(tslib_1.__assign({}, commonProps), { headerText: 'Page 3', closeButtonAriaLabel: 'close', children: React.createElement("span", null, "More content goes here."), footerButtons: [
                {
                    primary: true,
                    navigateableOnClick: function (currentIndex) { return currentIndex - 1; },
                    text: 'Back'
                },
                {
                    navigateableOnClick: function (currentIndex) { return currentIndex + 1; },
                    text: 'Save'
                }
            ] });
    };
    MultistepPanelBasicExample.prototype.render = function () {
        var _this = this;
        var _a = this.state, open = _a.open, panelOpenIndex = _a.panelOpenIndex, dismissDialog = _a.dismissDialog;
        var commonProps = {
            hasCloseButton: true
        };
        var panelsListProps = [
            this.getPanelProps1(commonProps),
            this.getPanelProps2(commonProps),
            this.getPanelProps3(commonProps)
        ];
        return (React.createElement("div", null,
            React.createElement(Toggle_1.Toggle, { label: "Show panel", checked: open, onChanged: function (isOpen) { return _this.setState({ open: isOpen }); }, onText: "Visible", offText: "Hidden" }),
            React.createElement("div", { className: "ba-Panel-BasicExample" },
                React.createElement(MultistepPanel_1.MultistepPanel, { isOpen: open, isLightDismiss: true, dismissDialog: dismissDialog, showDismissDialog: true, onDismiss: this._onDismiss, panelsListProps: panelsListProps, panelOpenIndex: panelOpenIndex, setPanelOpenIndex: this._setPanelOpenIndex, headerIconAriaLabel: "back" }))));
    };
    MultistepPanelBasicExample.prototype._setError = function (message) {
        this.setState({
            messageBar: {
                messageBarProps: { messageBarType: MessageBar_1.MessageBarType.error },
                onRenderBody: function () { return React.createElement("span", null, message); }
            }
        });
    };
    return MultistepPanelBasicExample;
}(React.Component));
exports.MultistepPanelBasicExample = MultistepPanelBasicExample;
//# sourceMappingURL=MultistepPanel.Basic.Example.js.map