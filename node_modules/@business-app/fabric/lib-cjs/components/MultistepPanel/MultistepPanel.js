"use strict";
/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MultistepPanel = void 0;
var tslib_1 = require("tslib");
var Panel_1 = require("@business-app/fabric/lib/components/Panel");
var Utilities_1 = require("@fluentui/react/lib/Utilities");
var React = require("react");
var Styles = require("./Multistep.styles");
var MultistepPanel = /** @class */ (function (_super) {
    tslib_1.__extends(MultistepPanel, _super);
    function MultistepPanel(props) {
        return _super.call(this, props) || this;
    }
    MultistepPanel.prototype.componentDidUpdate = function (prevProps) {
        if (prevProps.panelOpenIndex !== this.props.panelOpenIndex) {
            if (this.props.panelOpenIndex < 0 || this.props.panelOpenIndex >= this.props.panelsListProps.length) {
                this.props.onDismiss();
            }
        }
    };
    MultistepPanel.prototype.render = function () {
        var _this = this;
        var _a = this.props, panelsListProps = _a.panelsListProps, panelOpenIndex = _a.panelOpenIndex, setPanelOpenIndex = _a.setPanelOpenIndex, componentRef = _a.componentRef, inheritedPanelProps = tslib_1.__rest(_a, ["panelsListProps", "panelOpenIndex", "setPanelOpenIndex", "componentRef"]);
        if (panelsListProps.length === 0) {
            return null;
        }
        if (panelOpenIndex < 0 || !panelOpenIndex) {
            panelOpenIndex = 0;
        }
        else if (panelOpenIndex >= panelsListProps.length) {
            panelOpenIndex = panelsListProps.length - 1;
        }
        var currentPanelListProps = panelsListProps[panelOpenIndex];
        var footerButtons = currentPanelListProps.footerButtons &&
            currentPanelListProps.footerButtons.map(function (footerProps) {
                var navigateableOnClick = footerProps.navigateableOnClick, restFooterProps = tslib_1.__rest(footerProps, ["navigateableOnClick"]);
                var dismissableOnClick = function (dismissPanel) {
                    if (navigateableOnClick) {
                        var nextIndex = navigateableOnClick(panelOpenIndex, dismissPanel);
                        if (nextIndex) {
                            setPanelOpenIndex(nextIndex);
                        }
                    }
                };
                return tslib_1.__assign(tslib_1.__assign({}, restFooterProps), { dismissableOnClick: dismissableOnClick });
            });
        var headerLeftButtonProps;
        if (!this.props.hideLeftHeaderBackButton && panelOpenIndex > 0) {
            headerLeftButtonProps = {
                ariaLabel: inheritedPanelProps.headerIconAriaLabel,
                iconProps: {
                    iconName: 'Back'
                },
                onClick: function () {
                    var newPanelOpenIndex = panelOpenIndex - 1;
                    if (_this.props.onLeftHeaderBackButtonClicked) {
                        newPanelOpenIndex = _this.props.onLeftHeaderBackButtonClicked(panelOpenIndex, _this.props.onDismiss);
                    }
                    setPanelOpenIndex(newPanelOpenIndex);
                }
            };
        }
        return (React.createElement(Panel_1.Panel, tslib_1.__assign({}, inheritedPanelProps, { headerLeftButtonProps: headerLeftButtonProps }, currentPanelListProps, { footerButtons: footerButtons, styles: tslib_1.__assign(tslib_1.__assign({}, Styles.multistepPanelStyles), currentPanelListProps.styles) })));
    };
    return MultistepPanel;
}(Utilities_1.BaseComponent));
exports.MultistepPanel = MultistepPanel;
//# sourceMappingURL=MultistepPanel.js.map