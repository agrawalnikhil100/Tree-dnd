"use strict";
/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.RichCardWithCustomRenderingExample = void 0;
var tslib_1 = require("tslib");
var React = require("react");
var Button_1 = require("@fluentui/react/lib/Button");
var ContextualMenu_1 = require("@fluentui/react/lib/ContextualMenu");
var RichCard_1 = require("@business-app/fabric/lib/components/Card/RichCard");
var RichCardWithCustomRenderingExample = /** @class */ (function (_super) {
    tslib_1.__extends(RichCardWithCustomRenderingExample, _super);
    function RichCardWithCustomRenderingExample() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    RichCardWithCustomRenderingExample.prototype.render = function () {
        return (React.createElement(RichCard_1.RichCard, { height: 300, width: 300, headerProps: getHeaderProps(), renderContentArea: renderContentArea, renderFooter: renderFooter, styles: { footer: { padding: 5 } } }));
    };
    return RichCardWithCustomRenderingExample;
}(React.Component));
exports.RichCardWithCustomRenderingExample = RichCardWithCustomRenderingExample;
function renderContentArea() {
    return (React.createElement("img", { style: { width: '100%' }, src: 'https://i.imgur.com/B83RUSb.jpg', alt: "placeholder image for RichCard example" }));
}
function getHeaderProps() {
    return {
        title: 'Card title',
        contextualMenuAriaLabel: 'Menu',
        contextualMenuProps: {
            items: [
                {
                    key: 'newItem',
                    text: 'New',
                    onClick: function () { return alert('New clicked'); },
                    ariaLabel: 'New'
                },
                {
                    key: 'divider_1',
                    itemType: ContextualMenu_1.ContextualMenuItemType.Divider
                },
                {
                    key: 'rename',
                    text: 'Rename',
                    ariaLabel: 'Rename',
                    onClick: function () { return alert('Rename clicked'); }
                },
                {
                    key: 'edit',
                    text: 'Edit',
                    ariaLabel: 'Edit',
                    onClick: function () { return alert('Edit clicked'); }
                },
                {
                    key: 'properties',
                    text: 'Properties',
                    ariaLabel: 'Properties',
                    onClick: function () { return alert('Properties clicked'); }
                },
                {
                    key: 'linkNoTarget',
                    ariaLabel: 'Link with no target',
                    text: 'Link same window',
                    href: 'http://bing.com'
                }
            ]
        },
        renderActionLinks: function () {
            return (React.createElement(React.Fragment, null,
                React.createElement(Button_1.IconButton, { "aria-label": 'Attach', iconProps: { iconName: 'Attach' } }),
                React.createElement(Button_1.IconButton, { "aria-label": 'Add', iconProps: { iconName: 'Add' } })));
        }
    };
}
function renderFooter() {
    return (React.createElement(React.Fragment, null,
        React.createElement(Button_1.PrimaryButton, { text: 'Done', style: { margin: '5px' } }),
        React.createElement(Button_1.DefaultButton, { text: 'Cancel', style: { margin: '5px' } })));
}
//# sourceMappingURL=RichCard.With.Custom.Rendering.Example.js.map