"use strict";
/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
Object.defineProperty(exports, "__esModule", { value: true });
require("jest");
var Enzyme = require("enzyme");
var React = require("react");
var Button_1 = require("@fluentui/react/lib/Button");
var CardHeader_1 = require("./../CardHeader");
var RichCard_1 = require("./../RichCard");
describe('RichCard', function () {
    var ContentArea = function () { return React.createElement(Button_1.DefaultButton, null,
        'Content area',
        " /"); };
    var Footer = function () { return React.createElement(Button_1.DefaultButton, null,
        'Footer area',
        " /"); };
    var CustomTitle = function () { return React.createElement("div", null,
        'custom title',
        " /"); };
    var CustomSubTitle = function () { return React.createElement("div", null,
        'custom sub title',
        " /"); };
    it('Card header and the content area get rendered', function () {
        var wrapper = Enzyme.mount(React.createElement(RichCard_1.RichCard, { headerProps: { title: 'Title' }, renderContentArea: function () { return React.createElement(ContentArea, null); } }));
        // The Card header gets rendered
        var findCardHeader = wrapper.find(CardHeader_1.CardHeader);
        expect(findCardHeader.length).toBe(1);
        // The content area gets rendered
        var findContentArea = wrapper.find(ContentArea);
        expect(findContentArea.length).toBe(1);
        wrapper.unmount();
    });
    it('The footer gets rendered when we pass the renderFooter prop', function () {
        var wrapper = Enzyme.mount(React.createElement(RichCard_1.RichCard, { headerProps: { title: 'Title' }, renderContentArea: function () { return React.createElement(ContentArea, null); }, renderFooter: function () { return React.createElement(Footer, null); } }));
        // The footer gets rendered
        var findCardFooter = wrapper.find(Footer);
        expect(findCardFooter.length).toBe(1);
        wrapper.unmount();
    });
    it('If iconProps are provided they are rendered', function () {
        var wrapper = Enzyme.mount(React.createElement(RichCard_1.RichCard, { headerProps: { subTitleIconProps: { iconName: 'CompassNW' } } }));
        var findCardIcon = wrapper.find('.ms-Icon');
        expect(findCardIcon.length).toBe(1);
        wrapper.unmount();
    });
    it('If onRenderTitle exists then it gets rendered', function () {
        var wrapper = Enzyme.mount(React.createElement(RichCard_1.RichCard, { headerProps: { onRenderTitle: function () { return React.createElement(CustomTitle, null); } } }));
        var findCardTitle = wrapper.find(CustomTitle);
        expect(findCardTitle.length).toBe(1);
        wrapper.unmount();
    });
    it('If onRenderSubTitle exists then it gets rendered', function () {
        var wrapper = Enzyme.mount(React.createElement(RichCard_1.RichCard, { headerProps: { onRenderSubTitle: function () { return React.createElement(CustomSubTitle, null); } } }));
        var findCardSubTitle = wrapper.find(CustomSubTitle);
        expect(findCardSubTitle.length).toBe(1);
        wrapper.unmount();
    });
    it('If both onRenderTitle and onRenderSubTitle then both get rendered ', function () {
        var wrapper = Enzyme.mount(React.createElement(RichCard_1.RichCard, { headerProps: { onRenderTitle: function () { return React.createElement(CustomTitle, null); }, onRenderSubTitle: function () { return React.createElement(CustomSubTitle, null); } } }));
        var findCardTitle = wrapper.find(CustomTitle);
        expect(findCardTitle.length).toBe(1);
        var findCardSubTitle = wrapper.find(CustomSubTitle);
        expect(findCardSubTitle.length).toBe(1);
        wrapper.unmount();
    });
});
//# sourceMappingURL=RichCard.test.js.map