"use strict";
/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.LoadingPrimaryButton = exports.LoadingDefaultButton = exports.LoadingCommandButton = exports.LoadingActionButton = exports.loadingButton = void 0;
var tslib_1 = require("tslib");
var Button_1 = require("@fluentui/react/lib/Button");
var Spinner_1 = require("@fluentui/react/lib/Spinner");
var React = require("react");
var spinnerStyles = {
    root: {
        marginLeft: 4,
        marginRight: 4
    }
};
/**
 * A higher order component that wraps Button components with the ability to render a loading spinner
 * in the place of the button's icon.
 * @param ButtonComponent The Button component to wrap.
 */
function loadingButton(ButtonComponent) {
    return /** @class */ (function (_super) {
        tslib_1.__extends(LoadingButton, _super);
        function LoadingButton() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.onRenderIcon = function (buttonProps, defaultRender) {
                var _a = _this.props, loading = _a.loading, spinnerAs = _a.spinnerAs;
                if (!loading) {
                    return defaultRender && defaultRender(buttonProps);
                }
                var SpinnerComponent = spinnerAs || Spinner_1.Spinner;
                return (React.createElement(SpinnerComponent, { className: "ba-LoadingButton-spinner", size: Spinner_1.SpinnerSize.small, styles: spinnerStyles }));
            };
            return _this;
        }
        LoadingButton.prototype.render = function () {
            return React.createElement(ButtonComponent, tslib_1.__assign({}, this.props, { onRenderIcon: this.onRenderIcon }));
        };
        return LoadingButton;
    }(React.Component));
}
exports.loadingButton = loadingButton;
/** Office Fabric's "ActionButton" pre-wrapped with loading capability. */
exports.LoadingActionButton = loadingButton(Button_1.ActionButton);
/** Office Fabric's "CommandButton" pre-wrapped with loading capability. */
exports.LoadingCommandButton = loadingButton(Button_1.CommandButton);
/** Office Fabric's "DefaultButton" pre-wrapped with loading capability. */
exports.LoadingDefaultButton = loadingButton(Button_1.DefaultButton);
/** Office Fabric's "PrimaryButton" pre-wrapped with loading capability. */
exports.LoadingPrimaryButton = loadingButton(Button_1.PrimaryButton);
//# sourceMappingURL=LoadingButton.js.map