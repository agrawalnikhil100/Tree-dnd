"use strict";
/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var enzyme_1 = require("enzyme");
require("jest");
var Button_1 = require("@fluentui/react/lib/Button");
var Styling_1 = require("@fluentui/react/lib/Styling");
var React = require("react");
var Accordion_base_1 = require("./Accordion.base");
var Accordion_styles_1 = require("./Accordion.styles");
describe('Accordion', function () {
    var defaultProps;
    beforeEach(function () {
        var theme = Styling_1.getTheme();
        defaultProps = {
            text: 'Stuff here',
            iconProps: { iconName: 'CollapseMenu' },
            onRenderContent: jest.fn(),
            styles: Accordion_styles_1.styles({ containerClassName: 'baf-test-accordian', isContentVisible: true }),
            theme: theme
        };
    });
    it('should render the component', function () {
        var wrapper = enzyme_1.shallow(React.createElement(Accordion_base_1.AccordionBase, tslib_1.__assign({}, defaultProps)));
        expect(wrapper.find('.ba-Accordion').length).toBe(1);
    });
    it('should show the content when the header is clicked', function () {
        var wrapper = enzyme_1.shallow(React.createElement(Accordion_base_1.AccordionBase, tslib_1.__assign({}, defaultProps, { onRenderContent: function () {
                return (React.createElement(Button_1.DefaultButton, { key: "item1", text: "Link 1", iconProps: { iconName: 'CompassNW' }, ariaLabel: "New. Use left and right arrow keys to navigate", onClick: jest.fn() }));
            } })));
        wrapper.find('.ba-Accordion-header').simulate('click');
        expect(wrapper.find('.ba-Accordion-content').length).toBe(1);
    });
    it('should not show the content when the header is clicked twice', function () {
        var wrapper = enzyme_1.shallow(React.createElement(Accordion_base_1.AccordionBase, tslib_1.__assign({}, defaultProps, { onRenderContent: function () {
                return (React.createElement(Button_1.DefaultButton, { key: "item1", text: "Link 1", iconProps: { iconName: 'CompassNW' }, ariaLabel: "New. Use left and right arrow keys to navigate", onClick: jest.fn() }));
            } })));
        expect(wrapper.find('.ba-Accordion-content').length).toBe(0);
        wrapper.find('.ba-Accordion-header').simulate('click');
        wrapper.find('.ba-Accordion-header').simulate('click');
        expect(wrapper.find('.ba-Accordion-content').length).toBe(0);
    });
    it('content should be initially visible if checked', function () {
        var wrapper = enzyme_1.shallow(React.createElement(Accordion_base_1.AccordionBase, tslib_1.__assign({}, defaultProps, { checked: true, onRenderContent: function () {
                return (React.createElement(Button_1.DefaultButton, { key: "item1", text: "Link 1", iconProps: { iconName: 'CompassNW' }, ariaLabel: "New. Use left and right arrow keys to navigate", onClick: jest.fn() }));
            } })));
        expect(wrapper.find('.ba-Accordion-content').length).toBe(1);
    });
    it('content should be initially visible if not checked', function () {
        var wrapper = enzyme_1.shallow(React.createElement(Accordion_base_1.AccordionBase, tslib_1.__assign({}, defaultProps, { checked: false, onRenderContent: function () {
                return (React.createElement(Button_1.DefaultButton, { key: "item1", text: "Link 1", iconProps: { iconName: 'CompassNW' }, ariaLabel: "New. Use left and right arrow keys to navigate", onClick: jest.fn() }));
            } })));
        expect(wrapper.find('.ba-Accordion-content').length).toBe(0);
    });
    it('content should remain visible on checked change', function () {
        var wrapper = enzyme_1.shallow(React.createElement(Accordion_base_1.AccordionBase, tslib_1.__assign({}, defaultProps, { checked: true, onRenderContent: function () {
                return (React.createElement(Button_1.DefaultButton, { key: "item1", text: "Link 1", iconProps: { iconName: 'CompassNW' }, ariaLabel: "New. Use left and right arrow keys to navigate", onClick: jest.fn() }));
            } })));
        expect(wrapper.find('.ba-Accordion-content').length).toBe(1);
        wrapper.setProps({ checked: false });
        expect(wrapper.find('.ba-Accordion-content').length).toBe(1);
    });
    it('content should remain closed on checked change', function () {
        var wrapper = enzyme_1.shallow(React.createElement(Accordion_base_1.AccordionBase, tslib_1.__assign({}, defaultProps, { checked: false, onRenderContent: function () {
                return (React.createElement(Button_1.DefaultButton, { key: "item1", text: "Link 1", iconProps: { iconName: 'CompassNW' }, ariaLabel: "New. Use left and right arrow keys to navigate", onClick: jest.fn() }));
            } })));
        expect(wrapper.find('.ba-Accordion-content').length).toBe(0);
        wrapper.setProps({ checked: true });
        expect(wrapper.find('.ba-Accordion-content').length).toBe(0);
    });
});
//# sourceMappingURL=Accordion.test.js.map