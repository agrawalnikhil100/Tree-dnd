"use strict";
/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var Enzyme = require("enzyme");
require("jest");
var React = require("react");
var _1 = require(".");
describe('Page Header with Env', function () {
    var props;
    beforeEach(function () {
        props = {
            items: []
        };
    });
    it('should render the component without searchbox', function () {
        var wrapper = Enzyme.shallow(React.createElement(_1.CommandBarWithSearchBox, tslib_1.__assign({}, props)));
        expect(wrapper).toMatchSnapshot();
        var commandBarProps = wrapper.props().children.props;
        expect(commandBarProps.isSearchBoxVisible).toBeFalsy();
        expect(commandBarProps.farItems).toBeFalsy();
    });
    it('should render the component with searchbox in farItems if flag set', function () {
        props.isSearchBoxVisible = true;
        props.searchBoxProps = {
            labelText: 'Search box'
        };
        var wrapper = Enzyme.shallow(React.createElement(_1.CommandBarWithSearchBox, tslib_1.__assign({}, props)));
        var commandBarProps = wrapper.props().children.props;
        expect(commandBarProps.isSearchBoxVisible).toBeFalsy();
        expect(commandBarProps.farItems.length).toBe(1);
        var searchBox = commandBarProps.farItems[0].onRender();
        var searchBoxProps = searchBox.props;
        expect(searchBoxProps).toHaveProperty('styles');
    });
    it('should render the component with the wrapper class', function () {
        props.wrapperClassName = 'test-class';
        var wrapper = Enzyme.shallow(React.createElement(_1.CommandBarWithSearchBox, tslib_1.__assign({}, props)));
        expect(wrapper.find('.test-class')).toBeDefined();
    });
});
//# sourceMappingURL=CommandBarWithSearchBox.test.js.map