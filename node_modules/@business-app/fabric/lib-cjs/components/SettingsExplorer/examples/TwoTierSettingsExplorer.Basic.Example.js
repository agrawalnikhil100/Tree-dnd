"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TwoTierSettingsExplorerBasicExample = void 0;
var tslib_1 = require("tslib");
/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
var Button_1 = require("@fluentui/react/lib/Button");
var Dropdown_1 = require("@fluentui/react/lib/Dropdown");
var Modal_1 = require("@fluentui/react/lib/Modal");
var Styling_1 = require("@fluentui/react/lib/Styling");
var React = require("react");
var SettingsExplorer_1 = require("../SettingsExplorer");
var SettingsItem_1 = require("../SettingsItem");
var SettingsPage_1 = require("../SettingsPage");
var TwoTierSettingsExplorer_1 = require("../TwoTierSettingsExplorer");
var ExampleInput_1 = require("./ExampleInput");
var TwoTierSettingsExplorerBasicExample = /** @class */ (function (_super) {
    tslib_1.__extends(TwoTierSettingsExplorerBasicExample, _super);
    function TwoTierSettingsExplorerBasicExample(props) {
        var _this = _super.call(this, props) || this;
        _this._openSettingsExplorer = function (status) {
            _this.setState({ modalOpen: status });
        };
        _this.state = { modalOpen: false };
        return _this;
    }
    TwoTierSettingsExplorerBasicExample.prototype.render = function () {
        var _this = this;
        return (React.createElement("div", null,
            React.createElement(Button_1.DefaultButton, { onClick: function () { return _this._openSettingsExplorer(true); }, text: "Two Tiered", className: Styling_1.mergeStyles({
                    width: 200
                }) }),
            React.createElement(Modal_1.Modal, { isOpen: this.state.modalOpen, onDismiss: function () { return _this._openSettingsExplorer(false); }, closeButtonAriaLabel: 'Cancel' },
                React.createElement(TwoTierSettingsExplorer_1.TwoTierSettingsExplorer, { name: 'General Settings', saveButtonProps: {
                        onClick: function () {
                            alert('save clicked');
                        },
                        text: 'Save'
                    }, cancelButtonProps: {
                        onClick: function () {
                            _this._openSettingsExplorer(false);
                        },
                        text: 'Cancel'
                    }, exitButtonProps: {
                        onClick: function () { return _this._openSettingsExplorer(false); },
                        ariaLabel: 'Clear'
                    } },
                    React.createElement(SettingsExplorer_1.SettingsExplorer, { name: '[Page 1]', id: 'first' },
                        React.createElement(SettingsPage_1.SettingsPage, { name: '[Submenu 1]', id: 'a' },
                            React.createElement(SettingsItem_1.SettingsItem, null,
                                React.createElement(Dropdown_1.Dropdown, { label: 'Language', options: ExampleInput_1.languageOptions, defaultSelectedKey: 'en-US' })),
                            React.createElement(SettingsItem_1.SettingsItem, null,
                                React.createElement(Dropdown_1.Dropdown, { label: 'Date format', options: ExampleInput_1.dateFormatOptions, defaultSelectedKey: 'M/D/YYYY' })),
                            React.createElement(SettingsItem_1.SettingsItem, null,
                                React.createElement(Dropdown_1.Dropdown, { label: 'Time format', options: ExampleInput_1.timeFormatOptions, defaultSelectedKey: '1:01 AM - 11:59 PM' }))),
                        React.createElement(SettingsPage_1.SettingsPage, { name: '[Submenu 2]' }),
                        React.createElement(SettingsPage_1.SettingsPage, { name: '[Submenu 3]' }),
                        React.createElement(SettingsPage_1.SettingsPage, { name: '[Submenu 4]' }),
                        React.createElement(SettingsPage_1.SettingsPage, { name: '[Submenu 5]' })),
                    React.createElement(SettingsExplorer_1.SettingsExplorer, { name: '[Page 2]', id: 'second' },
                        React.createElement(SettingsPage_1.SettingsPage, { name: '[Submenu 1]' }),
                        React.createElement(SettingsPage_1.SettingsPage, { name: '[Submenu 2]' })),
                    React.createElement(SettingsExplorer_1.SettingsExplorer, { name: '[Page 3]', id: 'third' },
                        React.createElement(SettingsPage_1.SettingsPage, { name: '[Submenu 1]' }),
                        React.createElement(SettingsPage_1.SettingsPage, { name: '[Submenu 2]' }))))));
    };
    return TwoTierSettingsExplorerBasicExample;
}(React.Component));
exports.TwoTierSettingsExplorerBasicExample = TwoTierSettingsExplorerBasicExample;
//# sourceMappingURL=TwoTierSettingsExplorer.Basic.Example.js.map