"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TwoTierSettingsExplorerBase = void 0;
/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
var Utilities_1 = require("@fluentui/react/lib/Utilities");
var React = require("react");
var ExplorerPanel_1 = require("./ExplorerPanel");
var getClassNames = Utilities_1.classNamesFunction();
var TwoTierSettingsExplorerBase = function (props) {
    var _a, _b;
    var name = props.name, disablePanelCollapsing = props.disablePanelCollapsing, styles = props.styles, theme = props.theme, children = props.children, saveButtonProps = props.saveButtonProps, cancelButtonProps = props.cancelButtonProps, exitButtonProps = props.exitButtonProps;
    var classnames = getClassNames(styles, { theme: theme });
    var _c = React.useState(0), primarySelectedIndex = _c[0], setPrimarySelectedIndex = _c[1];
    var ref = React.useRef();
    var primaryPages = React.useMemo(function () {
        return React.Children.map(
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        React.Children.toArray(children), function (page, index) {
            var _a, _b, _c;
            var key = (_b = (_a = page === null || page === void 0 ? void 0 : page.props) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : index.toString();
            var settingsPage = { name: (_c = page === null || page === void 0 ? void 0 : page.props) === null || _c === void 0 ? void 0 : _c.name, id: key, page: page };
            return settingsPage;
        });
    }, [children]);
    var selectedPage = (_a = primaryPages === null || primaryPages === void 0 ? void 0 : primaryPages[primarySelectedIndex]) === null || _a === void 0 ? void 0 : _a.page;
    var addedProps = {
        saveButtonProps: saveButtonProps,
        cancelButtonProps: cancelButtonProps,
        exitButtonProps: exitButtonProps
    };
    if (React.isValidElement(selectedPage)) {
        selectedPage = React.cloneElement(selectedPage, addedProps, (_b = selectedPage === null || selectedPage === void 0 ? void 0 : selectedPage.props) === null || _b === void 0 ? void 0 : _b.children);
    }
    return (React.createElement("div", { className: classnames.root, ref: ref },
        React.createElement(ExplorerPanel_1.ExplorerPanel, { parentRef: ref, header: name, pageList: primaryPages, selectedKey: primaryPages[primarySelectedIndex].id, handleClick: setPrimarySelectedIndex, disableCollapsing: disablePanelCollapsing }),
        React.createElement("div", { className: classnames.pageContainer }, selectedPage)));
};
exports.TwoTierSettingsExplorerBase = TwoTierSettingsExplorerBase;
//# sourceMappingURL=TwoTierSettingsExplorer.base.js.map