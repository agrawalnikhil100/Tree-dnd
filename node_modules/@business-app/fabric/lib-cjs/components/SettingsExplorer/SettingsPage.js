"use strict";
/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SettingsPage = void 0;
var tslib_1 = require("tslib");
var React = require("react");
var Utilities_1 = require("@fluentui/react/lib/Utilities");
var Button_1 = require("@fluentui/react/lib/Button");
var Styling_1 = require("@fluentui/react/lib/Styling");
var SettingsPage_styles_1 = require("./SettingsPage.styles");
var getClassNames = Utilities_1.classNamesFunction();
var SettingsPageBase = function (props) {
    var children = props.children, _a = props.onRenderFooter, onRenderFooter = _a === void 0 ? renderFooter : _a, _b = props.onRenderCloseButton, onRenderCloseButton = _b === void 0 ? renderCloseButton : _b, name = props.name, pageHeader = props.pageHeader, exitButtonProps = props.exitButtonProps, saveButtonProps = props.saveButtonProps, cancelButtonProps = props.cancelButtonProps, styles = props.styles, theme = props.theme;
    var classNames = getClassNames(styles, { theme: theme });
    return (React.createElement("div", { className: classNames.body },
        React.createElement("div", { className: classNames.header },
            React.createElement("h3", { className: classNames.headerName }, pageHeader !== null && pageHeader !== void 0 ? pageHeader : name),
            onRenderCloseButton(exitButtonProps)),
        React.createElement("div", { className: classNames.contentContainer }, children),
        onRenderFooter(saveButtonProps, cancelButtonProps, classNames.footerButtons)));
};
function renderFooter(saveButtonProps, discardButtonProps, footerStyle) {
    return (React.createElement("div", { className: footerStyle },
        !!saveButtonProps && (React.createElement(Button_1.PrimaryButton, tslib_1.__assign({ className: Styling_1.mergeStyles({
                marginRight: 8
            }) }, saveButtonProps))),
        !!discardButtonProps && React.createElement(Button_1.DefaultButton, tslib_1.__assign({}, discardButtonProps))));
}
function renderCloseButton(exitButtonProps) {
    return (React.createElement(Button_1.IconButton, tslib_1.__assign({ className: Styling_1.mergeStyles({
            padding: 8
        }), iconProps: { iconName: 'Clear' } }, exitButtonProps)));
}
exports.SettingsPage = Utilities_1.styled(SettingsPageBase, SettingsPage_styles_1.getStyles, undefined, { scope: 'SettingsPage' });
//# sourceMappingURL=SettingsPage.js.map