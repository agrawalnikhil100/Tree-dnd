{"ast":null,"code":"/*!\n * Copyright (C) Microsoft Corporation. All rights reserved.\n */\nimport { __assign, __extends } from \"tslib\";\nimport { ContextualMenu, DirectionalHint } from '@fluentui/react/lib/ContextualMenu';\nimport { mergeStyles } from '@fluentui/react/lib/Styling';\nimport { KeyCodes } from '@fluentui/react/lib/Utilities';\nimport * as React from 'react';\nimport { ContextualMenuButton } from '../ContextualMenuButton/ContextualMenuButton';\nimport { ExpandIcon } from '../ExpandIcon/ExpandIcon';\nimport { ItemIcon } from '../ItemIcon/ItemIcon';\nimport { NodeLevelIndentation } from '../NodeLevelIndentation/NodeLevelIndentation';\nimport { SelectionType } from '../Tree.types';\nvar contextMenuButtonClass = 'ba-Tree-MenuButton';\n\nvar TreeNode =\n/** @class */\nfunction (_super) {\n  __extends(TreeNode, _super);\n\n  function TreeNode(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._onRenderItemContainer = function () {\n      var _a = _this.props,\n          ariaLabel = _a.ariaLabel,\n          iconProps = _a.iconProps,\n          indentSpacerStyle = _a.indentSpacerStyle,\n          indexInParent = _a.indexInParent,\n          isDisabled = _a.isDisabled,\n          isFocusable = _a.isFocusable,\n          isSelected = _a.isSelected,\n          itemIconContainerStyle = _a.itemIconContainerStyle,\n          itemIconStyle = _a.itemIconStyle,\n          itemKey = _a.itemKey,\n          itemStyle = _a.itemStyle,\n          label = _a.label,\n          level = _a.level,\n          menuButtonClosedStyle = _a.menuButtonClosedStyle,\n          menuButtonDisabledStyle = _a.menuButtonDisabledStyle,\n          menuButtonOpenStyle = _a.menuButtonOpenStyle,\n          menuButtonStyle = _a.menuButtonStyle,\n          moreCommandsAriaLabel = _a.moreCommandsAriaLabel,\n          noItemIconStyle = _a.noItemIconStyle,\n          onRenderExpandIcon = _a.onRenderExpandIcon,\n          onRenderItemLabel = _a.onRenderItemLabel,\n          setSize = _a.setSize;\n      var _b = _this.state,\n          contextualMenuTargetPoint = _b.contextualMenuTargetPoint,\n          isContextualMenuOpen = _b.isContextualMenuOpen,\n          items = _b.items;\n      var useTargetPoint = !!contextualMenuTargetPoint;\n      var itemAriaLabel = ariaLabel ? ariaLabel : label || itemKey;\n      var contextualMenuButtonAriaLabel = !moreCommandsAriaLabel ? '' : moreCommandsAriaLabel;\n      var supportsContextualMenu = _this._supportsContextualMenu;\n      return React.createElement(\"div\", {\n        className: itemStyle,\n        role: 'treeitem',\n        \"aria-disabled\": isDisabled,\n        \"aria-level\": level + 1,\n        \"aria-expanded\": _this._getAriaExpanded(),\n        \"aria-selected\": isSelected,\n        \"aria-label\": itemAriaLabel,\n        \"aria-setsize\": setSize === undefined ? undefined : setSize,\n        \"aria-posinset\": indexInParent === undefined ? undefined : indexInParent + 1\n        /* PosInSet is 1-indexed */\n        ,\n        \"data-allow-keyboard-shortcut\": true,\n        \"data-disable-click-on-enter\": true,\n        \"data-is-focusable\": isFocusable,\n        onKeyDown: _this._handleNodeKeyDown,\n        onDoubleClick: !isDisabled ? _this._onNodeDoubleClicked : undefined,\n        onClick: _this._onNodeSelected,\n        onContextMenu: _this._onContextMenu\n      }, React.createElement(NodeLevelIndentation, {\n        level: level,\n        className: indentSpacerStyle\n      }), onRenderExpandIcon ? onRenderExpandIcon(itemKey, _this._onRenderExpandIcon) : _this._onRenderExpandIcon(), React.createElement(ItemIcon, {\n        iconProps: iconProps,\n        label: itemAriaLabel,\n        itemIconContainerStyle: itemIconContainerStyle,\n        itemIconStyle: itemIconStyle,\n        noItemIconStyle: noItemIconStyle\n      }), onRenderItemLabel ? onRenderItemLabel(itemKey, _this._onRenderItemLabel) : _this._onRenderItemLabel(), supportsContextualMenu && React.createElement(ContextualMenuButton, {\n        disabled: isDisabled,\n        items: items,\n        isOpen: isContextualMenuOpen && !useTargetPoint,\n        onClick: _this._onMenuButtonClick,\n        onDismiss: _this._dismissContextMenu,\n        directionalHint: DirectionalHint.bottomLeftEdge,\n        iconProps: {\n          iconName: 'More',\n          ariaLabel: contextualMenuButtonAriaLabel\n        },\n        ariaLabel: contextualMenuButtonAriaLabel,\n        menuClosedStyle: mergeStyles(menuButtonStyle, menuButtonClosedStyle),\n        menuOpenStyle: mergeStyles(menuButtonStyle, menuButtonOpenStyle),\n        menuDisabledStyle: menuButtonDisabledStyle,\n        onRenderContextualMenu: _this._onRenderContextualMenu,\n        ref: _this.contextMenuRef\n      }), supportsContextualMenu && isContextualMenuOpen && useTargetPoint && _this._onRenderContextualMenu({\n        items: items,\n        onDismiss: _this._dismissContextMenu,\n        shouldFocusOnMount: true,\n        gapSpace: 5,\n        directionalHint: DirectionalHint.bottomLeftEdge,\n        isBeakVisible: false,\n        ariaLabel: itemAriaLabel,\n        target: contextualMenuTargetPoint\n      }));\n    };\n\n    _this._onRenderItemLabelContent = function () {\n      var label = _this.props.label;\n      return React.createElement(React.Fragment, null, label);\n    };\n\n    _this._onRenderItemLabel = function () {\n      var _a = _this.props,\n          itemKey = _a.itemKey,\n          label = _a.label,\n          itemLabelStyle = _a.itemLabelStyle,\n          onRenderItemLabelContent = _a.onRenderItemLabelContent;\n      return React.createElement(\"div\", {\n        title: label,\n        className: itemLabelStyle,\n        \"aria-readonly\": true\n      }, onRenderItemLabelContent ? onRenderItemLabelContent(itemKey, _this._onRenderItemLabelContent) : label);\n    };\n\n    _this._onRenderExpandIcon = function () {\n      var _a = _this.props,\n          isFolder = _a.isFolder,\n          isCollapsible = _a.isCollapsible,\n          collapsedArrowIcon = _a.collapsedArrowIcon,\n          expandIconButtonStyle = _a.expandIconButtonStyle,\n          expandIconStyle = _a.expandIconStyle,\n          noExpandIconStyle = _a.noExpandIconStyle;\n      return React.createElement(ExpandIcon, {\n        isFolder: isFolder,\n        disable: !isCollapsible,\n        iconName: collapsedArrowIcon,\n        iconClassName: expandIconStyle,\n        buttonClassName: expandIconButtonStyle,\n        noExpandClassName: noExpandIconStyle,\n        onClick: _this._onExpandIconClicked\n      });\n    };\n\n    _this._onRenderContextualMenu = function (menuProps) {\n      var _a = _this.props,\n          itemKey = _a.itemKey,\n          onRenderContextualMenu = _a.onRenderContextualMenu;\n      return onRenderContextualMenu ? onRenderContextualMenu(itemKey, menuProps) : React.createElement(ContextualMenu, __assign({}, menuProps));\n    };\n\n    _this._getAriaExpanded = function () {\n      var _a = _this.props,\n          isFolder = _a.isFolder,\n          isExpanded = _a.isExpanded;\n      return isFolder ? !!isExpanded : undefined;\n    };\n\n    _this._getCommands = function () {\n      var _a = _this.props,\n          itemKey = _a.itemKey,\n          getCommands = _a.getCommands;\n      return getCommands(itemKey);\n    };\n\n    _this._handleNodeKeyDown = function (event) {\n      var _a = _this.props,\n          itemKey = _a.itemKey,\n          isFolder = _a.isFolder,\n          onExpandToggled = _a.onExpandToggled,\n          onItemKeyDown = _a.onItemKeyDown,\n          isExpanded = _a.isExpanded,\n          isSelected = _a.isSelected;\n      var contextMenuFocused = document.activeElement.classList.contains(contextMenuButtonClass);\n\n      if (!contextMenuFocused && onItemKeyDown) {\n        onItemKeyDown(itemKey, event);\n      }\n\n      if (event.keyCode === KeyCodes.f10 && event.shiftKey) {\n        _this._showContextMenu();\n\n        event.stopPropagation();\n        event.preventDefault();\n      } else if (event.keyCode === KeyCodes.left) {\n        if (isFolder && isExpanded) {\n          onExpandToggled(itemKey);\n          event.stopPropagation();\n          event.preventDefault();\n        }\n      } else if (event.keyCode === KeyCodes.right) {\n        if (isFolder && !isExpanded) {\n          onExpandToggled(itemKey);\n          event.stopPropagation();\n          event.preventDefault();\n        }\n      } else if (event.keyCode === KeyCodes.enter || event.keyCode === KeyCodes.space) {\n        event.stopPropagation();\n        event.preventDefault();\n\n        if (contextMenuFocused) {\n          _this._showContextMenu();\n        } else {\n          _this._onNodeSelected(event);\n        }\n      } else if (event.keyCode === KeyCodes.tab && isSelected) {\n        // Without this there is no way to access the context menu via normal use of the keyboard.\n        // You would still be able to with f10 + shiftKey, but, from feed back from the accessibility\n        // team that is not sufficient.\n        if (!contextMenuFocused) {\n          event.stopPropagation();\n          event.preventDefault();\n\n          _this.contextMenuRef.current._button.current.focus();\n        }\n      }\n    };\n\n    _this._onExpandIconClicked = function (event) {\n      _this.props.onExpandToggled(_this.props.itemKey);\n    };\n\n    _this._onNodeDoubleClicked = function (event) {\n      if (!event.ctrlKey && !event.shiftKey) {\n        var itemKey = _this.props.itemKey;\n\n        _this.props.onDoubleClicked(itemKey);\n      }\n    };\n\n    _this._onNodeSelected = function (event) {\n      var itemKey = _this.props.itemKey;\n\n      _this.props.onSelected(itemKey, event.ctrlKey ? SelectionType.Toggle : event.shiftKey ? SelectionType.Block : SelectionType.Single);\n    };\n\n    _this._onContextMenu = function (ev) {\n      // Prevent propagation of the event, since we're handling it here.\n      ev.stopPropagation();\n      ev.preventDefault();\n\n      _this._toggleShowMenu({\n        x: ev.clientX,\n        y: ev.clientY\n      });\n    };\n\n    _this._onMenuButtonClick = function (ev) {\n      // Prevent propagation of the event, since we're handling it here.\n      ev.stopPropagation();\n      ev.preventDefault();\n\n      _this._toggleShowMenu();\n    };\n\n    _this._toggleShowMenu = function (point) {\n      if (!_this.state.isContextualMenuOpen) {\n        // Trigger the normal left-click behavior\n        _this._showContextMenu(point);\n      } else {\n        // Trigger the normal dismiss behavior\n        _this._dismissContextMenu();\n      }\n    };\n\n    _this._showContextMenu = function (point) {\n      if (_this.props.isDisabled && _this._supportsContextualMenu) {\n        return;\n      }\n\n      _this.setState({\n        items: _this._getCommands(),\n        isContextualMenuOpen: true,\n        contextualMenuTargetPoint: point,\n        menuOpenedForItemKey: _this.props.itemKey\n      });\n    };\n\n    _this._dismissContextMenu = function () {\n      if (!_this.state.isContextualMenuOpen) {\n        return;\n      }\n\n      _this.setState({\n        items: [],\n        isContextualMenuOpen: false,\n        contextualMenuTargetPoint: undefined,\n        menuOpenedForItemKey: undefined\n      });\n    };\n\n    _this.contextMenuRef = React.createRef();\n    _this.state = TreeNode._getStateFromProps(props, {\n      contextualMenuTargetPoint: undefined,\n      isContextualMenuOpen: false,\n      menuOpenedForItemKey: undefined,\n      items: []\n    });\n    return _this;\n  }\n\n  TreeNode._getStateFromProps = function (nextProps, prevState) {\n    // If the menu is open and the item changed, close the menu.\n    if (prevState.isContextualMenuOpen && nextProps.itemKey !== prevState.menuOpenedForItemKey) {\n      return {\n        contextualMenuTargetPoint: undefined,\n        isContextualMenuOpen: false,\n        menuOpenedForItemKey: undefined,\n        items: []\n      };\n    }\n\n    return prevState;\n  };\n\n  Object.defineProperty(TreeNode.prototype, \"_supportsContextualMenu\", {\n    get: function () {\n      var _a = this.props,\n          hasCommands = _a.hasCommands,\n          getCommands = _a.getCommands;\n      return hasCommands && !!getCommands;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  TreeNode.getDerivedStateFromProps = function (nextProps, prevState) {\n    if (!prevState) {\n      return null;\n    }\n\n    return TreeNode._getStateFromProps(nextProps, prevState);\n  };\n\n  TreeNode.prototype.render = function () {\n    var _a = this.props,\n        itemKey = _a.itemKey,\n        onRenderItemContainer = _a.onRenderItemContainer;\n\n    if (onRenderItemContainer) {\n      return onRenderItemContainer(itemKey, this._onRenderItemContainer);\n    }\n\n    return this._onRenderItemContainer();\n  };\n\n  return TreeNode;\n}(React.Component);\n\nexport { TreeNode };","map":{"version":3,"sources":["../../../../src/components/Tree/TreeNode/TreeNode.tsx"],"names":[],"mappings":"AAAA;;AAEG;;AAEH,SACE,cADF,EAEE,eAFF,QAKO,oCALP;AAMA,SAAS,WAAT,QAA4B,6BAA5B;AACA,SAAiB,QAAjB,QAAiC,+BAAjC;AACA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AAEA,SAAS,oBAAT,QAAqC,8CAArC;AACA,SAAS,UAAT,QAA2B,0BAA3B;AACA,SAAS,QAAT,QAAyB,sBAAzB;AACA,SAAS,oBAAT,QAAqC,8CAArC;AACA,SAAS,aAAT,QAA8B,eAA9B;AASA,IAAM,sBAAsB,GAAG,oBAA/B;;AAEA,IAAA,QAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA8B,EAAA,SAAA,CAAA,QAAA,EAAA,MAAA,CAAA;;AAqB5B,WAAA,QAAA,CAAmB,KAAnB,EAAwC;AAAxC,QAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,KAAN,KAAY,IADd;;AA6BQ,IAAA,KAAA,CAAA,sBAAA,GAAyB,YAAA;AACzB,UAAA,EAAA,GAuBF,KAAI,CAAC,KAvBH;AAAA,UACJ,SAAS,GAAA,EAAA,CAAA,SADL;AAAA,UAEJ,SAAS,GAAA,EAAA,CAAA,SAFL;AAAA,UAGJ,iBAAiB,GAAA,EAAA,CAAA,iBAHb;AAAA,UAIJ,aAAa,GAAA,EAAA,CAAA,aAJT;AAAA,UAKJ,UAAU,GAAA,EAAA,CAAA,UALN;AAAA,UAMJ,WAAW,GAAA,EAAA,CAAA,WANP;AAAA,UAOJ,UAAU,GAAA,EAAA,CAAA,UAPN;AAAA,UAQJ,sBAAsB,GAAA,EAAA,CAAA,sBARlB;AAAA,UASJ,aAAa,GAAA,EAAA,CAAA,aATT;AAAA,UAUJ,OAAO,GAAA,EAAA,CAAA,OAVH;AAAA,UAWJ,SAAS,GAAA,EAAA,CAAA,SAXL;AAAA,UAYJ,KAAK,GAAA,EAAA,CAAA,KAZD;AAAA,UAaJ,KAAK,GAAA,EAAA,CAAA,KAbD;AAAA,UAcJ,qBAAqB,GAAA,EAAA,CAAA,qBAdjB;AAAA,UAeJ,uBAAuB,GAAA,EAAA,CAAA,uBAfnB;AAAA,UAgBJ,mBAAmB,GAAA,EAAA,CAAA,mBAhBf;AAAA,UAiBJ,eAAe,GAAA,EAAA,CAAA,eAjBX;AAAA,UAkBJ,qBAAqB,GAAA,EAAA,CAAA,qBAlBjB;AAAA,UAmBJ,eAAe,GAAA,EAAA,CAAA,eAnBX;AAAA,UAoBJ,kBAAkB,GAAA,EAAA,CAAA,kBApBd;AAAA,UAqBJ,iBAAiB,GAAA,EAAA,CAAA,iBArBb;AAAA,UAsBJ,OAAO,GAAA,EAAA,CAAA,OAtBH;AAyBA,UAAA,EAAA,GAA6D,KAAI,CAAC,KAAlE;AAAA,UAAE,yBAAyB,GAAA,EAAA,CAAA,yBAA3B;AAAA,UAA6B,oBAAoB,GAAA,EAAA,CAAA,oBAAjD;AAAA,UAAmD,KAAK,GAAA,EAAA,CAAA,KAAxD;AAEN,UAAM,cAAc,GAAG,CAAC,CAAC,yBAAzB;AACA,UAAM,aAAa,GAAG,SAAS,GAAG,SAAH,GAAe,KAAK,IAAI,OAAvD;AACA,UAAM,6BAA6B,GAAG,CAAC,qBAAD,GAAyB,EAAzB,GAA8B,qBAApE;AACA,UAAM,sBAAsB,GAAG,KAAI,CAAC,uBAApC;AAEA,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,QAAA,SAAS,EAAE,SADb;AAEE,QAAA,IAAI,EAAE,UAFR;AAEkB,yBACD,UAHjB;AAG2B,sBACb,KAAK,GAAG,CAJtB;AAIuB,yBACN,KAAI,CAAC,gBAAL,EALjB;AAKwC,yBACvB,UANjB;AAM2B,sBACb,aAPd;AAO2B,wBACX,OAAO,KAAK,SAAZ,GAAwB,SAAxB,GAAoC,OARpD;AAQ2D,yBAEvD,aAAa,KAAK,SAAlB,GAA8B,SAA9B,GAA0C,aAAa,GAAG;AAAE;AAVhE;AAU2F,wCAE3D,IAZhC;AAYoC,uCACL,IAb/B;AAamC,6BACd,WAdrB;AAeE,QAAA,SAAS,EAAE,KAAI,CAAC,kBAflB;AAgBE,QAAA,aAAa,EAAE,CAAC,UAAD,GAAc,KAAI,CAAC,oBAAnB,GAA0C,SAhB3D;AAiBE,QAAA,OAAO,EAAE,KAAI,CAAC,eAjBhB;AAkBE,QAAA,aAAa,EAAE,KAAI,CAAC;AAlBtB,OAAA,EAoBE,KAAA,CAAA,aAAA,CAAC,oBAAD,EAAqB;AAAC,QAAA,KAAK,EAAE,KAAR;AAAe,QAAA,SAAS,EAAE;AAA1B,OAArB,CApBF,EAqBG,kBAAkB,GACf,kBAAkB,CAAC,OAAD,EAAU,KAAI,CAAC,mBAAf,CADH,GAEf,KAAI,CAAC,mBAAL,EAvBN,EAwBE,KAAA,CAAA,aAAA,CAAC,QAAD,EAAS;AACP,QAAA,SAAS,EAAE,SADJ;AAEP,QAAA,KAAK,EAAE,aAFA;AAGP,QAAA,sBAAsB,EAAE,sBAHjB;AAIP,QAAA,aAAa,EAAE,aAJR;AAKP,QAAA,eAAe,EAAE;AALV,OAAT,CAxBF,EA+BG,iBAAiB,GAAG,iBAAiB,CAAC,OAAD,EAAU,KAAI,CAAC,kBAAf,CAApB,GAAyD,KAAI,CAAC,kBAAL,EA/B7E,EAgCG,sBAAsB,IACrB,KAAA,CAAA,aAAA,CAAC,oBAAD,EAAqB;AACnB,QAAA,QAAQ,EAAE,UADS;AAEnB,QAAA,KAAK,EAAE,KAFY;AAGnB,QAAA,MAAM,EAAE,oBAAoB,IAAI,CAAC,cAHd;AAInB,QAAA,OAAO,EAAE,KAAI,CAAC,kBAJK;AAKnB,QAAA,SAAS,EAAE,KAAI,CAAC,mBALG;AAMnB,QAAA,eAAe,EAAE,eAAe,CAAC,cANd;AAOnB,QAAA,SAAS,EAAE;AACT,UAAA,QAAQ,EAAE,MADD;AAET,UAAA,SAAS,EAAE;AAFF,SAPQ;AAWnB,QAAA,SAAS,EAAE,6BAXQ;AAYnB,QAAA,eAAe,EAAE,WAAW,CAAC,eAAD,EAAkB,qBAAlB,CAZT;AAanB,QAAA,aAAa,EAAE,WAAW,CAAC,eAAD,EAAkB,mBAAlB,CAbP;AAcnB,QAAA,iBAAiB,EAAE,uBAdA;AAenB,QAAA,sBAAsB,EAAE,KAAI,CAAC,uBAfV;AAgBnB,QAAA,GAAG,EAAE,KAAI,CAAC;AAhBS,OAArB,CAjCJ,EAoDG,sBAAsB,IACrB,oBADD,IAEC,cAFD,IAGC,KAAI,CAAC,uBAAL,CAA6B;AAC3B,QAAA,KAAK,EAAE,KADoB;AAE3B,QAAA,SAAS,EAAE,KAAI,CAAC,mBAFW;AAG3B,QAAA,kBAAkB,EAAE,IAHO;AAI3B,QAAA,QAAQ,EAAE,CAJiB;AAK3B,QAAA,eAAe,EAAE,eAAe,CAAC,cALN;AAM3B,QAAA,aAAa,EAAE,KANY;AAO3B,QAAA,SAAS,EAAE,aAPgB;AAQ3B,QAAA,MAAM,EAAE;AARmB,OAA7B,CAvDJ,CADF;AAoED,KArGO;;AAuGA,IAAA,KAAA,CAAA,yBAAA,GAA4B,YAAA;AAC1B,UAAA,KAAK,GAAK,KAAI,CAAC,KAAL,CAAL,KAAL;AAER,aAAO,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EAAG,KAAH,CAAP;AACD,KAJO;;AAMA,IAAA,KAAA,CAAA,kBAAA,GAAqB,YAAA;AACrB,UAAA,EAAA,GAA+D,KAAI,CAAC,KAApE;AAAA,UAAE,OAAO,GAAA,EAAA,CAAA,OAAT;AAAA,UAAW,KAAK,GAAA,EAAA,CAAA,KAAhB;AAAA,UAAkB,cAAc,GAAA,EAAA,CAAA,cAAhC;AAAA,UAAkC,wBAAwB,GAAA,EAAA,CAAA,wBAA1D;AAEN,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,QAAA,KAAK,EAAE,KAAZ;AAAmB,QAAA,SAAS,EAAE,cAA9B;AAA4C,yBAAiB;AAA7D,OAAA,EACG,wBAAwB,GAAG,wBAAwB,CAAC,OAAD,EAAU,KAAI,CAAC,yBAAf,CAA3B,GAAuE,KADlG,CADF;AAKD,KARO;;AAUA,IAAA,KAAA,CAAA,mBAAA,GAAsB,YAAA;AACtB,UAAA,EAAA,GAOF,KAAI,CAAC,KAPH;AAAA,UACJ,QAAQ,GAAA,EAAA,CAAA,QADJ;AAAA,UAEJ,aAAa,GAAA,EAAA,CAAA,aAFT;AAAA,UAGJ,kBAAkB,GAAA,EAAA,CAAA,kBAHd;AAAA,UAIJ,qBAAqB,GAAA,EAAA,CAAA,qBAJjB;AAAA,UAKJ,eAAe,GAAA,EAAA,CAAA,eALX;AAAA,UAMJ,iBAAiB,GAAA,EAAA,CAAA,iBANb;AASN,aACE,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW;AACT,QAAA,QAAQ,EAAE,QADD;AAET,QAAA,OAAO,EAAE,CAAC,aAFD;AAGT,QAAA,QAAQ,EAAE,kBAHD;AAIT,QAAA,aAAa,EAAE,eAJN;AAKT,QAAA,eAAe,EAAE,qBALR;AAMT,QAAA,iBAAiB,EAAE,iBANV;AAOT,QAAA,OAAO,EAAE,KAAI,CAAC;AAPL,OAAX,CADF;AAWD,KArBO;;AAuBA,IAAA,KAAA,CAAA,uBAAA,GAA0B,UAAC,SAAD,EAAgC;AAC1D,UAAA,EAAA,GAAsC,KAAI,CAAC,KAA3C;AAAA,UAAE,OAAO,GAAA,EAAA,CAAA,OAAT;AAAA,UAAW,sBAAsB,GAAA,EAAA,CAAA,sBAAjC;AAEN,aAAO,sBAAsB,GAC3B,sBAAsB,CAAC,OAAD,EAAU,SAAV,CADK,GAG3B,KAAA,CAAA,aAAA,CAAC,cAAD,EAAe,QAAA,CAAA,EAAA,EAAK,SAAL,CAAf,CAHF;AAKD,KARO;;AAUA,IAAA,KAAA,CAAA,gBAAA,GAAmB,YAAA;AACnB,UAAA,EAAA,GAA2B,KAAI,CAAC,KAAhC;AAAA,UAAE,QAAQ,GAAA,EAAA,CAAA,QAAV;AAAA,UAAY,UAAU,GAAA,EAAA,CAAA,UAAtB;AAEN,aAAO,QAAQ,GAAG,CAAC,CAAC,UAAL,GAAkB,SAAjC;AACD,KAJO;;AAMA,IAAA,KAAA,CAAA,YAAA,GAAe,YAAA;AACf,UAAA,EAAA,GAA2B,KAAI,CAAC,KAAhC;AAAA,UAAE,OAAO,GAAA,EAAA,CAAA,OAAT;AAAA,UAAW,WAAW,GAAA,EAAA,CAAA,WAAtB;AACN,aAAO,WAAW,CAAC,OAAD,CAAlB;AACD,KAHO;;AAKA,IAAA,KAAA,CAAA,kBAAA,GAAqB,UAAC,KAAD,EAAwC;AAC7D,UAAA,EAAA,GAAgF,KAAI,CAAC,KAArF;AAAA,UAAE,OAAO,GAAA,EAAA,CAAA,OAAT;AAAA,UAAW,QAAQ,GAAA,EAAA,CAAA,QAAnB;AAAA,UAAqB,eAAe,GAAA,EAAA,CAAA,eAApC;AAAA,UAAsC,aAAa,GAAA,EAAA,CAAA,aAAnD;AAAA,UAAqD,UAAU,GAAA,EAAA,CAAA,UAA/D;AAAA,UAAiE,UAAU,GAAA,EAAA,CAAA,UAA3E;AAEN,UAAM,kBAAkB,GAAG,QAAQ,CAAC,aAAT,CAAuB,SAAvB,CAAiC,QAAjC,CAA0C,sBAA1C,CAA3B;;AAEA,UAAI,CAAC,kBAAD,IAAuB,aAA3B,EAA0C;AACxC,QAAA,aAAa,CAAC,OAAD,EAAU,KAAV,CAAb;AACD;;AAED,UAAI,KAAK,CAAC,OAAN,KAAkB,QAAQ,CAAC,GAA3B,IAAkC,KAAK,CAAC,QAA5C,EAAsD;AACpD,QAAA,KAAI,CAAC,gBAAL;;AACA,QAAA,KAAK,CAAC,eAAN;AACA,QAAA,KAAK,CAAC,cAAN;AACD,OAJD,MAIO,IAAI,KAAK,CAAC,OAAN,KAAkB,QAAQ,CAAC,IAA/B,EAAqC;AAC1C,YAAI,QAAQ,IAAI,UAAhB,EAA4B;AAC1B,UAAA,eAAe,CAAC,OAAD,CAAf;AACA,UAAA,KAAK,CAAC,eAAN;AACA,UAAA,KAAK,CAAC,cAAN;AACD;AACF,OANM,MAMA,IAAI,KAAK,CAAC,OAAN,KAAkB,QAAQ,CAAC,KAA/B,EAAsC;AAC3C,YAAI,QAAQ,IAAI,CAAC,UAAjB,EAA6B;AAC3B,UAAA,eAAe,CAAC,OAAD,CAAf;AACA,UAAA,KAAK,CAAC,eAAN;AACA,UAAA,KAAK,CAAC,cAAN;AACD;AACF,OANM,MAMA,IAAI,KAAK,CAAC,OAAN,KAAkB,QAAQ,CAAC,KAA3B,IAAoC,KAAK,CAAC,OAAN,KAAkB,QAAQ,CAAC,KAAnE,EAA0E;AAC/E,QAAA,KAAK,CAAC,eAAN;AACA,QAAA,KAAK,CAAC,cAAN;;AACA,YAAI,kBAAJ,EAAwB;AACtB,UAAA,KAAI,CAAC,gBAAL;AACD,SAFD,MAEO;AACL,UAAA,KAAI,CAAC,eAAL,CAAqB,KAArB;AACD;AACF,OARM,MAQA,IAAI,KAAK,CAAC,OAAN,KAAkB,QAAQ,CAAC,GAA3B,IAAkC,UAAtC,EAAkD;AACvD;AACA;AACA;AACA,YAAI,CAAC,kBAAL,EAAyB;AACvB,UAAA,KAAK,CAAC,eAAN;AACA,UAAA,KAAK,CAAC,cAAN;;AACA,UAAA,KAAI,CAAC,cAAL,CAAoB,OAApB,CAA4B,OAA5B,CAAoC,OAApC,CAA4C,KAA5C;AACD;AACF;AACF,KA3CO;;AA6CA,IAAA,KAAA,CAAA,oBAAA,GAAuB,UAAC,KAAD,EAAqC;AAClE,MAAA,KAAI,CAAC,KAAL,CAAW,eAAX,CAA2B,KAAI,CAAC,KAAL,CAAW,OAAtC;AACD,KAFO;;AAIA,IAAA,KAAA,CAAA,oBAAA,GAAuB,UAAC,KAAD,EAAqC;AAClE,UAAI,CAAC,KAAK,CAAC,OAAP,IAAkB,CAAC,KAAK,CAAC,QAA7B,EAAuC;AAC7B,YAAA,OAAO,GAAK,KAAI,CAAC,KAAL,CAAL,OAAP;;AACR,QAAA,KAAI,CAAC,KAAL,CAAW,eAAX,CAA2B,OAA3B;AACD;AACF,KALO;;AAOA,IAAA,KAAA,CAAA,eAAA,GAAkB,UACxB,KADwB,EAC+C;AAE/D,UAAA,OAAO,GAAK,KAAI,CAAC,KAAL,CAAL,OAAP;;AACR,MAAA,KAAI,CAAC,KAAL,CAAW,UAAX,CACE,OADF,EAEE,KAAK,CAAC,OAAN,GAAgB,aAAa,CAAC,MAA9B,GAAuC,KAAK,CAAC,QAAN,GAAiB,aAAa,CAAC,KAA/B,GAAuC,aAAa,CAAC,MAF9F;AAID,KARO;;AAUA,IAAA,KAAA,CAAA,cAAA,GAAiB,UAAC,EAAD,EAAkC;AACzD;AACA,MAAA,EAAE,CAAC,eAAH;AACA,MAAA,EAAE,CAAC,cAAH;;AAEA,MAAA,KAAI,CAAC,eAAL,CAAqB;AAAE,QAAA,CAAC,EAAE,EAAE,CAAC,OAAR;AAAiB,QAAA,CAAC,EAAE,EAAE,CAAC;AAAvB,OAArB;AACD,KANO;;AAQA,IAAA,KAAA,CAAA,kBAAA,GAAqB,UAAC,EAAD,EAAwC;AACnE;AACA,MAAA,EAAE,CAAC,eAAH;AACA,MAAA,EAAE,CAAC,cAAH;;AAEA,MAAA,KAAI,CAAC,eAAL;AACD,KANO;;AAQA,IAAA,KAAA,CAAA,eAAA,GAAkB,UAAC,KAAD,EAAe;AACvC,UAAI,CAAC,KAAI,CAAC,KAAL,CAAW,oBAAhB,EAAsC;AACpC;AACA,QAAA,KAAI,CAAC,gBAAL,CAAsB,KAAtB;AACD,OAHD,MAGO;AACL;AACA,QAAA,KAAI,CAAC,mBAAL;AACD;AACF,KARO;;AAUA,IAAA,KAAA,CAAA,gBAAA,GAAmB,UAAC,KAAD,EAAe;AACxC,UAAI,KAAI,CAAC,KAAL,CAAW,UAAX,IAAyB,KAAI,CAAC,uBAAlC,EAA2D;AACzD;AACD;;AAED,MAAA,KAAI,CAAC,QAAL,CAAc;AACZ,QAAA,KAAK,EAAE,KAAI,CAAC,YAAL,EADK;AAEZ,QAAA,oBAAoB,EAAE,IAFV;AAGZ,QAAA,yBAAyB,EAAE,KAHf;AAIZ,QAAA,oBAAoB,EAAE,KAAI,CAAC,KAAL,CAAW;AAJrB,OAAd;AAMD,KAXO;;AAaA,IAAA,KAAA,CAAA,mBAAA,GAAsB,YAAA;AAC5B,UAAI,CAAC,KAAI,CAAC,KAAL,CAAW,oBAAhB,EAAsC;AACpC;AACD;;AAED,MAAA,KAAI,CAAC,QAAL,CAAc;AACZ,QAAA,KAAK,EAAE,EADK;AAEZ,QAAA,oBAAoB,EAAE,KAFV;AAGZ,QAAA,yBAAyB,EAAE,SAHf;AAIZ,QAAA,oBAAoB,EAAE;AAJV,OAAd;AAMD,KAXO;;AAvSN,IAAA,KAAI,CAAC,cAAL,GAAsB,KAAK,CAAC,SAAN,EAAtB;AAEA,IAAA,KAAI,CAAC,KAAL,GAAa,QAAQ,CAAC,kBAAT,CAA4B,KAA5B,EAAmC;AAC9C,MAAA,yBAAyB,EAAE,SADmB;AAE9C,MAAA,oBAAoB,EAAE,KAFwB;AAG9C,MAAA,oBAAoB,EAAE,SAHwB;AAI9C,MAAA,KAAK,EAAE;AAJuC,KAAnC,CAAb;;AAMD;;AA7Bc,EAAA,QAAA,CAAA,kBAAA,GAAf,UAAkC,SAAlC,EAA6D,SAA7D,EAAsF;AACpF;AACA,QAAI,SAAS,CAAC,oBAAV,IAAkC,SAAS,CAAC,OAAV,KAAsB,SAAS,CAAC,oBAAtE,EAA4F;AAC1F,aAAO;AACL,QAAA,yBAAyB,EAAE,SADtB;AAEL,QAAA,oBAAoB,EAAE,KAFjB;AAGL,QAAA,oBAAoB,EAAE,SAHjB;AAIL,QAAA,KAAK,EAAE;AAJF,OAAP;AAMD;;AAED,WAAO,SAAP;AACD,GAZc;;AAcf,EAAA,MAAA,CAAA,cAAA,CAAY,QAAA,CAAA,SAAZ,EAAY,yBAAZ,EAAmC;SAAnC,YAAA;AACQ,UAAA,EAAA,GAA+B,KAAK,KAApC;AAAA,UAAE,WAAW,GAAA,EAAA,CAAA,WAAb;AAAA,UAAe,WAAW,GAAA,EAAA,CAAA,WAA1B;AACN,aAAO,WAAW,IAAI,CAAC,CAAC,WAAxB;AACD,KAHkC;qBAAA;;AAAA,GAAnC;;AAiBc,EAAA,QAAA,CAAA,wBAAA,GAAd,UAAuC,SAAvC,EAAkE,SAAlE,EAA2F;AACzF,QAAI,CAAC,SAAL,EAAgB;AACd,aAAO,IAAP;AACD;;AACD,WAAO,QAAQ,CAAC,kBAAT,CAA4B,SAA5B,EAAuC,SAAvC,CAAP;AACD,GALa;;AAOP,EAAA,QAAA,CAAA,SAAA,CAAA,MAAA,GAAP,YAAA;AACQ,QAAA,EAAA,GAAqC,KAAK,KAA1C;AAAA,QAAE,OAAO,GAAA,EAAA,CAAA,OAAT;AAAA,QAAW,qBAAqB,GAAA,EAAA,CAAA,qBAAhC;;AAEN,QAAI,qBAAJ,EAA2B;AACzB,aAAO,qBAAqB,CAAC,OAAD,EAAU,KAAK,sBAAf,CAA5B;AACD;;AAED,WAAO,KAAK,sBAAL,EAAP;AACD,GARM;;AAkST,SAAA,QAAA;AAAC,CA1UD,CAA8B,KAAK,CAAC,SAApC,CAAA","sourceRoot":"","sourcesContent":["/*!\n * Copyright (C) Microsoft Corporation. All rights reserved.\n */\nimport { __assign, __extends } from \"tslib\";\nimport { ContextualMenu, DirectionalHint } from '@fluentui/react/lib/ContextualMenu';\nimport { mergeStyles } from '@fluentui/react/lib/Styling';\nimport { KeyCodes } from '@fluentui/react/lib/Utilities';\nimport * as React from 'react';\nimport { ContextualMenuButton } from '../ContextualMenuButton/ContextualMenuButton';\nimport { ExpandIcon } from '../ExpandIcon/ExpandIcon';\nimport { ItemIcon } from '../ItemIcon/ItemIcon';\nimport { NodeLevelIndentation } from '../NodeLevelIndentation/NodeLevelIndentation';\nimport { SelectionType } from '../Tree.types';\nvar contextMenuButtonClass = 'ba-Tree-MenuButton';\nvar TreeNode = /** @class */ (function (_super) {\n    __extends(TreeNode, _super);\n    function TreeNode(props) {\n        var _this = _super.call(this, props) || this;\n        _this._onRenderItemContainer = function () {\n            var _a = _this.props, ariaLabel = _a.ariaLabel, iconProps = _a.iconProps, indentSpacerStyle = _a.indentSpacerStyle, indexInParent = _a.indexInParent, isDisabled = _a.isDisabled, isFocusable = _a.isFocusable, isSelected = _a.isSelected, itemIconContainerStyle = _a.itemIconContainerStyle, itemIconStyle = _a.itemIconStyle, itemKey = _a.itemKey, itemStyle = _a.itemStyle, label = _a.label, level = _a.level, menuButtonClosedStyle = _a.menuButtonClosedStyle, menuButtonDisabledStyle = _a.menuButtonDisabledStyle, menuButtonOpenStyle = _a.menuButtonOpenStyle, menuButtonStyle = _a.menuButtonStyle, moreCommandsAriaLabel = _a.moreCommandsAriaLabel, noItemIconStyle = _a.noItemIconStyle, onRenderExpandIcon = _a.onRenderExpandIcon, onRenderItemLabel = _a.onRenderItemLabel, setSize = _a.setSize;\n            var _b = _this.state, contextualMenuTargetPoint = _b.contextualMenuTargetPoint, isContextualMenuOpen = _b.isContextualMenuOpen, items = _b.items;\n            var useTargetPoint = !!contextualMenuTargetPoint;\n            var itemAriaLabel = ariaLabel ? ariaLabel : label || itemKey;\n            var contextualMenuButtonAriaLabel = !moreCommandsAriaLabel ? '' : moreCommandsAriaLabel;\n            var supportsContextualMenu = _this._supportsContextualMenu;\n            return (React.createElement(\"div\", { className: itemStyle, role: 'treeitem', \"aria-disabled\": isDisabled, \"aria-level\": level + 1, \"aria-expanded\": _this._getAriaExpanded(), \"aria-selected\": isSelected, \"aria-label\": itemAriaLabel, \"aria-setsize\": setSize === undefined ? undefined : setSize, \"aria-posinset\": indexInParent === undefined ? undefined : indexInParent + 1 /* PosInSet is 1-indexed */, \"data-allow-keyboard-shortcut\": true, \"data-disable-click-on-enter\": true, \"data-is-focusable\": isFocusable, onKeyDown: _this._handleNodeKeyDown, onDoubleClick: !isDisabled ? _this._onNodeDoubleClicked : undefined, onClick: _this._onNodeSelected, onContextMenu: _this._onContextMenu },\n                React.createElement(NodeLevelIndentation, { level: level, className: indentSpacerStyle }),\n                onRenderExpandIcon\n                    ? onRenderExpandIcon(itemKey, _this._onRenderExpandIcon)\n                    : _this._onRenderExpandIcon(),\n                React.createElement(ItemIcon, { iconProps: iconProps, label: itemAriaLabel, itemIconContainerStyle: itemIconContainerStyle, itemIconStyle: itemIconStyle, noItemIconStyle: noItemIconStyle }),\n                onRenderItemLabel ? onRenderItemLabel(itemKey, _this._onRenderItemLabel) : _this._onRenderItemLabel(),\n                supportsContextualMenu && (React.createElement(ContextualMenuButton, { disabled: isDisabled, items: items, isOpen: isContextualMenuOpen && !useTargetPoint, onClick: _this._onMenuButtonClick, onDismiss: _this._dismissContextMenu, directionalHint: DirectionalHint.bottomLeftEdge, iconProps: {\n                        iconName: 'More',\n                        ariaLabel: contextualMenuButtonAriaLabel\n                    }, ariaLabel: contextualMenuButtonAriaLabel, menuClosedStyle: mergeStyles(menuButtonStyle, menuButtonClosedStyle), menuOpenStyle: mergeStyles(menuButtonStyle, menuButtonOpenStyle), menuDisabledStyle: menuButtonDisabledStyle, onRenderContextualMenu: _this._onRenderContextualMenu, ref: _this.contextMenuRef })),\n                supportsContextualMenu &&\n                    isContextualMenuOpen &&\n                    useTargetPoint &&\n                    _this._onRenderContextualMenu({\n                        items: items,\n                        onDismiss: _this._dismissContextMenu,\n                        shouldFocusOnMount: true,\n                        gapSpace: 5,\n                        directionalHint: DirectionalHint.bottomLeftEdge,\n                        isBeakVisible: false,\n                        ariaLabel: itemAriaLabel,\n                        target: contextualMenuTargetPoint\n                    })));\n        };\n        _this._onRenderItemLabelContent = function () {\n            var label = _this.props.label;\n            return React.createElement(React.Fragment, null, label);\n        };\n        _this._onRenderItemLabel = function () {\n            var _a = _this.props, itemKey = _a.itemKey, label = _a.label, itemLabelStyle = _a.itemLabelStyle, onRenderItemLabelContent = _a.onRenderItemLabelContent;\n            return (React.createElement(\"div\", { title: label, className: itemLabelStyle, \"aria-readonly\": true }, onRenderItemLabelContent ? onRenderItemLabelContent(itemKey, _this._onRenderItemLabelContent) : label));\n        };\n        _this._onRenderExpandIcon = function () {\n            var _a = _this.props, isFolder = _a.isFolder, isCollapsible = _a.isCollapsible, collapsedArrowIcon = _a.collapsedArrowIcon, expandIconButtonStyle = _a.expandIconButtonStyle, expandIconStyle = _a.expandIconStyle, noExpandIconStyle = _a.noExpandIconStyle;\n            return (React.createElement(ExpandIcon, { isFolder: isFolder, disable: !isCollapsible, iconName: collapsedArrowIcon, iconClassName: expandIconStyle, buttonClassName: expandIconButtonStyle, noExpandClassName: noExpandIconStyle, onClick: _this._onExpandIconClicked }));\n        };\n        _this._onRenderContextualMenu = function (menuProps) {\n            var _a = _this.props, itemKey = _a.itemKey, onRenderContextualMenu = _a.onRenderContextualMenu;\n            return onRenderContextualMenu ? (onRenderContextualMenu(itemKey, menuProps)) : (React.createElement(ContextualMenu, __assign({}, menuProps)));\n        };\n        _this._getAriaExpanded = function () {\n            var _a = _this.props, isFolder = _a.isFolder, isExpanded = _a.isExpanded;\n            return isFolder ? !!isExpanded : undefined;\n        };\n        _this._getCommands = function () {\n            var _a = _this.props, itemKey = _a.itemKey, getCommands = _a.getCommands;\n            return getCommands(itemKey);\n        };\n        _this._handleNodeKeyDown = function (event) {\n            var _a = _this.props, itemKey = _a.itemKey, isFolder = _a.isFolder, onExpandToggled = _a.onExpandToggled, onItemKeyDown = _a.onItemKeyDown, isExpanded = _a.isExpanded, isSelected = _a.isSelected;\n            var contextMenuFocused = document.activeElement.classList.contains(contextMenuButtonClass);\n            if (!contextMenuFocused && onItemKeyDown) {\n                onItemKeyDown(itemKey, event);\n            }\n            if (event.keyCode === KeyCodes.f10 && event.shiftKey) {\n                _this._showContextMenu();\n                event.stopPropagation();\n                event.preventDefault();\n            }\n            else if (event.keyCode === KeyCodes.left) {\n                if (isFolder && isExpanded) {\n                    onExpandToggled(itemKey);\n                    event.stopPropagation();\n                    event.preventDefault();\n                }\n            }\n            else if (event.keyCode === KeyCodes.right) {\n                if (isFolder && !isExpanded) {\n                    onExpandToggled(itemKey);\n                    event.stopPropagation();\n                    event.preventDefault();\n                }\n            }\n            else if (event.keyCode === KeyCodes.enter || event.keyCode === KeyCodes.space) {\n                event.stopPropagation();\n                event.preventDefault();\n                if (contextMenuFocused) {\n                    _this._showContextMenu();\n                }\n                else {\n                    _this._onNodeSelected(event);\n                }\n            }\n            else if (event.keyCode === KeyCodes.tab && isSelected) {\n                // Without this there is no way to access the context menu via normal use of the keyboard.\n                // You would still be able to with f10 + shiftKey, but, from feed back from the accessibility\n                // team that is not sufficient.\n                if (!contextMenuFocused) {\n                    event.stopPropagation();\n                    event.preventDefault();\n                    _this.contextMenuRef.current._button.current.focus();\n                }\n            }\n        };\n        _this._onExpandIconClicked = function (event) {\n            _this.props.onExpandToggled(_this.props.itemKey);\n        };\n        _this._onNodeDoubleClicked = function (event) {\n            if (!event.ctrlKey && !event.shiftKey) {\n                var itemKey = _this.props.itemKey;\n                _this.props.onDoubleClicked(itemKey);\n            }\n        };\n        _this._onNodeSelected = function (event) {\n            var itemKey = _this.props.itemKey;\n            _this.props.onSelected(itemKey, event.ctrlKey ? SelectionType.Toggle : event.shiftKey ? SelectionType.Block : SelectionType.Single);\n        };\n        _this._onContextMenu = function (ev) {\n            // Prevent propagation of the event, since we're handling it here.\n            ev.stopPropagation();\n            ev.preventDefault();\n            _this._toggleShowMenu({ x: ev.clientX, y: ev.clientY });\n        };\n        _this._onMenuButtonClick = function (ev) {\n            // Prevent propagation of the event, since we're handling it here.\n            ev.stopPropagation();\n            ev.preventDefault();\n            _this._toggleShowMenu();\n        };\n        _this._toggleShowMenu = function (point) {\n            if (!_this.state.isContextualMenuOpen) {\n                // Trigger the normal left-click behavior\n                _this._showContextMenu(point);\n            }\n            else {\n                // Trigger the normal dismiss behavior\n                _this._dismissContextMenu();\n            }\n        };\n        _this._showContextMenu = function (point) {\n            if (_this.props.isDisabled && _this._supportsContextualMenu) {\n                return;\n            }\n            _this.setState({\n                items: _this._getCommands(),\n                isContextualMenuOpen: true,\n                contextualMenuTargetPoint: point,\n                menuOpenedForItemKey: _this.props.itemKey\n            });\n        };\n        _this._dismissContextMenu = function () {\n            if (!_this.state.isContextualMenuOpen) {\n                return;\n            }\n            _this.setState({\n                items: [],\n                isContextualMenuOpen: false,\n                contextualMenuTargetPoint: undefined,\n                menuOpenedForItemKey: undefined\n            });\n        };\n        _this.contextMenuRef = React.createRef();\n        _this.state = TreeNode._getStateFromProps(props, {\n            contextualMenuTargetPoint: undefined,\n            isContextualMenuOpen: false,\n            menuOpenedForItemKey: undefined,\n            items: []\n        });\n        return _this;\n    }\n    TreeNode._getStateFromProps = function (nextProps, prevState) {\n        // If the menu is open and the item changed, close the menu.\n        if (prevState.isContextualMenuOpen && nextProps.itemKey !== prevState.menuOpenedForItemKey) {\n            return {\n                contextualMenuTargetPoint: undefined,\n                isContextualMenuOpen: false,\n                menuOpenedForItemKey: undefined,\n                items: []\n            };\n        }\n        return prevState;\n    };\n    Object.defineProperty(TreeNode.prototype, \"_supportsContextualMenu\", {\n        get: function () {\n            var _a = this.props, hasCommands = _a.hasCommands, getCommands = _a.getCommands;\n            return hasCommands && !!getCommands;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    TreeNode.getDerivedStateFromProps = function (nextProps, prevState) {\n        if (!prevState) {\n            return null;\n        }\n        return TreeNode._getStateFromProps(nextProps, prevState);\n    };\n    TreeNode.prototype.render = function () {\n        var _a = this.props, itemKey = _a.itemKey, onRenderItemContainer = _a.onRenderItemContainer;\n        if (onRenderItemContainer) {\n            return onRenderItemContainer(itemKey, this._onRenderItemContainer);\n        }\n        return this._onRenderItemContainer();\n    };\n    return TreeNode;\n}(React.Component));\nexport { TreeNode };\n//# sourceMappingURL=TreeNode.js.map"]},"metadata":{},"sourceType":"module"}