{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\niagrawal\\\\Desktop\\\\microsoft work\\\\tree_dnd\\\\src\\\\TreeBasicUncontrolledExample.tsx\";\nimport { Tree } from '@business-app/fabric/lib/components/Tree';\nimport { mergeStyleSets } from '@fluentui/react/lib/Styling';\nimport * as React from 'react';\nimport { getFolderKeys } from '@business-app/fabric/lib/components/Tree/examples/Tree.Example.Data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class TreeBasicUncontrolledExample extends React.Component {\n  render() {\n    const items = produceItems;\n    const folderKeysSet = getFolderKeys(items);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: exampleStyles.exampleContainer,\n      children: /*#__PURE__*/_jsxDEV(Tree, {\n        items: items,\n        initialExpandedItemKeys: folderKeysSet,\n        strings: {\n          listAriaLabel: 'list',\n          moreCommandsAriaLabel: 'more commands'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this);\n  }\n\n}\nconst exampleStyles = mergeStyleSets({\n  exampleContainer: {\n    // 'display: flex' is important for the Tree to layout correctly.\n    display: 'flex',\n    // Just an example to prove that row direction also works for the Tree.\n    flexDirection: 'row',\n    width: 320,\n    height: 400,\n    userSelect: 'none'\n  }\n});\nexport var produceItems = [{\n  label: 'Fruits',\n  key: 'fruits',\n  isFolder: true,\n  level: 0,\n  setSize: 2,\n  indexInParent: 0 // iconProps: {iconName:'ChevronDown', color:'black'}\n\n}, {\n  label: 'Apples',\n  key: 'apples',\n  isFolder: true,\n  level: 1,\n  setSize: 0,\n  indexInParent: 0\n}, {\n  label: 'Granny Smith',\n  key: 'granny smith',\n  level: 2,\n  setSize: 2,\n  indexInParent: 0\n}, {\n  label: 'Red Delicious',\n  key: 'red delicious',\n  level: 2,\n  setSize: 2,\n  indexInParent: 1\n}, {\n  label: 'Vegetables',\n  key: 'vegetables',\n  isFolder: true,\n  level: 0,\n  setSize: 2,\n  indexInParent: 1\n}, {\n  label: 'Carrots',\n  key: 'carrots',\n  level: 1,\n  setSize: 3,\n  indexInParent: 0\n}, {\n  label: 'Cucumbers',\n  key: 'cucumbers',\n  level: 1,\n  setSize: 3,\n  indexInParent: 1\n}, {\n  label: 'Lettuce',\n  key: 'lettuce',\n  level: 1,\n  setSize: 3,\n  indexInParent: 2\n}];","map":{"version":3,"sources":["C:/Users/niagrawal/Desktop/microsoft work/tree_dnd/src/TreeBasicUncontrolledExample.tsx"],"names":["Tree","mergeStyleSets","React","getFolderKeys","TreeBasicUncontrolledExample","Component","render","items","produceItems","folderKeysSet","exampleStyles","exampleContainer","listAriaLabel","moreCommandsAriaLabel","display","flexDirection","width","height","userSelect","label","key","isFolder","level","setSize","indexInParent"],"mappings":"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","sourcesContent":["import { ITreeStyles, Tree } from '@business-app/fabric/lib/components/Tree';\r\nimport { mergeStyleSets } from '@fluentui/react/lib/Styling';\r\nimport * as React from 'react';\r\nimport { ITreeItem } from '@business-app/fabric/lib/components/Tree/Tree.types';\r\nimport { getFolderKeys } from '@business-app/fabric/lib/components/Tree/examples/Tree.Example.Data';\r\n\r\nexport class TreeBasicUncontrolledExample extends React.Component {\r\n    public render(): JSX.Element {\r\n      const items: ITreeItem[] = produceItems;\r\n      const folderKeysSet = getFolderKeys(items);\r\n  \r\n      return (\r\n        <div className={exampleStyles.exampleContainer}>\r\n          <Tree\r\n            items={items}\r\n            initialExpandedItemKeys={folderKeysSet}\r\n            strings={{\r\n              listAriaLabel: 'list',\r\n              moreCommandsAriaLabel: 'more commands'\r\n            }}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  const exampleStyles = mergeStyleSets({\r\n    exampleContainer: {\r\n      // 'display: flex' is important for the Tree to layout correctly.\r\n      display: 'flex',\r\n      // Just an example to prove that row direction also works for the Tree.\r\n      flexDirection: 'row',\r\n      width: 320,\r\n      height: 400,\r\n      userSelect: 'none'\r\n    }\r\n  });\r\n\r\n  export var produceItems: ITreeItem[] = [\r\n    {\r\n        label: 'Fruits',\r\n        key: 'fruits',\r\n        isFolder: true,\r\n        level: 0,\r\n        setSize: 2,\r\n        indexInParent: 0\r\n        // iconProps: {iconName:'ChevronDown', color:'black'}\r\n    },\r\n    {\r\n        label: 'Apples',\r\n        key: 'apples',\r\n        isFolder: true,\r\n        level: 1,\r\n        setSize: 0,\r\n        indexInParent: 0\r\n    },\r\n    {\r\n        label: 'Granny Smith',\r\n        key: 'granny smith',\r\n        level: 2,\r\n        setSize: 2,\r\n        indexInParent: 0\r\n    },\r\n    {\r\n        label: 'Red Delicious',\r\n        key: 'red delicious',\r\n        level: 2,\r\n        setSize: 2,\r\n        indexInParent: 1\r\n    },\r\n    {\r\n        label: 'Vegetables',\r\n        key: 'vegetables',\r\n        isFolder: true,\r\n        level: 0,\r\n        setSize: 2,\r\n        indexInParent: 1\r\n    },\r\n    {\r\n        label: 'Carrots',\r\n        key: 'carrots',\r\n        level: 1,\r\n        setSize: 3,\r\n        indexInParent: 0\r\n    },\r\n    {\r\n        label: 'Cucumbers',\r\n        key: 'cucumbers',\r\n        level: 1,\r\n        setSize: 3,\r\n        indexInParent: 1\r\n    },\r\n    {\r\n        label: 'Lettuce',\r\n        key: 'lettuce',\r\n        level: 1,\r\n        setSize: 3,\r\n        indexInParent: 2\r\n    }\r\n];"]},"metadata":{},"sourceType":"module"}