{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\niagrawal\\\\Desktop\\\\microsoft work\\\\tree_dnd\\\\src\\\\DropTreeNode.tsx\";\nimport * as React from 'react';\nimport { DropTarget } from 'react-dnd';\nimport { ItemTypes } from './ItemTypes';\nimport RenderTreeNode from './RenderTreeNode';\n\nconst DropTreeNode = ({\n  canDrop,\n  isOver,\n  connectDropTarget,\n  item\n}) => {\n  const isActive = canDrop && isOver;\n  let backgroundColor = '#222';\n\n  if (isActive) {\n    backgroundColor = 'darkgreen';\n  } else if (canDrop) {\n    backgroundColor = 'darkkhaki';\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: connectDropTarget,\n    style: {\n      backgroundColor\n    },\n    role: \"Dustbin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(RenderTreeNode, {\n    item: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }));\n};\n\n_c = DropTreeNode;\nexport default DropTarget(ItemTypes.BOX, {\n  drop: () => ({\n    name: 'Dustbin'\n  })\n}, (connect, monitor) => ({\n  connectDropTarget: connect.dropTarget(),\n  isOver: monitor.isOver(),\n  canDrop: monitor.canDrop()\n}))(DropTreeNode);\n\nvar _c;\n\n$RefreshReg$(_c, \"DropTreeNode\");","map":{"version":3,"sources":["C:/Users/niagrawal/Desktop/microsoft work/tree_dnd/src/DropTreeNode.tsx"],"names":["React","DropTarget","ItemTypes","RenderTreeNode","DropTreeNode","canDrop","isOver","connectDropTarget","item","isActive","backgroundColor","BOX","drop","name","connect","monitor","dropTarget"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,UAAT,QAAgD,WAAhD;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAQC,cAAR,MAA6B,kBAA7B;;AAUA,MAAMC,YAAwC,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,MAAX;AAAmBC,EAAAA,iBAAnB;AAAsCC,EAAAA;AAAtC,CAAD,KAAkD;AACjG,QAAMC,QAAQ,GAAGJ,OAAO,IAAIC,MAA5B;AACA,MAAII,eAAe,GAAG,MAAtB;;AACA,MAAID,QAAJ,EAAc;AACZC,IAAAA,eAAe,GAAG,WAAlB;AACD,GAFD,MAEO,IAAIL,OAAJ,EAAa;AAClBK,IAAAA,eAAe,GAAG,WAAlB;AACD;;AAED,sBACE;AACE,IAAA,GAAG,EAAEH,iBADP;AAEE,IAAA,KAAK,EAAE;AAAEG,MAAAA;AAAF,KAFT;AAGE,IAAA,IAAI,EAAC,SAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKI,oBAAC,cAAD;AAAgB,IAAA,IAAI,EAAEF,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADF;AAYD,CArBD;;KAAMJ,Y;AAuBN,eAAeH,UAAU,CACvBC,SAAS,CAACS,GADa,EAEvB;AACEC,EAAAA,IAAI,EAAE,OAAO;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAP;AADR,CAFuB,EAKvB,CAACC,OAAD,EAA+BC,OAA/B,MAA+D;AAC7DR,EAAAA,iBAAiB,EAAEO,OAAO,CAACE,UAAR,EAD0C;AAE7DV,EAAAA,MAAM,EAAES,OAAO,CAACT,MAAR,EAFqD;AAG7DD,EAAAA,OAAO,EAAEU,OAAO,CAACV,OAAR;AAHoD,CAA/D,CALuB,CAAV,CAUbD,YAVa,CAAf","sourcesContent":["import * as React from 'react';\r\nimport { ConnectDropTarget, DropTargetMonitor } from 'react-dnd'\r\nimport { DropTarget, DropTargetConnector } from 'react-dnd'\r\nimport { ItemTypes } from './ItemTypes'\r\nimport { ITreeProps, ITreeItem } from '@business-app/fabric/lib/components/Tree/Tree.types';\r\nimport  RenderTreeNode  from './RenderTreeNode';\r\n\r\n\r\nexport interface DropTreeNodeProp {\r\n  canDrop: boolean\r\n  isOver: boolean\r\n  connectDropTarget: ConnectDropTarget\r\n  item: ITreeItem;\r\n}\r\n\r\nconst DropTreeNode: React.FC<DropTreeNodeProp> = ({ canDrop, isOver, connectDropTarget, item }) => {\r\n  const isActive = canDrop && isOver\r\n  let backgroundColor = '#222'\r\n  if (isActive) {\r\n    backgroundColor = 'darkgreen'\r\n  } else if (canDrop) {\r\n    backgroundColor = 'darkkhaki'\r\n  }\r\n\r\n  return (\r\n    <div\r\n      ref={connectDropTarget}\r\n      style={{ backgroundColor }}\r\n      role=\"Dustbin\"\r\n    >\r\n        <RenderTreeNode item={item}>\r\n\r\n        </RenderTreeNode>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DropTarget(\r\n  ItemTypes.BOX,\r\n  {\r\n    drop: () => ({ name: 'Dustbin' }),\r\n  },\r\n  (connect: DropTargetConnector, monitor: DropTargetMonitor) => ({\r\n    connectDropTarget: connect.dropTarget(),\r\n    isOver: monitor.isOver(),\r\n    canDrop: monitor.canDrop(),\r\n  }),\r\n)(DropTreeNode)\r\n"]},"metadata":{},"sourceType":"module"}