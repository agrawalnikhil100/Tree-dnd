{"ast":null,"code":"/*!\n * Copyright (C) Microsoft Corporation. All rights reserved.\n */\nimport { __assign, __extends } from \"tslib\";\nimport { Icon } from '@fluentui/react/lib/Icon';\nimport { mergeStyles } from '@fluentui/react/lib/Styling';\nimport { getId } from '@fluentui/react/lib/Utilities';\nimport * as React from 'react';\n\nvar ContextualMenuButton =\n/** @class */\nfunction (_super) {\n  __extends(ContextualMenuButton, _super);\n\n  function ContextualMenuButton() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._button = React.createRef();\n    _this._contextMenuExpandedId = getId('ba-Tree-ContextMenu-Expanded');\n\n    _this._doubleClickEater = function (ev) {\n      ev.stopPropagation();\n      ev.preventDefault();\n    };\n\n    return _this;\n  }\n\n  ContextualMenuButton.prototype.render = function () {\n    var _a = this.props,\n        ariaLabel = _a.ariaLabel,\n        className = _a.className,\n        directionalHint = _a.directionalHint,\n        disabled = _a.disabled,\n        iconProps = _a.iconProps,\n        isOpen = _a.isOpen,\n        items = _a.items,\n        menuClosedStyle = _a.menuClosedStyle,\n        menuDisabledStyle = _a.menuDisabledStyle,\n        menuOpenStyle = _a.menuOpenStyle,\n        onClick = _a.onClick,\n        onDismiss = _a.onDismiss,\n        onRenderContextualMenu = _a.onRenderContextualMenu;\n    var buttonStyle = mergeStyles(className, isOpen ? menuOpenStyle : menuClosedStyle, disabled ? menuDisabledStyle : undefined);\n    return React.createElement(React.Fragment, null, React.createElement(\"button\", {\n      ref: this._button,\n      className: buttonStyle,\n      onClick: onClick,\n      onContextMenu: onClick,\n      onDoubleClick: this._doubleClickEater,\n      disabled: disabled,\n      \"aria-haspopup\": true,\n      \"aria-label\": ariaLabel,\n      \"aria-expanded\": isOpen,\n      \"aria-controls\": isOpen ? this._contextMenuExpandedId : null,\n      \"data-is-focusable\": false\n    }, React.createElement(Icon, __assign({}, iconProps))), isOpen && items && this._button.current && onRenderContextualMenu({\n      items: items,\n      onDismiss: onDismiss,\n      shouldFocusOnMount: true,\n      gapSpace: 0,\n      directionalHint: directionalHint,\n      isBeakVisible: false,\n      ariaLabel: ariaLabel,\n      target: this._button.current,\n      id: this._contextMenuExpandedId\n    }));\n  };\n\n  return ContextualMenuButton;\n}(React.Component);\n\nexport { ContextualMenuButton };","map":{"version":3,"sources":["../../../../src/components/Tree/ContextualMenuButton/ContextualMenuButton.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*!\n * Copyright (C) Microsoft Corporation. All rights reserved.\n */\nimport { __assign, __extends } from \"tslib\";\nimport { Icon } from '@fluentui/react/lib/Icon';\nimport { mergeStyles } from '@fluentui/react/lib/Styling';\nimport { getId } from '@fluentui/react/lib/Utilities';\nimport * as React from 'react';\nvar ContextualMenuButton = /** @class */ (function (_super) {\n    __extends(ContextualMenuButton, _super);\n    function ContextualMenuButton() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._button = React.createRef();\n        _this._contextMenuExpandedId = getId('ba-Tree-ContextMenu-Expanded');\n        _this._doubleClickEater = function (ev) {\n            ev.stopPropagation();\n            ev.preventDefault();\n        };\n        return _this;\n    }\n    ContextualMenuButton.prototype.render = function () {\n        var _a = this.props, ariaLabel = _a.ariaLabel, className = _a.className, directionalHint = _a.directionalHint, disabled = _a.disabled, iconProps = _a.iconProps, isOpen = _a.isOpen, items = _a.items, menuClosedStyle = _a.menuClosedStyle, menuDisabledStyle = _a.menuDisabledStyle, menuOpenStyle = _a.menuOpenStyle, onClick = _a.onClick, onDismiss = _a.onDismiss, onRenderContextualMenu = _a.onRenderContextualMenu;\n        var buttonStyle = mergeStyles(className, isOpen ? menuOpenStyle : menuClosedStyle, disabled ? menuDisabledStyle : undefined);\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"button\", { ref: this._button, className: buttonStyle, onClick: onClick, onContextMenu: onClick, onDoubleClick: this._doubleClickEater, disabled: disabled, \"aria-haspopup\": true, \"aria-label\": ariaLabel, \"aria-expanded\": isOpen, \"aria-controls\": isOpen ? this._contextMenuExpandedId : null, \"data-is-focusable\": false },\n                React.createElement(Icon, __assign({}, iconProps))),\n            isOpen &&\n                items &&\n                this._button.current &&\n                onRenderContextualMenu({\n                    items: items,\n                    onDismiss: onDismiss,\n                    shouldFocusOnMount: true,\n                    gapSpace: 0,\n                    directionalHint: directionalHint,\n                    isBeakVisible: false,\n                    ariaLabel: ariaLabel,\n                    target: this._button.current,\n                    id: this._contextMenuExpandedId\n                })));\n    };\n    return ContextualMenuButton;\n}(React.Component));\nexport { ContextualMenuButton };\n//# sourceMappingURL=ContextualMenuButton.js.map"]},"metadata":{},"sourceType":"module"}