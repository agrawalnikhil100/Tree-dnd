{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\niagrawal\\\\Desktop\\\\microsoft work\\\\tree_dnd\\\\src\\\\TreeExample.tsx\";\nimport { Tree } from '@business-app/fabric/lib/components/Tree';\nimport { mergeStyleSets } from '@fluentui/react/lib/Styling';\nimport * as React from 'react';\nimport { getFolderKeys } from '@business-app/fabric/lib/components/Tree/examples/Tree.Example.Data'; // import { RenderTreeNode } from './RenderTreeNode';\n\nimport Box from './Box';\nexport class TreeBasicUncontrolledExample extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this._onRenderItemContainer = (item, isSelected, isNodeExpanded, index, defaultRenderer) => {\n      return /*#__PURE__*/React.createElement(Box, {\n        name: item.label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 7\n        }\n      }, defaultRenderer());\n    };\n  }\n\n  render() {\n    const items = produceItems;\n    const folderKeysSet = getFolderKeys(items);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: exampleStyles.exampleContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Tree, {\n      items: items,\n      initialExpandedItemKeys: folderKeysSet,\n      strings: {\n        listAriaLabel: 'list',\n        moreCommandsAriaLabel: 'more commands'\n      },\n      onRenderItemContainer: this._onRenderItemContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\nconst exampleStyles = mergeStyleSets({\n  exampleContainer: {\n    // 'display: flex' is important for the Tree to layout correctly.\n    display: 'flex',\n    // Just an example to prove that row direction also works for the Tree.\n    flexDirection: 'row',\n    width: 320,\n    height: 400,\n    userSelect: 'none'\n  }\n});\nexport var produceItems = [{\n  label: 'Fruits',\n  key: 'fruits',\n  isFolder: true,\n  level: 0,\n  setSize: 2,\n  indexInParent: 0 // iconProps: {iconName:'ChevronDown', color:'black'}\n\n}, {\n  label: 'Apples',\n  key: 'apples',\n  isFolder: true,\n  level: 1,\n  setSize: 0,\n  indexInParent: 0\n}, {\n  label: 'Granny Smith',\n  key: 'granny smith',\n  level: 2,\n  setSize: 2,\n  indexInParent: 0\n}, {\n  label: 'Red Delicious',\n  key: 'red delicious',\n  level: 2,\n  setSize: 2,\n  indexInParent: 1\n}, {\n  label: 'Vegetables',\n  key: 'vegetables',\n  isFolder: true,\n  level: 0,\n  setSize: 2,\n  indexInParent: 1\n}, {\n  label: 'Carrots',\n  key: 'carrots',\n  level: 1,\n  setSize: 3,\n  indexInParent: 0\n}, {\n  label: 'Cucumbers',\n  key: 'cucumbers',\n  level: 1,\n  setSize: 3,\n  indexInParent: 1\n}, {\n  label: 'Lettuce',\n  key: 'lettuce',\n  level: 1,\n  setSize: 3,\n  indexInParent: 2\n}];","map":{"version":3,"sources":["C:/Users/niagrawal/Desktop/microsoft work/tree_dnd/src/TreeExample.tsx"],"names":["Tree","mergeStyleSets","React","getFolderKeys","Box","TreeBasicUncontrolledExample","Component","_onRenderItemContainer","item","isSelected","isNodeExpanded","index","defaultRenderer","label","render","items","produceItems","folderKeysSet","exampleStyles","exampleContainer","listAriaLabel","moreCommandsAriaLabel","display","flexDirection","width","height","userSelect","key","isFolder","level","setSize","indexInParent"],"mappings":"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","sourcesContent":["import { ITreeStyles, Tree } from '@business-app/fabric/lib/components/Tree';\r\nimport { mergeStyleSets } from '@fluentui/react/lib/Styling';\r\nimport * as React from 'react';\r\nimport { ITreeItem } from '@business-app/fabric/lib/components/Tree/Tree.types';\r\nimport { getFolderKeys } from '@business-app/fabric/lib/components/Tree/examples/Tree.Example.Data';\r\n// import { RenderTreeNode } from './RenderTreeNode';\r\nimport  Box  from './Box';\r\n\r\n\r\nexport class TreeBasicUncontrolledExample extends React.Component {\r\n\r\n  private _onRenderItemContainer = (\r\n    item: ITreeItem,\r\n    isSelected: boolean,\r\n    isNodeExpanded: boolean,\r\n    index: number,\r\n    defaultRenderer: () => JSX.Element\r\n  ) => {\r\n    return (\r\n      <Box\r\n        name={item.label}\r\n      >\r\n        {defaultRenderer()}\r\n    </Box>\r\n    )\r\n  };\r\n  \r\n  \r\n  public render(): JSX.Element {\r\n    const items: ITreeItem[] = produceItems;\r\n    const folderKeysSet = getFolderKeys(items);\r\n\r\n    return (\r\n      <div className={exampleStyles.exampleContainer}>\r\n        <Tree\r\n          items={items}\r\n          initialExpandedItemKeys={folderKeysSet}\r\n          strings={{\r\n            listAriaLabel: 'list',\r\n            moreCommandsAriaLabel: 'more commands'\r\n          }}\r\n          onRenderItemContainer = {this._onRenderItemContainer}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n  \r\nconst exampleStyles = mergeStyleSets({\r\n  exampleContainer: {\r\n    // 'display: flex' is important for the Tree to layout correctly.\r\n    display: 'flex',\r\n    // Just an example to prove that row direction also works for the Tree.\r\n    flexDirection: 'row',\r\n    width: 320,\r\n    height: 400,\r\n    userSelect: 'none'\r\n  }\r\n});\r\n\r\nexport var produceItems: ITreeItem[] = [\r\n  {\r\n      label: 'Fruits',\r\n      key: 'fruits',\r\n      isFolder: true,\r\n      level: 0,\r\n      setSize: 2,\r\n      indexInParent: 0\r\n      // iconProps: {iconName:'ChevronDown', color:'black'}\r\n  },\r\n  {\r\n      label: 'Apples',\r\n      key: 'apples',\r\n      isFolder: true,\r\n      level: 1,\r\n      setSize: 0,\r\n      indexInParent: 0\r\n  },\r\n  {\r\n      label: 'Granny Smith',\r\n      key: 'granny smith',\r\n      level: 2,\r\n      setSize: 2,\r\n      indexInParent: 0\r\n  },\r\n  {\r\n      label: 'Red Delicious',\r\n      key: 'red delicious',\r\n      level: 2,\r\n      setSize: 2,\r\n      indexInParent: 1\r\n  },\r\n  {\r\n      label: 'Vegetables',\r\n      key: 'vegetables',\r\n      isFolder: true,\r\n      level: 0,\r\n      setSize: 2,\r\n      indexInParent: 1\r\n  },\r\n  {\r\n      label: 'Carrots',\r\n      key: 'carrots',\r\n      level: 1,\r\n      setSize: 3,\r\n      indexInParent: 0\r\n  },\r\n  {\r\n      label: 'Cucumbers',\r\n      key: 'cucumbers',\r\n      level: 1,\r\n      setSize: 3,\r\n      indexInParent: 1\r\n  },\r\n  {\r\n      label: 'Lettuce',\r\n      key: 'lettuce',\r\n      level: 1,\r\n      setSize: 3,\r\n      indexInParent: 2\r\n  }\r\n];"]},"metadata":{},"sourceType":"module"}