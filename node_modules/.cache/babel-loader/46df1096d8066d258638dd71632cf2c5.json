{"ast":null,"code":"/*!\n * Copyright (C) Microsoft Corporation. All rights reserved.\n */\nimport { __assign, __decorate, __extends } from \"tslib\";\nimport { FocusZone, FocusZoneDirection } from '@fluentui/react/lib/FocusZone';\nimport { List } from '@fluentui/react/lib/List';\nimport { mergeStyles } from '@fluentui/react/lib/Styling';\nimport { BaseComponent, classNamesFunction, customizable, findIndex } from '@fluentui/react/lib/Utilities';\nimport * as React from 'react';\nimport { SelectionType } from './Tree.types';\nimport { TreeNode } from './TreeNode/TreeNode';\nvar getClassNames = classNamesFunction();\nexport var defaultIconWidth = 26;\nexport var defaultNodeHeight = 32;\nvar defaultItemsPerPage = 10; // Number.MAX_SAFE_INTEGER doesn't work in IE, so just use a large number.\n\nvar maxInt = 99999;\n/**\n * A generic Tree component based on Fabric's List.\n */\n\nvar TreeBase =\n/** @class */\nfunction (_super) {\n  __extends(TreeBase, _super);\n\n  function TreeBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._focusZone = React.createRef();\n    _this._classNames = {};\n    _this._visibleIndexByItem = {};\n    _this._hiddenStyle = {\n      display: 'none'\n    };\n\n    _this._renderScrollViewAndList = function () {\n      var scrollView = _this.props.scrollView;\n\n      if (!!scrollView) {\n        var ScrollView = scrollView;\n        return React.createElement(ScrollView, {\n          className: _this._classNames.scrollView\n        }, _this._renderList());\n      }\n\n      return React.createElement(\"div\", {\n        className: _this._classNames.scrollView\n      }, _this._renderList());\n    };\n\n    _this._renderList = function () {\n      var _a = _this.props,\n          items = _a.items,\n          strings = _a.strings;\n      return React.createElement(List, {\n        className: _this._classNames.list,\n        ref: _this._saveListRef,\n        items: _this._getVisibleItems(items),\n        role: \"tree\",\n        getKey: _this._getKey,\n        getPageHeight: _this._getPageHeight,\n        \"aria-label\": strings.listAriaLabel,\n        \"aria-multiselectable\": true,\n        onRenderCell: _this._onRenderTreeNode\n      });\n    };\n\n    _this._onRenderTreeNode = function (item, index, isScrolling) {\n      var _a = _this.props,\n          getItemIsCollapsible = _a.getItemIsCollapsible,\n          getItemIsDisabled = _a.getItemIsDisabled,\n          getItemCommands = _a.getItemCommands,\n          getItemHasCommands = _a.getItemHasCommands,\n          getItemStyle = _a.getItemStyle,\n          onRenderItemContainer = _a.onRenderItemContainer,\n          onRenderItemLabel = _a.onRenderItemLabel,\n          onRenderItemLabelContent = _a.onRenderItemLabelContent,\n          onRenderExpandIcon = _a.onRenderExpandIcon,\n          onRenderContextualMenu = _a.onRenderContextualMenu,\n          strings = _a.strings;\n      var customItemContainerRender = onRenderItemContainer ? _this._onRenderItemContainer : undefined;\n      var customItemLabelRender = onRenderItemLabel ? _this._onRenderItemLabel : undefined;\n      var customItemLabelContentRender = onRenderItemLabelContent ? _this._onRenderItemLabelContent : undefined;\n      var customExpandIconRender = onRenderExpandIcon ? _this._onRenderExpandIcon : undefined;\n      var customContextualMenuRender = onRenderContextualMenu ? _this._onRenderContextualMenu : undefined;\n      var customItemStyle = getItemStyle ? _this._getItemStyle(item) : undefined;\n\n      var isSelected = _this.state.selectedItemKeys.has(item.key);\n\n      var isSelectionDisabled = item.disableSelection;\n\n      var isExpanded = _this.state.expandedItemKeys.has(item.key);\n\n      var isCollapsible = !getItemIsCollapsible || getItemIsCollapsible(item);\n      var itemStyle = _this._cachedStyles.item;\n\n      if (!!isSelectionDisabled) {\n        itemStyle = _this._cachedStyles.unselectableItem;\n      } else if (isSelected) {\n        itemStyle = _this._cachedStyles.selectedItem;\n      }\n\n      if (customItemStyle) {\n        itemStyle = mergeStyles(itemStyle, customItemStyle);\n      }\n\n      return React.createElement(TreeNode, {\n        itemKey: item.key,\n        label: item.label,\n        isFolder: item.isFolder,\n        level: item.level,\n        iconProps: item.iconProps,\n        ariaLabel: item.ariaLabel,\n        setSize: item.setSize,\n        indexInParent: item.indexInParent,\n        isSelectionDisabled: isSelectionDisabled,\n        isDisabled: getItemIsDisabled && getItemIsDisabled(item),\n        isSelected: isSelected,\n        isExpanded: isExpanded,\n        isFocusable: !item.disableFocus,\n        isCollapsible: isCollapsible,\n        moreIcon: _this.state.moreIcon,\n        collapsedArrowIcon: _this.state.collapsedArrowIcon,\n        hasCommands: getItemCommands && (!getItemHasCommands || getItemHasCommands(item)),\n        getCommands: _this._getItemCommands,\n        onRenderItemContainer: customItemContainerRender,\n        onRenderItemLabel: customItemLabelRender,\n        onRenderItemLabelContent: customItemLabelContentRender,\n        onRenderExpandIcon: customExpandIconRender,\n        onRenderContextualMenu: customContextualMenuRender,\n        onSelected: _this._onItemSelected,\n        onExpandToggled: _this._onExpandToggled,\n        onDoubleClicked: _this._onDoubleClicked,\n        onItemKeyDown: _this._onItemKeyDown,\n        moreCommandsAriaLabel: item.moreCommandsAriaLabel || strings.moreCommandsAriaLabel,\n        itemStyle: itemStyle,\n        itemLabelStyle: _this._classNames.itemLabel,\n        indentSpacerStyle: _this._classNames.levelIndentSpacer,\n        menuButtonStyle: _this._classNames.menuButton,\n        menuButtonOpenStyle: isSelected ? _this._classNames.menuButtonSelectedRowOpenMenu : _this._classNames.menuButtonUnselectedRowOpenMenu,\n        menuButtonClosedStyle: isSelected ? _this._classNames.menuButtonSelectedRowClosedMenu : _this._classNames.menuButtonUnselectedRowClosedMenu,\n        menuButtonDisabledStyle: _this._classNames.menuButtonDisabled,\n        expandIconButtonStyle: isCollapsible ? _this._cachedStyles.expandIconButton : _this._cachedStyles.expandIconButtonDisabled,\n        expandIconStyle: isExpanded ? _this._cachedStyles.expandIconExpanded : _this._classNames.expandIcon,\n        noExpandIconStyle: _this._classNames.noExpandIcon,\n        itemIconContainerStyle: _this._classNames.itemIconContainer,\n        itemIconStyle: _this._classNames.itemIcon,\n        noItemIconStyle: _this._classNames.noItemIcon\n      });\n    };\n\n    _this._getItemStyle = function (item) {\n      var getItemStyle = _this.props.getItemStyle;\n\n      if (getItemStyle) {\n        var _a = _this.state,\n            selectedItemKeys = _a.selectedItemKeys,\n            expandedItemKeys = _a.expandedItemKeys,\n            keyToVisibleIndexMap = _a.keyToVisibleIndexMap;\n        var index = keyToVisibleIndexMap.get(item.key);\n        return getItemStyle(item, selectedItemKeys.has(item.key), expandedItemKeys.has(item.key), index);\n      }\n\n      return null;\n    };\n\n    _this._getItemCommands = function (itemKey) {\n      var getItemCommands = _this.props.getItemCommands;\n      var keyToItemMap = _this.state.keyToItemMap;\n\n      if (getItemCommands) {\n        var item = keyToItemMap.get(itemKey);\n        return getItemCommands(item);\n      }\n\n      return [];\n    };\n\n    _this._onItemSelected = function (itemKey, type) {\n      var onItemSelected = _this.props.onItemSelected;\n      var _a = _this.state,\n          keyToItemMap = _a.keyToItemMap,\n          selectedItemKeys = _a.selectedItemKeys;\n      var item = keyToItemMap.get(itemKey);\n\n      if (item.disableSelection) {\n        return;\n      }\n\n      if (onItemSelected) {\n        var _b = _this.state,\n            expandedItemKeys = _b.expandedItemKeys,\n            keyToVisibleIndexMap = _b.keyToVisibleIndexMap;\n        var index = keyToVisibleIndexMap.get(itemKey);\n        onItemSelected(item, type, selectedItemKeys.has(itemKey), expandedItemKeys.has(itemKey), index);\n      } // Check if selection is being treated as uncontrolled\n\n\n      if (!_this.props.selectedItemKeys) {\n        var newSelectedItemKeys = void 0;\n\n        if (type === SelectionType.Toggle) {\n          newSelectedItemKeys = _this._cloneSet(selectedItemKeys);\n\n          if (selectedItemKeys.has(itemKey)) {\n            newSelectedItemKeys.delete(itemKey);\n          } else {\n            newSelectedItemKeys.add(itemKey);\n          }\n        } else {\n          // TODO: add proper support for SelectionType.Block.\n          newSelectedItemKeys = new Set();\n          newSelectedItemKeys.add(itemKey);\n        }\n\n        _this.setState({\n          selectedItemKeys: newSelectedItemKeys\n        });\n      }\n    };\n\n    _this._onRenderItemContainer = function (itemKey, defaultRender) {\n      var onRenderItemContainer = _this.props.onRenderItemContainer;\n      var _a = _this.state,\n          keyToItemMap = _a.keyToItemMap,\n          selectedItemKeys = _a.selectedItemKeys,\n          expandedItemKeys = _a.expandedItemKeys,\n          keyToVisibleIndexMap = _a.keyToVisibleIndexMap;\n      var item = keyToItemMap.get(itemKey);\n      var index = keyToVisibleIndexMap.get(itemKey);\n      return onRenderItemContainer(item, selectedItemKeys.has(itemKey), expandedItemKeys.has(itemKey), index, defaultRender);\n    };\n\n    _this._onRenderItemLabel = function (itemKey, defaultRender) {\n      var onRenderItemLabel = _this.props.onRenderItemLabel;\n      var _a = _this.state,\n          keyToItemMap = _a.keyToItemMap,\n          selectedItemKeys = _a.selectedItemKeys,\n          expandedItemKeys = _a.expandedItemKeys,\n          keyToVisibleIndexMap = _a.keyToVisibleIndexMap;\n      var item = keyToItemMap.get(itemKey);\n      var index = keyToVisibleIndexMap.get(itemKey);\n      return onRenderItemLabel(item, selectedItemKeys.has(itemKey), expandedItemKeys.has(itemKey), index, defaultRender);\n    };\n\n    _this._onRenderItemLabelContent = function (itemKey, defaultRender) {\n      var onRenderItemLabelContent = _this.props.onRenderItemLabelContent;\n      var _a = _this.state,\n          keyToItemMap = _a.keyToItemMap,\n          selectedItemKeys = _a.selectedItemKeys,\n          expandedItemKeys = _a.expandedItemKeys,\n          keyToVisibleIndexMap = _a.keyToVisibleIndexMap;\n      var item = keyToItemMap.get(itemKey);\n      var index = keyToVisibleIndexMap.get(itemKey);\n      return onRenderItemLabelContent(item, selectedItemKeys.has(itemKey), expandedItemKeys.has(itemKey), index, defaultRender);\n    };\n\n    _this._onRenderExpandIcon = function (itemKey, defaultRender) {\n      var onRenderExpandIcon = _this.props.onRenderExpandIcon;\n      var _a = _this.state,\n          keyToItemMap = _a.keyToItemMap,\n          selectedItemKeys = _a.selectedItemKeys,\n          expandedItemKeys = _a.expandedItemKeys,\n          keyToVisibleIndexMap = _a.keyToVisibleIndexMap;\n      var item = keyToItemMap.get(itemKey);\n      var index = keyToVisibleIndexMap.get(itemKey);\n      return onRenderExpandIcon(item, selectedItemKeys.has(itemKey), expandedItemKeys.has(itemKey), index, defaultRender);\n    };\n\n    _this._onRenderContextualMenu = function (itemKey, menuProps) {\n      var onRenderContextualMenu = _this.props.onRenderContextualMenu;\n      var _a = _this.state,\n          keyToItemMap = _a.keyToItemMap,\n          selectedItemKeys = _a.selectedItemKeys,\n          expandedItemKeys = _a.expandedItemKeys,\n          keyToVisibleIndexMap = _a.keyToVisibleIndexMap;\n      var item = keyToItemMap.get(itemKey);\n      var index = keyToVisibleIndexMap.get(itemKey);\n      return onRenderContextualMenu(item, selectedItemKeys.has(itemKey), expandedItemKeys.has(itemKey), index, menuProps);\n    };\n\n    _this._onItemKeyDown = function (itemKey, event) {\n      var onItemKeyDown = _this.props.onItemKeyDown;\n      var keyToItemMap = _this.state.keyToItemMap;\n      var item = keyToItemMap.get(itemKey);\n\n      if (onItemKeyDown) {\n        var _a = _this.state,\n            selectedItemKeys = _a.selectedItemKeys,\n            expandedItemKeys = _a.expandedItemKeys,\n            keyToVisibleIndexMap = _a.keyToVisibleIndexMap;\n        var index = keyToVisibleIndexMap.get(itemKey);\n        return onItemKeyDown(item, selectedItemKeys.has(itemKey), expandedItemKeys.has(itemKey), index, event);\n      }\n    };\n\n    _this._onExpandToggled = function (itemKey) {\n      var _a = _this.props,\n          onItemCollapse = _a.onItemCollapse,\n          onItemExpand = _a.onItemExpand;\n      var _b = _this.state,\n          keyToItemMap = _b.keyToItemMap,\n          keyToVisibleIndexMap = _b.keyToVisibleIndexMap,\n          expandedItemKeys = _b.expandedItemKeys;\n      var item = keyToItemMap.get(itemKey);\n      var isExpanded = expandedItemKeys.has(itemKey);\n      var index = keyToVisibleIndexMap.get(itemKey);\n      var callbackToUse = isExpanded ? onItemCollapse : onItemExpand;\n\n      if (callbackToUse) {\n        callbackToUse(item, index);\n      } // Check if expansion is being treated as uncontrolled\n\n\n      if (!_this.props.expandedItemKeys) {\n        var newExpandedItemKeys_1 = _this._cloneSet(expandedItemKeys);\n\n        if (isExpanded) {\n          newExpandedItemKeys_1.delete(itemKey);\n        } else {\n          newExpandedItemKeys_1.add(itemKey);\n        }\n\n        _this.setState(function (prevState) {\n          return TreeBase_1._getStateFromProps(_this.props, __assign(__assign({}, prevState), {\n            expandedItemKeys: newExpandedItemKeys_1,\n            areExpandedItemsDirty: true\n          }));\n        });\n      }\n    };\n\n    _this._onDoubleClicked = function (itemKey) {\n      var onItemDoubleClicked = _this.props.onItemDoubleClicked;\n      var keyToItemMap = _this.state.keyToItemMap;\n      var item = keyToItemMap.get(itemKey);\n\n      if (onItemDoubleClicked) {\n        var _a = _this.state,\n            selectedItemKeys = _a.selectedItemKeys,\n            expandedItemKeys = _a.expandedItemKeys,\n            keyToVisibleIndexMap = _a.keyToVisibleIndexMap;\n        var index = keyToVisibleIndexMap.get(itemKey);\n        onItemDoubleClicked(item, selectedItemKeys.has(itemKey), expandedItemKeys.has(itemKey), index);\n      }\n    };\n\n    _this._saveListRef = function (ref) {\n      _this._list = ref;\n\n      _this._applyPendingScroll();\n    };\n\n    _this._applyPendingScroll = function () {\n      var index = _this._getSelectedIndex();\n\n      if (_this._isPendingScrollToSelected && _this._list && index) {\n        _this._list.scrollToIndex(index, function () {\n          return _this._getNodeHeight(_this.props);\n        });\n\n        _this._isPendingScrollToSelected = false;\n      }\n    };\n    /**\n     * Gets the index of the first selected item\n     */\n\n\n    _this._getSelectedIndex = function () {\n      var items = _this.props.items;\n      return items && findIndex(items, function (item) {\n        return _this.state.selectedItemKeys.has(item.key);\n      });\n    }; // This method is necessary for List.scrollToIndex to behave correctly while loading.\n\n\n    _this._getPageHeight = function () {\n      return defaultItemsPerPage * _this._getNodeHeight(_this.props);\n    };\n\n    _this._getVisibleItems = function (items) {\n      _this._visibleIndexByItem = {};\n      var visibleIndex = 0;\n      var visibleItems = [];\n      var lastCollapsedLevel = maxInt;\n      items.forEach(function (item, index) {\n        if (item.level <= lastCollapsedLevel) {\n          if (_this.state.expandedItemKeys.has(item.key)) {\n            lastCollapsedLevel = maxInt;\n          } else {\n            lastCollapsedLevel = item.level;\n          }\n\n          visibleItems.push(item);\n          _this._visibleIndexByItem[item.key] = visibleIndex++;\n        }\n      });\n      return visibleItems;\n    };\n\n    var initialSelectedItemKeys = new Set();\n\n    if (props.initialSelectedItemKeys) {\n      props.initialSelectedItemKeys.forEach(function (key) {\n        return initialSelectedItemKeys.add(key);\n      });\n    }\n\n    var initialExpandedItemKeys = new Set();\n\n    if (props.initialExpandedItemKeys) {\n      props.initialExpandedItemKeys.forEach(function (key) {\n        return initialExpandedItemKeys.add(key);\n      });\n    }\n\n    _this.state = TreeBase_1._getStateFromProps(props, {\n      items: [],\n      visibleItems: [],\n      visibleItemKeys: new Set(),\n      cachedItemKeys: new Set(),\n      keyToItemMap: new Map(),\n      keyToVisibleIndexMap: new Map(),\n      selectedItemKeys: initialSelectedItemKeys,\n      expandedItemKeys: initialExpandedItemKeys,\n      areExpandedItemsDirty: true,\n      moreIcon: 'More',\n      collapsedArrowIcon: 'ChevronRight'\n    });\n    return _this;\n  }\n\n  TreeBase_1 = TreeBase;\n\n  TreeBase._getStateFromProps = function (nextProps, prevState) {\n    var newState = prevState;\n    var iconsProp = nextProps.icons;\n    var itemsHaveChanged = nextProps.items !== prevState.items;\n    var expandedItemKeysHaveChanged = prevState.areExpandedItemsDirty || nextProps.expandedItemKeys && nextProps.expandedItemKeys !== prevState.expandedItemKeys;\n    newState.items = nextProps.items;\n    newState.areExpandedItemsDirty = false;\n\n    if (nextProps.selectedItemKeys) {\n      newState.selectedItemKeys = nextProps.selectedItemKeys;\n    }\n\n    if (nextProps.expandedItemKeys) {\n      newState.expandedItemKeys = nextProps.expandedItemKeys;\n    }\n\n    if (iconsProp) {\n      if (iconsProp.more && iconsProp.more !== prevState.moreIcon) {\n        newState.moreIcon = iconsProp.more;\n      }\n\n      if (iconsProp.collapsedArrow && iconsProp.collapsedArrow !== prevState.collapsedArrowIcon) {\n        newState.collapsedArrowIcon = iconsProp.collapsedArrow;\n      }\n    }\n\n    if (itemsHaveChanged || expandedItemKeysHaveChanged) {\n      var keyToVisibleIndexMap_1 = new Map();\n      var visibleItemKeys_1 = new Set();\n      var visibleItems_1 = [];\n      var keyToItemMap_1 = itemsHaveChanged ? new Map() : null;\n      var cachedItemKeys_1 = itemsHaveChanged ? new Set() : newState.cachedItemKeys;\n      var lastCollapsedLevel_1 = maxInt;\n      var visibleIndex_1 = 0;\n      nextProps.items.forEach(function (item, index) {\n        if (keyToItemMap_1) {\n          keyToItemMap_1.set(item.key, item);\n        }\n\n        if (item.level <= lastCollapsedLevel_1) {\n          if (newState.expandedItemKeys.has(item.key)) {\n            lastCollapsedLevel_1 = maxInt;\n          } else {\n            lastCollapsedLevel_1 = item.level;\n          }\n\n          if (visibleItems_1) {\n            visibleItems_1.push(item);\n          } else {\n            cachedItemKeys_1.add(item.key);\n          }\n\n          visibleItemKeys_1.add(item.key);\n          keyToVisibleIndexMap_1.set(item.key, visibleIndex_1++);\n        }\n      });\n      newState.keyToVisibleIndexMap = keyToVisibleIndexMap_1;\n      newState.visibleItemKeys = visibleItemKeys_1;\n\n      if (visibleItems_1) {\n        newState.visibleItems = visibleItems_1;\n      }\n\n      if (keyToItemMap_1) {\n        newState.keyToItemMap = keyToItemMap_1;\n      }\n\n      if (cachedItemKeys_1) {\n        newState.cachedItemKeys = cachedItemKeys_1;\n      }\n    }\n\n    return newState;\n  };\n\n  TreeBase.getDerivedStateFromProps = function (nextProps, prevState) {\n    if (!prevState) {\n      return null;\n    }\n\n    return TreeBase_1._getStateFromProps(nextProps, prevState);\n  };\n\n  TreeBase.prototype.componentDidUpdate = function () {\n    this._applyPendingScroll();\n  };\n\n  TreeBase.prototype.render = function () {\n    this._classNames = this._getClassNames(this.props);\n    return React.createElement(\"div\", {\n      className: mergeStyles(this._classNames.root)\n    }, React.createElement(\"div\", {\n      className: mergeStyles(this._classNames.innerRoot)\n    }, React.createElement(FocusZone, {\n      componentRef: this._focusZone,\n      direction: FocusZoneDirection.vertical,\n      className: this._classNames.focusZone\n    }, this._renderScrollViewAndList())));\n  };\n  /**\n   * Sets focus to the first tree node.\n   */\n\n\n  TreeBase.prototype.focus = function () {\n    if (this._focusZone.current) {\n      this._focusZone.current.focus();\n    }\n  };\n\n  TreeBase.prototype._getKey = function (item) {\n    return item.key;\n  };\n\n  TreeBase.prototype._cloneSet = function (set) {\n    var newSet = new Set();\n    set.forEach(function (key) {\n      return newSet.add(key);\n    });\n    return newSet;\n  };\n\n  TreeBase.prototype._getNodeHeight = function (props) {\n    var nodeHeight = props.nodeHeight;\n    return nodeHeight === undefined || nodeHeight === null ? defaultNodeHeight : nodeHeight;\n  };\n\n  TreeBase.prototype._getIconWidth = function (props) {\n    var iconWidth = props.iconWidth;\n    return iconWidth === undefined || iconWidth === null ? defaultIconWidth : iconWidth;\n  };\n\n  TreeBase.prototype._getClassNames = function (props) {\n    var className = props.className,\n        theme = props.theme;\n    var classNames = getClassNames(props.styles, {\n      className: className,\n      theme: theme,\n      nodeHeight: this._getNodeHeight(props),\n      iconWidth: this._getIconWidth(props)\n    });\n    var unselectableItem = mergeStyles(classNames.item, classNames.itemIsNotSelected, classNames.itemIsNotSelectable);\n    var item = mergeStyles(classNames.item, classNames.itemIsSelectable, classNames.itemIsNotSelected);\n    var selectedItem = mergeStyles(classNames.item, classNames.itemIsSelectable, classNames.itemIsSelected);\n    var expandIconExpanded = mergeStyles(classNames.expandIcon, classNames.expandIconExpanded);\n    var expandIconButton = mergeStyles(classNames.expandIconButton, classNames.expandIconButtonEnabled);\n    var expandIconButtonDisabled = mergeStyles(classNames.expandIconButton, classNames.expandIconButtonDisabled);\n    this._cachedStyles = {\n      unselectableItem: unselectableItem,\n      item: item,\n      selectedItem: selectedItem,\n      expandIconExpanded: expandIconExpanded,\n      expandIconButton: expandIconButton,\n      expandIconButtonDisabled: expandIconButtonDisabled\n    };\n    return classNames;\n  };\n\n  var TreeBase_1;\n  TreeBase = TreeBase_1 = __decorate([customizable('Tree', ['theme', 'styles'])], TreeBase);\n  return TreeBase;\n}(BaseComponent);\n\nexport { TreeBase };","map":{"version":3,"sources":["../../../src/components/Tree/Tree.base.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*!\n * Copyright (C) Microsoft Corporation. All rights reserved.\n */\nimport { __assign, __decorate, __extends } from \"tslib\";\nimport { FocusZone, FocusZoneDirection } from '@fluentui/react/lib/FocusZone';\nimport { List } from '@fluentui/react/lib/List';\nimport { mergeStyles } from '@fluentui/react/lib/Styling';\nimport { BaseComponent, classNamesFunction, customizable, findIndex } from '@fluentui/react/lib/Utilities';\nimport * as React from 'react';\nimport { SelectionType } from './Tree.types';\nimport { TreeNode } from './TreeNode/TreeNode';\nvar getClassNames = classNamesFunction();\nexport var defaultIconWidth = 26;\nexport var defaultNodeHeight = 32;\nvar defaultItemsPerPage = 10;\n// Number.MAX_SAFE_INTEGER doesn't work in IE, so just use a large number.\nvar maxInt = 99999;\n/**\n * A generic Tree component based on Fabric's List.\n */\nvar TreeBase = /** @class */ (function (_super) {\n    __extends(TreeBase, _super);\n    function TreeBase(props) {\n        var _this = _super.call(this, props) || this;\n        _this._focusZone = React.createRef();\n        _this._classNames = {};\n        _this._visibleIndexByItem = {};\n        _this._hiddenStyle = { display: 'none' };\n        _this._renderScrollViewAndList = function () {\n            var scrollView = _this.props.scrollView;\n            if (!!scrollView) {\n                var ScrollView = scrollView;\n                return React.createElement(ScrollView, { className: _this._classNames.scrollView }, _this._renderList());\n            }\n            return React.createElement(\"div\", { className: _this._classNames.scrollView }, _this._renderList());\n        };\n        _this._renderList = function () {\n            var _a = _this.props, items = _a.items, strings = _a.strings;\n            return (React.createElement(List, { className: _this._classNames.list, ref: _this._saveListRef, items: _this._getVisibleItems(items), role: \"tree\", getKey: _this._getKey, getPageHeight: _this._getPageHeight, \"aria-label\": strings.listAriaLabel, \"aria-multiselectable\": true, onRenderCell: _this._onRenderTreeNode }));\n        };\n        _this._onRenderTreeNode = function (item, index, isScrolling) {\n            var _a = _this.props, getItemIsCollapsible = _a.getItemIsCollapsible, getItemIsDisabled = _a.getItemIsDisabled, getItemCommands = _a.getItemCommands, getItemHasCommands = _a.getItemHasCommands, getItemStyle = _a.getItemStyle, onRenderItemContainer = _a.onRenderItemContainer, onRenderItemLabel = _a.onRenderItemLabel, onRenderItemLabelContent = _a.onRenderItemLabelContent, onRenderExpandIcon = _a.onRenderExpandIcon, onRenderContextualMenu = _a.onRenderContextualMenu, strings = _a.strings;\n            var customItemContainerRender = onRenderItemContainer ? _this._onRenderItemContainer : undefined;\n            var customItemLabelRender = onRenderItemLabel ? _this._onRenderItemLabel : undefined;\n            var customItemLabelContentRender = onRenderItemLabelContent\n                ? _this._onRenderItemLabelContent\n                : undefined;\n            var customExpandIconRender = onRenderExpandIcon ? _this._onRenderExpandIcon : undefined;\n            var customContextualMenuRender = onRenderContextualMenu ? _this._onRenderContextualMenu : undefined;\n            var customItemStyle = getItemStyle ? _this._getItemStyle(item) : undefined;\n            var isSelected = _this.state.selectedItemKeys.has(item.key);\n            var isSelectionDisabled = item.disableSelection;\n            var isExpanded = _this.state.expandedItemKeys.has(item.key);\n            var isCollapsible = !getItemIsCollapsible || getItemIsCollapsible(item);\n            var itemStyle = _this._cachedStyles.item;\n            if (!!isSelectionDisabled) {\n                itemStyle = _this._cachedStyles.unselectableItem;\n            }\n            else if (isSelected) {\n                itemStyle = _this._cachedStyles.selectedItem;\n            }\n            if (customItemStyle) {\n                itemStyle = mergeStyles(itemStyle, customItemStyle);\n            }\n            return (React.createElement(TreeNode, { itemKey: item.key, label: item.label, isFolder: item.isFolder, level: item.level, iconProps: item.iconProps, ariaLabel: item.ariaLabel, setSize: item.setSize, indexInParent: item.indexInParent, isSelectionDisabled: isSelectionDisabled, isDisabled: getItemIsDisabled && getItemIsDisabled(item), isSelected: isSelected, isExpanded: isExpanded, isFocusable: !item.disableFocus, isCollapsible: isCollapsible, moreIcon: _this.state.moreIcon, collapsedArrowIcon: _this.state.collapsedArrowIcon, hasCommands: getItemCommands && (!getItemHasCommands || getItemHasCommands(item)), getCommands: _this._getItemCommands, onRenderItemContainer: customItemContainerRender, onRenderItemLabel: customItemLabelRender, onRenderItemLabelContent: customItemLabelContentRender, onRenderExpandIcon: customExpandIconRender, onRenderContextualMenu: customContextualMenuRender, onSelected: _this._onItemSelected, onExpandToggled: _this._onExpandToggled, onDoubleClicked: _this._onDoubleClicked, onItemKeyDown: _this._onItemKeyDown, moreCommandsAriaLabel: item.moreCommandsAriaLabel || strings.moreCommandsAriaLabel, itemStyle: itemStyle, itemLabelStyle: _this._classNames.itemLabel, indentSpacerStyle: _this._classNames.levelIndentSpacer, menuButtonStyle: _this._classNames.menuButton, menuButtonOpenStyle: isSelected\n                    ? _this._classNames.menuButtonSelectedRowOpenMenu\n                    : _this._classNames.menuButtonUnselectedRowOpenMenu, menuButtonClosedStyle: isSelected\n                    ? _this._classNames.menuButtonSelectedRowClosedMenu\n                    : _this._classNames.menuButtonUnselectedRowClosedMenu, menuButtonDisabledStyle: _this._classNames.menuButtonDisabled, expandIconButtonStyle: isCollapsible ? _this._cachedStyles.expandIconButton : _this._cachedStyles.expandIconButtonDisabled, expandIconStyle: isExpanded ? _this._cachedStyles.expandIconExpanded : _this._classNames.expandIcon, noExpandIconStyle: _this._classNames.noExpandIcon, itemIconContainerStyle: _this._classNames.itemIconContainer, itemIconStyle: _this._classNames.itemIcon, noItemIconStyle: _this._classNames.noItemIcon }));\n        };\n        _this._getItemStyle = function (item) {\n            var getItemStyle = _this.props.getItemStyle;\n            if (getItemStyle) {\n                var _a = _this.state, selectedItemKeys = _a.selectedItemKeys, expandedItemKeys = _a.expandedItemKeys, keyToVisibleIndexMap = _a.keyToVisibleIndexMap;\n                var index = keyToVisibleIndexMap.get(item.key);\n                return getItemStyle(item, selectedItemKeys.has(item.key), expandedItemKeys.has(item.key), index);\n            }\n            return null;\n        };\n        _this._getItemCommands = function (itemKey) {\n            var getItemCommands = _this.props.getItemCommands;\n            var keyToItemMap = _this.state.keyToItemMap;\n            if (getItemCommands) {\n                var item = keyToItemMap.get(itemKey);\n                return getItemCommands(item);\n            }\n            return [];\n        };\n        _this._onItemSelected = function (itemKey, type) {\n            var onItemSelected = _this.props.onItemSelected;\n            var _a = _this.state, keyToItemMap = _a.keyToItemMap, selectedItemKeys = _a.selectedItemKeys;\n            var item = keyToItemMap.get(itemKey);\n            if (item.disableSelection) {\n                return;\n            }\n            if (onItemSelected) {\n                var _b = _this.state, expandedItemKeys = _b.expandedItemKeys, keyToVisibleIndexMap = _b.keyToVisibleIndexMap;\n                var index = keyToVisibleIndexMap.get(itemKey);\n                onItemSelected(item, type, selectedItemKeys.has(itemKey), expandedItemKeys.has(itemKey), index);\n            }\n            // Check if selection is being treated as uncontrolled\n            if (!_this.props.selectedItemKeys) {\n                var newSelectedItemKeys = void 0;\n                if (type === SelectionType.Toggle) {\n                    newSelectedItemKeys = _this._cloneSet(selectedItemKeys);\n                    if (selectedItemKeys.has(itemKey)) {\n                        newSelectedItemKeys.delete(itemKey);\n                    }\n                    else {\n                        newSelectedItemKeys.add(itemKey);\n                    }\n                }\n                else {\n                    // TODO: add proper support for SelectionType.Block.\n                    newSelectedItemKeys = new Set();\n                    newSelectedItemKeys.add(itemKey);\n                }\n                _this.setState({ selectedItemKeys: newSelectedItemKeys });\n            }\n        };\n        _this._onRenderItemContainer = function (itemKey, defaultRender) {\n            var onRenderItemContainer = _this.props.onRenderItemContainer;\n            var _a = _this.state, keyToItemMap = _a.keyToItemMap, selectedItemKeys = _a.selectedItemKeys, expandedItemKeys = _a.expandedItemKeys, keyToVisibleIndexMap = _a.keyToVisibleIndexMap;\n            var item = keyToItemMap.get(itemKey);\n            var index = keyToVisibleIndexMap.get(itemKey);\n            return onRenderItemContainer(item, selectedItemKeys.has(itemKey), expandedItemKeys.has(itemKey), index, defaultRender);\n        };\n        _this._onRenderItemLabel = function (itemKey, defaultRender) {\n            var onRenderItemLabel = _this.props.onRenderItemLabel;\n            var _a = _this.state, keyToItemMap = _a.keyToItemMap, selectedItemKeys = _a.selectedItemKeys, expandedItemKeys = _a.expandedItemKeys, keyToVisibleIndexMap = _a.keyToVisibleIndexMap;\n            var item = keyToItemMap.get(itemKey);\n            var index = keyToVisibleIndexMap.get(itemKey);\n            return onRenderItemLabel(item, selectedItemKeys.has(itemKey), expandedItemKeys.has(itemKey), index, defaultRender);\n        };\n        _this._onRenderItemLabelContent = function (itemKey, defaultRender) {\n            var onRenderItemLabelContent = _this.props.onRenderItemLabelContent;\n            var _a = _this.state, keyToItemMap = _a.keyToItemMap, selectedItemKeys = _a.selectedItemKeys, expandedItemKeys = _a.expandedItemKeys, keyToVisibleIndexMap = _a.keyToVisibleIndexMap;\n            var item = keyToItemMap.get(itemKey);\n            var index = keyToVisibleIndexMap.get(itemKey);\n            return onRenderItemLabelContent(item, selectedItemKeys.has(itemKey), expandedItemKeys.has(itemKey), index, defaultRender);\n        };\n        _this._onRenderExpandIcon = function (itemKey, defaultRender) {\n            var onRenderExpandIcon = _this.props.onRenderExpandIcon;\n            var _a = _this.state, keyToItemMap = _a.keyToItemMap, selectedItemKeys = _a.selectedItemKeys, expandedItemKeys = _a.expandedItemKeys, keyToVisibleIndexMap = _a.keyToVisibleIndexMap;\n            var item = keyToItemMap.get(itemKey);\n            var index = keyToVisibleIndexMap.get(itemKey);\n            return onRenderExpandIcon(item, selectedItemKeys.has(itemKey), expandedItemKeys.has(itemKey), index, defaultRender);\n        };\n        _this._onRenderContextualMenu = function (itemKey, menuProps) {\n            var onRenderContextualMenu = _this.props.onRenderContextualMenu;\n            var _a = _this.state, keyToItemMap = _a.keyToItemMap, selectedItemKeys = _a.selectedItemKeys, expandedItemKeys = _a.expandedItemKeys, keyToVisibleIndexMap = _a.keyToVisibleIndexMap;\n            var item = keyToItemMap.get(itemKey);\n            var index = keyToVisibleIndexMap.get(itemKey);\n            return onRenderContextualMenu(item, selectedItemKeys.has(itemKey), expandedItemKeys.has(itemKey), index, menuProps);\n        };\n        _this._onItemKeyDown = function (itemKey, event) {\n            var onItemKeyDown = _this.props.onItemKeyDown;\n            var keyToItemMap = _this.state.keyToItemMap;\n            var item = keyToItemMap.get(itemKey);\n            if (onItemKeyDown) {\n                var _a = _this.state, selectedItemKeys = _a.selectedItemKeys, expandedItemKeys = _a.expandedItemKeys, keyToVisibleIndexMap = _a.keyToVisibleIndexMap;\n                var index = keyToVisibleIndexMap.get(itemKey);\n                return onItemKeyDown(item, selectedItemKeys.has(itemKey), expandedItemKeys.has(itemKey), index, event);\n            }\n        };\n        _this._onExpandToggled = function (itemKey) {\n            var _a = _this.props, onItemCollapse = _a.onItemCollapse, onItemExpand = _a.onItemExpand;\n            var _b = _this.state, keyToItemMap = _b.keyToItemMap, keyToVisibleIndexMap = _b.keyToVisibleIndexMap, expandedItemKeys = _b.expandedItemKeys;\n            var item = keyToItemMap.get(itemKey);\n            var isExpanded = expandedItemKeys.has(itemKey);\n            var index = keyToVisibleIndexMap.get(itemKey);\n            var callbackToUse = isExpanded ? onItemCollapse : onItemExpand;\n            if (callbackToUse) {\n                callbackToUse(item, index);\n            }\n            // Check if expansion is being treated as uncontrolled\n            if (!_this.props.expandedItemKeys) {\n                var newExpandedItemKeys_1 = _this._cloneSet(expandedItemKeys);\n                if (isExpanded) {\n                    newExpandedItemKeys_1.delete(itemKey);\n                }\n                else {\n                    newExpandedItemKeys_1.add(itemKey);\n                }\n                _this.setState(function (prevState) {\n                    return TreeBase_1._getStateFromProps(_this.props, __assign(__assign({}, prevState), { expandedItemKeys: newExpandedItemKeys_1, areExpandedItemsDirty: true }));\n                });\n            }\n        };\n        _this._onDoubleClicked = function (itemKey) {\n            var onItemDoubleClicked = _this.props.onItemDoubleClicked;\n            var keyToItemMap = _this.state.keyToItemMap;\n            var item = keyToItemMap.get(itemKey);\n            if (onItemDoubleClicked) {\n                var _a = _this.state, selectedItemKeys = _a.selectedItemKeys, expandedItemKeys = _a.expandedItemKeys, keyToVisibleIndexMap = _a.keyToVisibleIndexMap;\n                var index = keyToVisibleIndexMap.get(itemKey);\n                onItemDoubleClicked(item, selectedItemKeys.has(itemKey), expandedItemKeys.has(itemKey), index);\n            }\n        };\n        _this._saveListRef = function (ref) {\n            _this._list = ref;\n            _this._applyPendingScroll();\n        };\n        _this._applyPendingScroll = function () {\n            var index = _this._getSelectedIndex();\n            if (_this._isPendingScrollToSelected && _this._list && index) {\n                _this._list.scrollToIndex(index, function () { return _this._getNodeHeight(_this.props); });\n                _this._isPendingScrollToSelected = false;\n            }\n        };\n        /**\n         * Gets the index of the first selected item\n         */\n        _this._getSelectedIndex = function () {\n            var items = _this.props.items;\n            return items && findIndex(items, function (item) { return _this.state.selectedItemKeys.has(item.key); });\n        };\n        // This method is necessary for List.scrollToIndex to behave correctly while loading.\n        _this._getPageHeight = function () {\n            return defaultItemsPerPage * _this._getNodeHeight(_this.props);\n        };\n        _this._getVisibleItems = function (items) {\n            _this._visibleIndexByItem = {};\n            var visibleIndex = 0;\n            var visibleItems = [];\n            var lastCollapsedLevel = maxInt;\n            items.forEach(function (item, index) {\n                if (item.level <= lastCollapsedLevel) {\n                    if (_this.state.expandedItemKeys.has(item.key)) {\n                        lastCollapsedLevel = maxInt;\n                    }\n                    else {\n                        lastCollapsedLevel = item.level;\n                    }\n                    visibleItems.push(item);\n                    _this._visibleIndexByItem[item.key] = visibleIndex++;\n                }\n            });\n            return visibleItems;\n        };\n        var initialSelectedItemKeys = new Set();\n        if (props.initialSelectedItemKeys) {\n            props.initialSelectedItemKeys.forEach(function (key) { return initialSelectedItemKeys.add(key); });\n        }\n        var initialExpandedItemKeys = new Set();\n        if (props.initialExpandedItemKeys) {\n            props.initialExpandedItemKeys.forEach(function (key) { return initialExpandedItemKeys.add(key); });\n        }\n        _this.state = TreeBase_1._getStateFromProps(props, {\n            items: [],\n            visibleItems: [],\n            visibleItemKeys: new Set(),\n            cachedItemKeys: new Set(),\n            keyToItemMap: new Map(),\n            keyToVisibleIndexMap: new Map(),\n            selectedItemKeys: initialSelectedItemKeys,\n            expandedItemKeys: initialExpandedItemKeys,\n            areExpandedItemsDirty: true,\n            moreIcon: 'More',\n            collapsedArrowIcon: 'ChevronRight'\n        });\n        return _this;\n    }\n    TreeBase_1 = TreeBase;\n    TreeBase._getStateFromProps = function (nextProps, prevState) {\n        var newState = prevState;\n        var iconsProp = nextProps.icons;\n        var itemsHaveChanged = nextProps.items !== prevState.items;\n        var expandedItemKeysHaveChanged = prevState.areExpandedItemsDirty ||\n            (nextProps.expandedItemKeys && nextProps.expandedItemKeys !== prevState.expandedItemKeys);\n        newState.items = nextProps.items;\n        newState.areExpandedItemsDirty = false;\n        if (nextProps.selectedItemKeys) {\n            newState.selectedItemKeys = nextProps.selectedItemKeys;\n        }\n        if (nextProps.expandedItemKeys) {\n            newState.expandedItemKeys = nextProps.expandedItemKeys;\n        }\n        if (iconsProp) {\n            if (iconsProp.more && iconsProp.more !== prevState.moreIcon) {\n                newState.moreIcon = iconsProp.more;\n            }\n            if (iconsProp.collapsedArrow && iconsProp.collapsedArrow !== prevState.collapsedArrowIcon) {\n                newState.collapsedArrowIcon = iconsProp.collapsedArrow;\n            }\n        }\n        if (itemsHaveChanged || expandedItemKeysHaveChanged) {\n            var keyToVisibleIndexMap_1 = new Map();\n            var visibleItemKeys_1 = new Set();\n            var visibleItems_1 = [];\n            var keyToItemMap_1 = itemsHaveChanged ? new Map() : null;\n            var cachedItemKeys_1 = itemsHaveChanged ? new Set() : newState.cachedItemKeys;\n            var lastCollapsedLevel_1 = maxInt;\n            var visibleIndex_1 = 0;\n            nextProps.items.forEach(function (item, index) {\n                if (keyToItemMap_1) {\n                    keyToItemMap_1.set(item.key, item);\n                }\n                if (item.level <= lastCollapsedLevel_1) {\n                    if (newState.expandedItemKeys.has(item.key)) {\n                        lastCollapsedLevel_1 = maxInt;\n                    }\n                    else {\n                        lastCollapsedLevel_1 = item.level;\n                    }\n                    if (visibleItems_1) {\n                        visibleItems_1.push(item);\n                    }\n                    else {\n                        cachedItemKeys_1.add(item.key);\n                    }\n                    visibleItemKeys_1.add(item.key);\n                    keyToVisibleIndexMap_1.set(item.key, visibleIndex_1++);\n                }\n            });\n            newState.keyToVisibleIndexMap = keyToVisibleIndexMap_1;\n            newState.visibleItemKeys = visibleItemKeys_1;\n            if (visibleItems_1) {\n                newState.visibleItems = visibleItems_1;\n            }\n            if (keyToItemMap_1) {\n                newState.keyToItemMap = keyToItemMap_1;\n            }\n            if (cachedItemKeys_1) {\n                newState.cachedItemKeys = cachedItemKeys_1;\n            }\n        }\n        return newState;\n    };\n    TreeBase.getDerivedStateFromProps = function (nextProps, prevState) {\n        if (!prevState) {\n            return null;\n        }\n        return TreeBase_1._getStateFromProps(nextProps, prevState);\n    };\n    TreeBase.prototype.componentDidUpdate = function () {\n        this._applyPendingScroll();\n    };\n    TreeBase.prototype.render = function () {\n        this._classNames = this._getClassNames(this.props);\n        return (React.createElement(\"div\", { className: mergeStyles(this._classNames.root) },\n            React.createElement(\"div\", { className: mergeStyles(this._classNames.innerRoot) },\n                React.createElement(FocusZone, { componentRef: this._focusZone, direction: FocusZoneDirection.vertical, className: this._classNames.focusZone }, this._renderScrollViewAndList()))));\n    };\n    /**\n     * Sets focus to the first tree node.\n     */\n    TreeBase.prototype.focus = function () {\n        if (this._focusZone.current) {\n            this._focusZone.current.focus();\n        }\n    };\n    TreeBase.prototype._getKey = function (item) {\n        return item.key;\n    };\n    TreeBase.prototype._cloneSet = function (set) {\n        var newSet = new Set();\n        set.forEach(function (key) { return newSet.add(key); });\n        return newSet;\n    };\n    TreeBase.prototype._getNodeHeight = function (props) {\n        var nodeHeight = props.nodeHeight;\n        return nodeHeight === undefined || nodeHeight === null ? defaultNodeHeight : nodeHeight;\n    };\n    TreeBase.prototype._getIconWidth = function (props) {\n        var iconWidth = props.iconWidth;\n        return iconWidth === undefined || iconWidth === null ? defaultIconWidth : iconWidth;\n    };\n    TreeBase.prototype._getClassNames = function (props) {\n        var className = props.className, theme = props.theme;\n        var classNames = getClassNames(props.styles, {\n            className: className,\n            theme: theme,\n            nodeHeight: this._getNodeHeight(props),\n            iconWidth: this._getIconWidth(props)\n        });\n        var unselectableItem = mergeStyles(classNames.item, classNames.itemIsNotSelected, classNames.itemIsNotSelectable);\n        var item = mergeStyles(classNames.item, classNames.itemIsSelectable, classNames.itemIsNotSelected);\n        var selectedItem = mergeStyles(classNames.item, classNames.itemIsSelectable, classNames.itemIsSelected);\n        var expandIconExpanded = mergeStyles(classNames.expandIcon, classNames.expandIconExpanded);\n        var expandIconButton = mergeStyles(classNames.expandIconButton, classNames.expandIconButtonEnabled);\n        var expandIconButtonDisabled = mergeStyles(classNames.expandIconButton, classNames.expandIconButtonDisabled);\n        this._cachedStyles = {\n            unselectableItem: unselectableItem,\n            item: item,\n            selectedItem: selectedItem,\n            expandIconExpanded: expandIconExpanded,\n            expandIconButton: expandIconButton,\n            expandIconButtonDisabled: expandIconButtonDisabled\n        };\n        return classNames;\n    };\n    var TreeBase_1;\n    TreeBase = TreeBase_1 = __decorate([\n        customizable('Tree', ['theme', 'styles'])\n    ], TreeBase);\n    return TreeBase;\n}(BaseComponent));\nexport { TreeBase };\n//# sourceMappingURL=Tree.base.js.map"]},"metadata":{},"sourceType":"module"}